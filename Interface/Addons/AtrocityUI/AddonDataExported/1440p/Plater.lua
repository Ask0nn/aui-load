local atrocityUI = select(2, ...)
atrocityUI.PlaterDB["1440p"] = {
	["captured_spells"] = {
		[378850] = {
			["source"] = "Destabilized Elemental",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 181536,
		},
		[411236] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[199373] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Army of the Dead",
			["npcID"] = 24207,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[389435] = {
			["source"] = "Darktooth Spirit-Caller",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195267,
		},
		[59638] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[53271] = {
			["isChanneled"] = false,
			["source"] = "Umbra'jin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[172567] = {
			["isChanneled"] = false,
			["source"] = "Frostwall Grunt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81368,
		},
		[157331] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Greater Storm Elemental",
			["npcID"] = 77936,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[134477] = {
			["isChanneled"] = false,
			["source"] = "Flaamawl",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[387398] = {
			["isChanneled"] = false,
			["source"] = "Obsidian Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189489,
		},
		[411241] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[402253] = {
			["source"] = "Ray of Anguish",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 202167,
		},
		[272012] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Illidari Satyr",
			["npcID"] = 136398,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[401680] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Arcane Image",
			["npcID"] = 201955,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[389249] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Snoozy Clickclock",
			["npcID"] = 191039,
		},
		[272013] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Vicious Hellhound",
			["npcID"] = 136399,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[267997] = {
			["source"] = "Vilefiend",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 135816,
		},
		[263854] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ronipastrami",
			["npcID"] = 165189,
		},
		[401810] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[267999] = {
			["isChanneled"] = false,
			["source"] = "Vilefiend",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 135816,
		},
		[17253] = {
			["isChanneled"] = false,
			["source"] = "Guppi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[17767] = {
			["isChanneled"] = false,
			["source"] = "Makgorg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[404425] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Desolate Blossom",
			["npcID"] = 202910,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[3110] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pippik",
			["npcID"] = 58959,
		},
		[317791] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[198837] = {
			["isChanneled"] = false,
			["source"] = "Risen Skulker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 99541,
		},
		[377589] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[317792] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[16827] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ronipastrami",
			["npcID"] = 165189,
		},
		[115804] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[403284] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[372557] = {
			["source"] = "Darktooth Howler",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195273,
		},
		[401500] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[58867] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Spirit Wolf",
			["npcID"] = 29264,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[12169] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mine Guard",
			["npcID"] = 82333,
		},
		[49966] = {
			["isChanneled"] = false,
			["source"] = "MistMarauder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[30151] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Unknown",
			["npcID"] = 17252,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[404754] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Null Glimmer",
			["npcID"] = 202971,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[400802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kalecgos",
			["npcID"] = 187676,
		},
		[413106] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "BUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[384993] = {
			["source"] = "Gareed",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200722,
		},
		[160018] = {
			["isChanneled"] = false,
			["source"] = "Guppi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[401951] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[406989] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[410625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[327942] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Windfury Totem",
			["npcID"] = 6112,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[403741] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[401383] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[24450] = {
			["isChanneled"] = false,
			["source"] = "Frank",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[167385] = {
			["isChanneled"] = false,
			["source"] = "Boulderfist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189617,
		},
		[97097] = {
			["source"] = "Benjamin Brode",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 88779,
		},
		[89766] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Felguard",
			["npcID"] = 17252,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[166302] = {
			["source"] = "Blingtron 6000",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 101527,
		},
		[89798] = {
			["source"] = "Lord Victor Nefarius",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 49799,
		},
		[12024] = {
			["isChanneled"] = false,
			["source"] = "Scalesworn Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184170,
		},
		[401642] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[410631] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[405022] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[401325] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[89751] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Unknown",
			["npcID"] = 17252,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[104318] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Wild Imp",
			["npcID"] = 143622,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[186258] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "AJ",
			["npcID"] = 165189,
		},
		[386601] = {
			["source"] = "Zurilshak",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[2649] = {
			["isChanneled"] = false,
			["source"] = "MistMarauder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[224126] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[157348] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Greater Storm Elemental",
			["npcID"] = 77936,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[212460] = {
			["isChanneled"] = false,
			["source"] = "Fel Lord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 107024,
		},
		[373279] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Thing From Beyond",
			["npcID"] = 189988,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[403497] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Astral Formation",
			["npcID"] = 202668,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[403625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[54216] = {
			["isChanneled"] = false,
			["source"] = "Umbra'jin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[401905] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[334713] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Ur'zul",
			["npcID"] = 136402,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[386542] = {
			["source"] = "Zurilshak",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[404456] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[36213] = {
			["isChanneled"] = false,
			["source"] = "Greater Earth Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95072,
		},
		[188046] = {
			["isChanneled"] = false,
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198489,
		},
		[198533] = {
			["isChanneled"] = false,
			["source"] = "Jade Serpent Statue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 60849,
		},
		[108446] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Haazeras",
			["npcID"] = 17252,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[54049] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thoodom",
			["npcID"] = 417,
		},
		[89753] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Unknown",
			["npcID"] = 17252,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[200218] = {
			["isChanneled"] = false,
			["source"] = "Reaves",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 101462,
		},
		[410642] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[228050] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guardian of the Forgotten Queen",
			["npcID"] = 114565,
		},
		[171982] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[5672] = {
			["isChanneled"] = false,
			["source"] = "Healing Stream Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3527,
		},
		[167381] = {
			["isChanneled"] = false,
			["source"] = "Boulderfist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189617,
		},
		[116947] = {
			["source"] = "Earthgrab Totem",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 60561,
		},
		[389541] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "White Tiger Statue",
			["npcID"] = 196581,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[3600] = {
			["isChanneled"] = false,
			["source"] = "Earthbind Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2630,
		},
		[201754] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Umbra'jin",
			["npcID"] = 165189,
		},
		[62305] = {
			["isChanneled"] = false,
			["source"] = "Umbra'jin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[263892] = {
			["isChanneled"] = false,
			["source"] = "Chuu",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[7870] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unknown",
			["npcID"] = 184600,
		},
		[272435] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Darkhound",
			["npcID"] = 136408,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[386195] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "BUFF",
			["source"] = "Dreadstalker",
			["npcID"] = 98035,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[261616] = {
			["isChanneled"] = false,
			["source"] = "Katy Stampwhistle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 132969,
		},
		[224125] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[224127] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[33967] = {
			["source"] = "Vanndar Stormpike",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11948,
		},
		[90328] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hati",
			["npcID"] = 165189,
		},
		[17735] = {
			["isChanneled"] = false,
			["source"] = "Makgorg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[112042] = {
			["isChanneled"] = false,
			["source"] = "Makgorg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[176458] = {
			["source"] = "Blacksmithing Follower - Horde",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 88402,
		},
		[193635] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Void Tendril",
			["npcID"] = 192337,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[401525] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[404027] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[196816] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Divine Image",
			["npcID"] = 198236,
		},
		[29882] = {
			["source"] = "Arcane Anomaly",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 16488,
		},
		[61684] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ronipastrami",
			["npcID"] = 165189,
		},
		[272439] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Ur'zul",
			["npcID"] = 136402,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[192226] = {
			["isChanneled"] = false,
			["source"] = "Liquid Magma Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 97369,
		},
		[6360] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Unknown",
			["npcID"] = 184600,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[405486] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Hurtling Barrage",
			["npcID"] = 203249,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[402050] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[282449] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Akaari's Soul",
			["npcID"] = 144961,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[320763] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Mana Tide Totem",
			["npcID"] = 10467,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[403771] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[51963] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[385023] = {
			["source"] = "Russet Mudwalker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 189841,
		},
		[7814] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Unknown",
			["npcID"] = 184600,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[404269] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[19483] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Infernal",
			["npcID"] = 89,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[270481] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Demonic Tyrant",
			["npcID"] = 135002,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[158982] = {
			["isChanneled"] = false,
			["source"] = "Frostwall Goren",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81362,
		},
		[260249] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "AJ",
			["npcID"] = 165189,
		},
		[264667] = {
			["source"] = "MistMarauder",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[30213] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Felguard",
			["npcID"] = 17252,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[408422] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[192082] = {
			["source"] = "Wind Rush Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 97285,
		},
		[410654] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[227291] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Niuzao",
			["npcID"] = 73967,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[208963] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Skyfury Totem",
			["npcID"] = 105427,
		},
		[404403] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[392375] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["npcID"] = 29264,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[193473] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Void Tendril",
			["npcID"] = 192337,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[378143] = {
			["isChanneled"] = false,
			["source"] = "Primalist Infiltrator",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189895,
		},
		[1604] = {
			["source"] = "Primalist Infiltrator",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191841,
		},
		[386176] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "BUFF",
			["source"] = "Haazeras",
			["npcID"] = 17252,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[81262] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Efflorescence",
			["npcID"] = 47649,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[201633] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "BUFF",
			["source"] = "Earthen Wall Totem",
			["npcID"] = 100943,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[272167] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Bilescourge",
			["npcID"] = 136404,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[403517] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[402051] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[394975] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Void Lasher",
			["npcID"] = 198757,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[57984] = {
			["isChanneled"] = false,
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95061,
		},
		[401330] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[272172] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Shivarra",
			["npcID"] = 136406,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[394976] = {
			["isChanneled"] = false,
			["source"] = "Void Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198757,
		},
		[3716] = {
			["isChanneled"] = false,
			["source"] = "Makgorg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[173584] = {
			["source"] = "Human Nemesis",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 86721,
		},
		[272432] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Wrathguard",
			["npcID"] = 136407,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[383061] = {
			["isChanneled"] = false,
			["source"] = "Liquid Magma Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 97369,
		},
		[272131] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Eye of Gul'dan",
			["npcID"] = 136401,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[403520] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[408429] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["type"] = "DEBUFF",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2685,
		},
		[272156] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Void Terror",
			["npcID"] = 136403,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[198839] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Earthen Wall Totem",
			["npcID"] = 100943,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[343737] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Yu'lon",
			["npcID"] = 165374,
		},
		[127801] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Turnip Punching Bag",
			["npcID"] = 65310,
		},
	},
	["profiles"] = {
		["AtrocityUI"] = {
			["focus_as_target_alpha"] = true,
			["extra_icon_use_blizzard_border_color"] = false,
			["aura_sort"] = true,
			["saved_cvars_last_change"] = {
				["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4705: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4703: in function <Interface/AddOns/Plater/Plater.lua:4703>\n",
				["nameplateShowOnlyNames"] = "Interface\\AddOns\\WeakAuras\\AuraEnvironment.lua:297",
				["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4707: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4703: in function <Interface/AddOns/Plater/Plater.lua:4703>\n",
				["NamePlateClassificationScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1442",
				["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4706: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4703: in function <Interface/AddOns/Plater/Plater.lua:4703>\n",
				["NamePlateHorizontalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1440",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6522",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
				["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
				["NamePlateVerticalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1441",
			},
			["aura_cache_by_name"] = {
				["ultimate form"] = {
					323095, -- [1]
					323524, -- [2]
				},
				["insidious chill"] = {
					391566, -- [1]
					391568, -- [2]
				},
				["fear"] = {
					5782, -- [1]
					12096, -- [2]
					12542, -- [3]
					22678, -- [4]
					26070, -- [5]
					26580, -- [6]
					26661, -- [7]
					27641, -- [8]
					27990, -- [9]
					29168, -- [10]
					29321, -- [11]
					30002, -- [12]
					30530, -- [13]
					30584, -- [14]
					30615, -- [15]
					31358, -- [16]
					31970, -- [17]
					32241, -- [18]
					33547, -- [19]
					33924, -- [20]
					34259, -- [21]
					38154, -- [22]
					38595, -- [23]
					38660, -- [24]
					39119, -- [25]
					39176, -- [26]
					39210, -- [27]
					39415, -- [28]
					41150, -- [29]
					46561, -- [30]
					51240, -- [31]
					59669, -- [32]
					65809, -- [33]
					68950, -- [34]
					70171, -- [35]
					81442, -- [36]
					83613, -- [37]
					113712, -- [38]
					115186, -- [39]
					117573, -- [40]
					118699, -- [41]
					125204, -- [42]
					128098, -- [43]
					130616, -- [44]
					130940, -- [45]
					134938, -- [46]
					142884, -- [47]
					144062, -- [48]
					173093, -- [49]
					182806, -- [50]
					204730, -- [51]
					205398, -- [52]
					214304, -- [53]
					220540, -- [54]
					221424, -- [55]
					223170, -- [56]
					240136, -- [57]
					242084, -- [58]
					242739, -- [59]
					245902, -- [60]
					246277, -- [61]
					246307, -- [62]
					248028, -- [63]
					251419, -- [64]
					259874, -- [65]
					259995, -- [66]
					266918, -- [67]
					287685, -- [68]
					287687, -- [69]
					288545, -- [70]
					331741, -- [71]
					342914, -- [72]
					344887, -- [73]
				},
				["exsanguinated"] = {
					294100, -- [1]
					328897, -- [2]
					356372, -- [3]
				},
				["celestial alignment"] = {
					173562, -- [1]
					194223, -- [2]
				},
				["flame dominance"] = {
					374881, -- [1]
					396056, -- [2]
					396062, -- [3]
					396105, -- [4]
					396106, -- [5]
				},
				["cloak of shadows"] = {
					31224, -- [1]
					39666, -- [2]
					65961, -- [3]
					81549, -- [4]
					178055, -- [5]
					196518, -- [6]
					248773, -- [7]
					283106, -- [8]
					283108, -- [9]
					333920, -- [10]
				},
				["loyal beasts"] = {
					326450, -- [1]
				},
				["commanding presence"] = {
					328839, -- [1]
					330545, -- [2]
					330546, -- [3]
				},
				["blessing of freedom"] = {
					1044, -- [1]
					234878, -- [2]
					262618, -- [3]
					299256, -- [4]
					305395, -- [5]
				},
				["ice barrier"] = {
					11426, -- [1]
					33245, -- [2]
					69787, -- [3]
					198094, -- [4]
					201565, -- [5]
					240074, -- [6]
					262251, -- [7]
					264458, -- [8]
					267504, -- [9]
					284882, -- [10]
				},
				["nether ward"] = {
					212295, -- [1]
				},
				["spectral"] = {
					290506, -- [1]
					344739, -- [2]
					346603, -- [3]
				},
				["concentrated flame"] = {
					295368, -- [1]
					295373, -- [2]
					295374, -- [3]
					295375, -- [4]
					295376, -- [5]
					295377, -- [6]
					295378, -- [7]
					295379, -- [8]
					295380, -- [9]
					295384, -- [10]
					299349, -- [11]
					299353, -- [12]
					302564, -- [13]
				},
				["frost dominance"] = {
					374916, -- [1]
					396072, -- [2]
					396074, -- [3]
					396108, -- [4]
					396109, -- [5]
				},
				["chaos brand"] = {
					1490, -- [1]
					255260, -- [2]
					281242, -- [3]
				},
				["whip rage"] = {
					29340, -- [1]
					233210, -- [2]
				},
				["bursting with pride"] = {
					340873, -- [1]
					342332, -- [2]
				},
				["entangling roots"] = {
					339, -- [1]
					11922, -- [2]
					12747, -- [3]
					20654, -- [4]
					20699, -- [5]
					21331, -- [6]
					22127, -- [7]
					22415, -- [8]
					22800, -- [9]
					24648, -- [10]
					26071, -- [11]
					28858, -- [12]
					31287, -- [13]
					32173, -- [14]
					33844, -- [15]
					37823, -- [16]
					40363, -- [17]
					57095, -- [18]
					65857, -- [19]
					66070, -- [20]
					66967, -- [21]
					96633, -- [22]
					101155, -- [23]
					105143, -- [24]
					132743, -- [25]
					149065, -- [26]
					168248, -- [27]
					170855, -- [28]
					173089, -- [29]
					177606, -- [30]
					177607, -- [31]
					186456, -- [32]
					196216, -- [33]
					201192, -- [34]
					201589, -- [35]
					233873, -- [36]
					235963, -- [37]
					247564, -- [38]
					272681, -- [39]
					278176, -- [40]
					288581, -- [41]
					311634, -- [42]
					311761, -- [43]
					330873, -- [44]
					343238, -- [45]
				},
				["guardian spirit"] = {
					47788, -- [1]
					48153, -- [2]
					97983, -- [3]
					122845, -- [4]
					255312, -- [5]
					289623, -- [6]
					289626, -- [7]
				},
				["drain soul"] = {
					32862, -- [1]
					35839, -- [2]
					60452, -- [3]
					74402, -- [4]
					79094, -- [5]
					129562, -- [6]
					136378, -- [7]
					139420, -- [8]
					161718, -- [9]
					171893, -- [10]
					181965, -- [11]
					182065, -- [12]
					185181, -- [13]
					190711, -- [14]
					197801, -- [15]
					198590, -- [16]
					205292, -- [17]
					209200, -- [18]
					209264, -- [19]
					231853, -- [20]
					242938, -- [21]
					251528, -- [22]
					328785, -- [23]
					346562, -- [24]
				},
				["divine protection"] = {
					498, -- [1]
					13007, -- [2]
					27778, -- [3]
					27779, -- [4]
					138250, -- [5]
					149150, -- [6]
					174967, -- [7]
					174968, -- [8]
					174987, -- [9]
					288292, -- [10]
					288294, -- [11]
				},
				["hungering void"] = {
					339426, -- [1]
					339958, -- [2]
					339969, -- [3]
					339980, -- [4]
					345218, -- [5]
					345219, -- [6]
				},
				["power word: shield"] = {
					17, -- [1]
					11647, -- [2]
					11835, -- [3]
					11974, -- [4]
					17139, -- [5]
					20697, -- [6]
					22187, -- [7]
					27607, -- [8]
					29408, -- [9]
					32595, -- [10]
					35944, -- [11]
					36052, -- [12]
					41373, -- [13]
					44175, -- [14]
					44291, -- [15]
					46193, -- [16]
					66099, -- [17]
					71548, -- [18]
					71780, -- [19]
					83842, -- [20]
					84039, -- [21]
					102409, -- [22]
					113734, -- [23]
					122808, -- [24]
					123258, -- [25]
					127399, -- [26]
					135313, -- [27]
					136100, -- [28]
					165718, -- [29]
					211558, -- [30]
					226076, -- [31]
					248441, -- [32]
					284471, -- [33]
					318158, -- [34]
					344426, -- [35]
				},
				["defensive stance"] = {
					7164, -- [1]
					41101, -- [2]
					53790, -- [3]
					143593, -- [4]
					145044, -- [5]
					146127, -- [6]
					147925, -- [7]
					164363, -- [8]
					193580, -- [9]
					197690, -- [10]
					212520, -- [11]
					219484, -- [12]
					238245, -- [13]
				},
				["spell reflection"] = {
					9943, -- [1]
					10074, -- [2]
					21118, -- [3]
					23920, -- [4]
					31533, -- [5]
					31534, -- [6]
					31554, -- [7]
					33961, -- [8]
					34783, -- [9]
					35399, -- [10]
					36096, -- [11]
					37885, -- [12]
					38331, -- [13]
					38592, -- [14]
					38599, -- [15]
					43443, -- [16]
					47981, -- [17]
					57643, -- [18]
					146120, -- [19]
					146122, -- [20]
					147923, -- [21]
					169339, -- [22]
					186704, -- [23]
					186705, -- [24]
					186706, -- [25]
					224740, -- [26]
					329267, -- [27]
					335255, -- [28]
				},
				["guessing game"] = {
					321471, -- [1]
					336499, -- [2]
				},
				["alter time"] = {
					108978, -- [1]
					110909, -- [2]
					127140, -- [3]
					342245, -- [4]
					342246, -- [5]
					342247, -- [6]
					347402, -- [7]
				},
				["ancient flame"] = {
					144691, -- [1]
					144695, -- [2]
					144699, -- [3]
					295365, -- [4]
					295367, -- [5]
					295369, -- [6]
					295372, -- [7]
					295381, -- [8]
					299348, -- [9]
					299350, -- [10]
					303380, -- [11]
					369990, -- [12]
					375583, -- [13]
				},
				["blessing of sacrifice"] = {
					6940, -- [1]
					199448, -- [2]
					200327, -- [3]
				},
				["scouring touch"] = {
					356329, -- [1]
				},
				["pistol shot"] = {
					185763, -- [1]
					207820, -- [2]
					214779, -- [3]
					223933, -- [4]
					240073, -- [5]
					255966, -- [6]
					267241, -- [7]
					267452, -- [8]
					268229, -- [9]
					274253, -- [10]
					275000, -- [11]
					285167, -- [12]
					294934, -- [13]
				},
				["morbid fixation"] = {
					338504, -- [1]
					338606, -- [2]
					338610, -- [3]
					343555, -- [4]
					343556, -- [5]
					343558, -- [6]
				},
				["enveloping mist"] = {
					124682, -- [1]
					209193, -- [2]
					212414, -- [3]
					227345, -- [4]
					231605, -- [5]
					274062, -- [6]
					317602, -- [7]
					344008, -- [8]
					344240, -- [9]
				},
				["coordinated assault"] = {
					266779, -- [1]
				},
				["selfless healer"] = {
					85804, -- [1]
					114250, -- [2]
					128863, -- [3]
					216777, -- [4]
				},
				["eternal torment"] = {
					292926, -- [1]
					295777, -- [2]
					318449, -- [3]
					318450, -- [4]
					318451, -- [5]
					318464, -- [6]
					350075, -- [7]
					355790, -- [8]
					358962, -- [9]
				},
				["effusive anima accelerator"] = {
					352188, -- [1]
					353248, -- [2]
					353349, -- [3]
					360277, -- [4]
				},
				["dampen harm"] = {
					122278, -- [1]
					123715, -- [2]
					175395, -- [3]
				},
				["dream delver"] = {
					352786, -- [1]
					353353, -- [2]
					353354, -- [3]
				},
				["haunted urn"] = {
					228626, -- [1]
					348723, -- [2]
				},
				["pillar of frost"] = {
					51271, -- [1]
					167171, -- [2]
					281214, -- [3]
					316849, -- [4]
				},
				["arcane intellect"] = {
					1459, -- [1]
					13326, -- [2]
					36880, -- [3]
					45525, -- [4]
					129171, -- [5]
					266499, -- [6]
					367803, -- [7]
				},
				["spiritwalker's grace"] = {
					79206, -- [1]
				},
				["dark soul: instability"] = {
					113858, -- [1]
				},
				["weapons of order"] = {
					310454, -- [1]
					311054, -- [2]
					311075, -- [3]
					311123, -- [4]
					312106, -- [5]
					312951, -- [6]
					314473, -- [7]
				},
				["astral shift"] = {
					74312, -- [1]
					108271, -- [2]
					263786, -- [3]
					292158, -- [4]
					343196, -- [5]
				},
				["divine favor"] = {
					210294, -- [1]
					210303, -- [2]
				},
				["spiteful"] = {
					338510, -- [1]
				},
				["touch of karma"] = {
					122470, -- [1]
					124280, -- [2]
					125174, -- [3]
				},
				["boneshatter shield"] = {
					343470, -- [1]
					344423, -- [2]
				},
				["ritual of desecration"] = {
					388104, -- [1]
					389029, -- [2]
					395680, -- [3]
				},
				["icebound aegis"] = {
					321368, -- [1]
					321370, -- [2]
					321754, -- [3]
					321755, -- [4]
				},
				["mort'regar's echoes"] = {
					333575, -- [1]
				},
				["regrowth"] = {
					8936, -- [1]
					16561, -- [2]
					20665, -- [3]
					22373, -- [4]
					22695, -- [5]
					27637, -- [6]
					28744, -- [7]
					34361, -- [8]
					39000, -- [9]
					39125, -- [10]
					66067, -- [11]
					69882, -- [12]
					72922, -- [13]
					72932, -- [14]
					84158, -- [15]
					97426, -- [16]
					98099, -- [17]
					102047, -- [18]
					165753, -- [19]
					173791, -- [20]
					176218, -- [21]
					187697, -- [22]
					188905, -- [23]
					224527, -- [24]
					265532, -- [25]
					283745, -- [26]
					292627, -- [27]
					292734, -- [28]
					311571, -- [29]
					326689, -- [30]
					338857, -- [31]
				},
				["engorge"] = {
					321402, -- [1]
					334653, -- [2]
				},
				["divine shield"] = {
					642, -- [1]
					13874, -- [2]
					29382, -- [3]
					33581, -- [4]
					40733, -- [5]
					41367, -- [6]
					54322, -- [7]
					63148, -- [8]
					66010, -- [9]
					67251, -- [10]
					71550, -- [11]
					133093, -- [12]
					164410, -- [13]
					169631, -- [14]
					173086, -- [15]
					179493, -- [16]
					183248, -- [17]
					184028, -- [18]
					186521, -- [19]
					189679, -- [20]
					210377, -- [21]
					218344, -- [22]
					228050, -- [23]
					228177, -- [24]
					263323, -- [25]
					264115, -- [26]
					283627, -- [27]
					317131, -- [28]
					335103, -- [29]
					343150, -- [30]
				},
				["metamorphosis"] = {
					36298, -- [1]
					37673, -- [2]
					37768, -- [3]
					37905, -- [4]
					131451, -- [5]
					138033, -- [6]
					138555, -- [7]
					162264, -- [8]
					173685, -- [9]
					181968, -- [10]
					184895, -- [11]
					187827, -- [12]
					189743, -- [13]
					191427, -- [14]
					191428, -- [15]
					192504, -- [16]
					193435, -- [17]
					193502, -- [18]
					193803, -- [19]
					194611, -- [20]
					195449, -- [21]
					196787, -- [22]
					200166, -- [23]
					201453, -- [24]
					202740, -- [25]
					223903, -- [26]
					224282, -- [27]
					225191, -- [28]
					225193, -- [29]
					225195, -- [30]
					225205, -- [31]
					225323, -- [32]
					225852, -- [33]
					225853, -- [34]
					226681, -- [35]
					247121, -- [36]
					260416, -- [37]
					268257, -- [38]
					268353, -- [39]
					320103, -- [40]
					320104, -- [41]
					320421, -- [42]
					320422, -- [43]
					320645, -- [44]
					321067, -- [45]
					321068, -- [46]
					321259, -- [47]
					321260, -- [48]
					321315, -- [49]
					321316, -- [50]
					321671, -- [51]
					321672, -- [52]
					333390, -- [53]
					333391, -- [54]
					335878, -- [55]
					343774, -- [56]
					343775, -- [57]
					343776, -- [58]
					343777, -- [59]
					343783, -- [60]
					343784, -- [61]
				},
				["dispersion"] = {
					47585, -- [1]
					65544, -- [2]
					79811, -- [3]
					120044, -- [4]
					156868, -- [5]
					164444, -- [6]
					165766, -- [7]
					173206, -- [8]
					201250, -- [9]
					201251, -- [10]
					201257, -- [11]
					322108, -- [12]
				},
				["sanguine ichor"] = {
					226489, -- [1]
					226510, -- [2]
					226512, -- [3]
					340299, -- [4]
					340324, -- [5]
					342073, -- [6]
				},
				["crippling poison"] = {
					3408, -- [1]
					3409, -- [2]
					25809, -- [3]
					30981, -- [4]
					44289, -- [5]
					115196, -- [6]
					132747, -- [7]
					132748, -- [8]
					169622, -- [9]
					169623, -- [10]
					283648, -- [11]
					283649, -- [12]
				},
				["intervene"] = {
					3411, -- [1]
					34784, -- [2]
					41198, -- [3]
					122506, -- [4]
					147833, -- [5]
					199114, -- [6]
					203388, -- [7]
					316531, -- [8]
				},
				["ironbark"] = {
					102342, -- [1]
					197061, -- [2]
				},
				["thorns"] = {
					467, -- [1]
					15438, -- [2]
					21335, -- [3]
					21337, -- [4]
					22128, -- [5]
					22351, -- [6]
					22696, -- [7]
					25640, -- [8]
					25777, -- [9]
					31271, -- [10]
					33907, -- [11]
					34343, -- [12]
					34663, -- [13]
					35361, -- [14]
					43420, -- [15]
					66068, -- [16]
					113966, -- [17]
					165771, -- [18]
					188652, -- [19]
					203728, -- [20]
					209334, -- [21]
					232559, -- [22]
					236696, -- [23]
					258985, -- [24]
					288273, -- [25]
					305496, -- [26]
					305497, -- [27]
				},
				["sphere of suppression"] = {
					294906, -- [1]
					294907, -- [2]
					294908, -- [3]
					294909, -- [4]
					294910, -- [5]
					294912, -- [6]
					294919, -- [7]
					294920, -- [8]
					294922, -- [9]
					298292, -- [10]
					298418, -- [11]
					298419, -- [12]
					298420, -- [13]
					300012, -- [14]
					300013, -- [15]
				},
				["evasion"] = {
					4086, -- [1]
					5277, -- [2]
					15087, -- [3]
					31379, -- [4]
					37683, -- [5]
					38541, -- [6]
					70190, -- [7]
					78826, -- [8]
					79853, -- [9]
					84122, -- [10]
					90958, -- [11]
					128919, -- [12]
					173103, -- [13]
					203868, -- [14]
					226364, -- [15]
					257742, -- [16]
					259331, -- [17]
					292230, -- [18]
					329977, -- [19]
					344363, -- [20]
				},
				["atrophic poison"] = {
					83609, -- [1]
					381637, -- [2]
					392388, -- [3]
				},
				["congealed contagion"] = {
					321268, -- [1]
					328175, -- [2]
					333737, -- [3]
					340271, -- [4]
					340273, -- [5]
				},
				["icebound fortitude"] = {
					48792, -- [1]
					58130, -- [2]
					58837, -- [3]
					66023, -- [4]
					292152, -- [5]
				},
				["sanguine sphere"] = {
					163689, -- [1]
					166591, -- [2]
				},
				["rallying cry"] = {
					31115, -- [1]
					31732, -- [2]
					85527, -- [3]
					97462, -- [4]
					97463, -- [5]
					122507, -- [6]
					148868, -- [7]
					290046, -- [8]
					316825, -- [9]
				},
				["bolster"] = {
					209859, -- [1]
					280001, -- [2]
				},
				["wracking pain"] = {
					93720, -- [1]
					100865, -- [2]
					101221, -- [3]
					101257, -- [4]
					101258, -- [5]
					250096, -- [6]
					265148, -- [7]
					273045, -- [8]
					329181, -- [9]
					329183, -- [10]
					335372, -- [11]
					345010, -- [12]
					361689, -- [13]
					365126, -- [14]
					367670, -- [15]
				},
				["blood barrier"] = {
					262980, -- [1]
					269185, -- [2]
					269281, -- [3]
					322759, -- [4]
					322766, -- [5]
					322773, -- [6]
					323482, -- [7]
					329840, -- [8]
					329849, -- [9]
					329852, -- [10]
				},
				["kevin's wrath"] = {
					352520, -- [1]
					352528, -- [2]
					352533, -- [3]
					352534, -- [4]
				},
				["echoing void"] = {
					307232, -- [1]
					307236, -- [2]
					317014, -- [3]
					317020, -- [4]
					317022, -- [5]
					317029, -- [6]
					318280, -- [7]
					318485, -- [8]
					318486, -- [9]
					373281, -- [10]
					373304, -- [11]
					373305, -- [12]
				},
				["storm dominance"] = {
					374918, -- [1]
					396076, -- [2]
					396077, -- [3]
					396111, -- [4]
					396113, -- [5]
				},
				["enraged regeneration"] = {
					184364, -- [1]
					316474, -- [2]
				},
				["seraphim"] = {
					152262, -- [1]
					172320, -- [2]
					172321, -- [3]
				},
				["sinful revelation"] = {
					309623, -- [1]
					324260, -- [2]
				},
				["blessing of protection"] = {
					1022, -- [1]
					41450, -- [2]
				},
				["predatory instincts"] = {
					389808, -- [1]
				},
				["barkskin"] = {
					20655, -- [1]
					22812, -- [2]
					173558, -- [3]
					182872, -- [4]
					327993, -- [5]
				},
				["iron wire"] = {
					196861, -- [1]
					256148, -- [2]
				},
				["stygia tap"] = {
					343224, -- [1]
					343613, -- [2]
				},
				["pain suppression"] = {
					33206, -- [1]
					69910, -- [2]
					122844, -- [3]
					129035, -- [4]
				},
				["thunder clap"] = {
					6343, -- [1]
					57832, -- [2]
					60019, -- [3]
					69304, -- [4]
					85216, -- [5]
					145046, -- [6]
					147683, -- [7]
					183543, -- [8]
					236389, -- [9]
					237917, -- [10]
					262538, -- [11]
					267578, -- [12]
					283929, -- [13]
					316143, -- [14]
					316414, -- [15]
					316490, -- [16]
					382590, -- [17]
					386028, -- [18]
					396719, -- [19]
				},
				["holy ward"] = {
					213610, -- [1]
					233473, -- [2]
					234682, -- [3]
					240521, -- [4]
				},
				["avenging wrath"] = {
					31884, -- [1]
					43430, -- [2]
					50837, -- [3]
					66011, -- [4]
					113127, -- [5]
					121163, -- [6]
					158405, -- [7]
					162762, -- [8]
					164397, -- [9]
					167917, -- [10]
					173312, -- [11]
					181043, -- [12]
					185413, -- [13]
					189292, -- [14]
					195272, -- [15]
					218346, -- [16]
					242743, -- [17]
					252856, -- [18]
					267511, -- [19]
					282113, -- [20]
					292266, -- [21]
					317872, -- [22]
					327979, -- [23]
					339044, -- [24]
					343029, -- [25]
				},
				["soulglow spectrometer"] = {
					352186, -- [1]
					352938, -- [2]
					352939, -- [3]
					352940, -- [4]
					358379, -- [5]
				},
				["in the spotlight"] = {
					227931, -- [1]
					312926, -- [2]
				},
				["shadowfury"] = {
					30283, -- [1]
					35373, -- [2]
					39082, -- [3]
					45270, -- [4]
					56733, -- [5]
					61463, -- [6]
					81441, -- [7]
					320132, -- [8]
					326475, -- [9]
				},
				["life cocoon"] = {
					116849, -- [1]
					165128, -- [2]
					209194, -- [3]
				},
				["mind flay"] = {
					15407, -- [1]
					16568, -- [2]
					17165, -- [3]
					22919, -- [4]
					23953, -- [5]
					26044, -- [6]
					26143, -- [7]
					28310, -- [8]
					29407, -- [9]
					29570, -- [10]
					32417, -- [11]
					35507, -- [12]
					37276, -- [13]
					37330, -- [14]
					37621, -- [15]
					38243, -- [16]
					40842, -- [17]
					42396, -- [18]
					43512, -- [19]
					46562, -- [20]
					52586, -- [21]
					54339, -- [22]
					54805, -- [23]
					57779, -- [24]
					57941, -- [25]
					59367, -- [26]
					59974, -- [27]
					60006, -- [28]
					60472, -- [29]
					65488, -- [30]
					78751, -- [31]
					79541, -- [32]
					79711, -- [33]
					89032, -- [34]
					91134, -- [35]
					103024, -- [36]
					129033, -- [37]
					144293, -- [38]
					149984, -- [39]
					150886, -- [40]
					150893, -- [41]
					154125, -- [42]
					164445, -- [43]
					172670, -- [44]
					183324, -- [45]
					189873, -- [46]
					193473, -- [47]
					196508, -- [48]
					196509, -- [49]
					201520, -- [50]
					202894, -- [51]
					203037, -- [52]
					203313, -- [53]
					203375, -- [54]
					208697, -- [55]
					216513, -- [56]
					218510, -- [57]
					222075, -- [58]
					234696, -- [59]
					241934, -- [60]
					254123, -- [61]
					260182, -- [62]
					260304, -- [63]
					263117, -- [64]
					264892, -- [65]
					271649, -- [66]
					274019, -- [67]
					274032, -- [68]
					277358, -- [69]
					277521, -- [70]
					278311, -- [71]
					284414, -- [72]
					290402, -- [73]
					292974, -- [74]
					299301, -- [75]
					303566, -- [76]
					306391, -- [77]
					308172, -- [78]
					308884, -- [79]
					308885, -- [80]
					310552, -- [81]
					310555, -- [82]
					312526, -- [83]
					312679, -- [84]
					314187, -- [85]
					314188, -- [86]
					314592, -- [87]
					315949, -- [88]
					316835, -- [89]
					317490, -- [90]
					319027, -- [91]
					321330, -- [92]
				},
				["diffuse magic"] = {
					122783, -- [1]
				},
				["recharge anima"] = {
					321367, -- [1]
					324046, -- [2]
					327280, -- [3]
					327416, -- [4]
				},
				["undying rage"] = {
					333227, -- [1]
				},
				["survival instincts"] = {
					50322, -- [1]
					61336, -- [2]
					85842, -- [3]
					236156, -- [4]
					236157, -- [5]
					328767, -- [6]
				},
				["voidform"] = {
					126733, -- [1]
					126738, -- [2]
					185916, -- [3]
					194249, -- [4]
					199415, -- [5]
					218413, -- [6]
					227386, -- [7]
					228264, -- [8]
					250844, -- [9]
					284508, -- [10]
				},
				["strength of the pack"] = {
					64369, -- [1]
					64381, -- [2]
					171114, -- [3]
					178149, -- [4]
					178150, -- [5]
					189715, -- [6]
					199184, -- [7]
					199186, -- [8]
					200922, -- [9]
					260057, -- [10]
					341222, -- [11]
					341223, -- [12]
					359768, -- [13]
					365338, -- [14]
				},
				["numbing poison"] = {
					5760, -- [1]
					5761, -- [2]
					158873, -- [3]
					158876, -- [4]
					311373, -- [5]
					342947, -- [6]
					359078, -- [7]
				},
				["netherwalk"] = {
					31599, -- [1]
					196555, -- [2]
				},
				["consecration"] = {
					26573, -- [1]
					32773, -- [2]
					33559, -- [3]
					36946, -- [4]
					37553, -- [5]
					38385, -- [6]
					41541, -- [7]
					43429, -- [8]
					57798, -- [9]
					59998, -- [10]
					69930, -- [11]
					79966, -- [12]
					81297, -- [13]
					107100, -- [14]
					111365, -- [15]
					153441, -- [16]
					158416, -- [17]
					162642, -- [18]
					165711, -- [19]
					184047, -- [20]
					188370, -- [21]
					190010, -- [22]
					200667, -- [23]
					200678, -- [24]
					200679, -- [25]
					204242, -- [26]
					205228, -- [27]
					216217, -- [28]
					221645, -- [29]
					221730, -- [30]
					233390, -- [31]
					243597, -- [32]
					251151, -- [33]
					251152, -- [34]
					251549, -- [35]
					251550, -- [36]
					264082, -- [37]
					283579, -- [38]
					283582, -- [39]
					283583, -- [40]
					288807, -- [41]
					288808, -- [42]
					288809, -- [43]
					290496, -- [44]
					290497, -- [45]
					290498, -- [46]
					294346, -- [47]
					294347, -- [48]
					327980, -- [49]
					344172, -- [50]
					382484, -- [51]
					387881, -- [52]
				},
				["lunar empowerment"] = {
					211091, -- [1]
					292664, -- [2]
				},
				["incarnation: chosen of elune"] = {
					102560, -- [1]
					184747, -- [2]
				},
				["crackling shield"] = {
					376705, -- [1]
					376724, -- [2]
				},
				["anti-magic zone"] = {
					50461, -- [1]
					50462, -- [2]
					51052, -- [3]
					52893, -- [4]
					52894, -- [5]
					53636, -- [6]
					53637, -- [7]
					79907, -- [8]
					135233, -- [9]
					145629, -- [10]
					162624, -- [11]
					162625, -- [12]
					164065, -- [13]
					164225, -- [14]
					165775, -- [15]
					222791, -- [16]
					332829, -- [17]
					332831, -- [18]
				},
				["fortifying brew"] = {
					115203, -- [1]
					120954, -- [2]
					122498, -- [3]
					201318, -- [4]
					243435, -- [5]
					292300, -- [6]
					322960, -- [7]
					325208, -- [8]
				},
				["bubbling pox"] = {
					331016, -- [1]
				},
				["nimble steps"] = {
					352366, -- [1]
					354050, -- [2]
					354051, -- [3]
					354052, -- [4]
				},
				["abomination limb"] = {
					315443, -- [1]
					323710, -- [2]
					323798, -- [3]
					323950, -- [4]
					335486, -- [5]
					335933, -- [6]
					340735, -- [7]
				},
				["mind soothe"] = {
					453, -- [1]
				},
				["mind sear"] = {
					32000, -- [1]
					36447, -- [2]
					48045, -- [3]
					49821, -- [4]
					60440, -- [5]
					60441, -- [6]
					85643, -- [7]
					85647, -- [8]
					135513, -- [9]
					157170, -- [10]
					157172, -- [11]
					172877, -- [12]
					172878, -- [13]
					177402, -- [14]
					177403, -- [15]
					208232, -- [16]
					237388, -- [17]
					284430, -- [18]
					284431, -- [19]
					294009, -- [20]
					294018, -- [21]
					344752, -- [22]
					344754, -- [23]
				},
				["tidebringer"] = {
					236501, -- [1]
					236502, -- [2]
				},
				["prey on the weak"] = {
					131511, -- [1]
					255909, -- [2]
					389788, -- [3]
					389806, -- [4]
				},
				["ice block"] = {
					27619, -- [1]
					36911, -- [2]
					41590, -- [3]
					45438, -- [4]
					45776, -- [5]
					46604, -- [6]
					46882, -- [7]
					56124, -- [8]
					56644, -- [9]
					62766, -- [10]
					65802, -- [11]
					68252, -- [12]
					91686, -- [13]
					99247, -- [14]
					121548, -- [15]
					145533, -- [16]
					167415, -- [17]
					172987, -- [18]
					176269, -- [19]
					188839, -- [20]
					211011, -- [21]
					211014, -- [22]
					240133, -- [23]
					241720, -- [24]
					241722, -- [25]
					251345, -- [26]
					256590, -- [27]
					256730, -- [28]
					262192, -- [29]
					271527, -- [30]
					278960, -- [31]
					287322, -- [32]
					287347, -- [33]
					290049, -- [34]
					304344, -- [35]
					304345, -- [36]
					304463, -- [37]
					314908, -- [38]
					322683, -- [39]
					329007, -- [40]
					341857, -- [41]
				},
				["inspiring presence"] = {
					185089, -- [1]
					185090, -- [2]
					192944, -- [3]
					320973, -- [4]
					320980, -- [5]
					327808, -- [6]
					327812, -- [7]
					335034, -- [8]
					343502, -- [9]
				},
				["fixate"] = {
					12021, -- [1]
					34719, -- [2]
					40414, -- [3]
					40607, -- [4]
					40892, -- [5]
					41294, -- [6]
					41295, -- [7]
					41614, -- [8]
					41951, -- [9]
					41976, -- [10]
					49026, -- [11]
					52537, -- [12]
					53626, -- [13]
					73544, -- [14]
					73545, -- [15]
					73686, -- [16]
					73687, -- [17]
					78617, -- [18]
					78618, -- [19]
					78625, -- [20]
					80093, -- [21]
					80094, -- [22]
					91829, -- [23]
					91830, -- [24]
					97025, -- [25]
					97027, -- [26]
					97486, -- [27]
					99284, -- [28]
					99526, -- [29]
					99559, -- [30]
					99849, -- [31]
					99999, -- [32]
					100007, -- [33]
					100011, -- [34]
					100014, -- [35]
					100288, -- [36]
					100548, -- [37]
					105695, -- [38]
					111723, -- [39]
					111725, -- [40]
					118303, -- [41]
					118448, -- [42]
					118964, -- [43]
					120434, -- [44]
					120831, -- [45]
					120837, -- [46]
					120839, -- [47]
					122477, -- [48]
					124070, -- [49]
					125390, -- [50]
					125393, -- [51]
					125895, -- [52]
					125896, -- [53]
					129149, -- [54]
					132760, -- [55]
					132984, -- [56]
					133042, -- [57]
					133112, -- [58]
					133196, -- [59]
					133843, -- [60]
					136594, -- [61]
					137686, -- [62]
					137687, -- [63]
					138486, -- [64]
					139034, -- [65]
					140189, -- [66]
					140547, -- [67]
					141918, -- [68]
					142097, -- [69]
					142388, -- [70]
					142870, -- [71]
					143292, -- [72]
					143445, -- [73]
					143682, -- [74]
					143864, -- [75]
					144036, -- [76]
					146540, -- [77]
					146581, -- [78]
					147665, -- [79]
					147712, -- [80]
					148243, -- [81]
					149337, -- [82]
					150702, -- [83]
					152310, -- [84]
					153787, -- [85]
					154769, -- [86]
					154952, -- [87]
					155196, -- [88]
					155207, -- [89]
					156652, -- [90]
					156653, -- [91]
					156665, -- [92]
					157168, -- [93]
					157625, -- [94]
					157763, -- [95]
					158702, -- [96]
					159373, -- [97]
					167757, -- [98]
					172866, -- [99]
					173079, -- [100]
					173080, -- [101]
					174627, -- [102]
					176544, -- [103]
					177643, -- [104]
					178139, -- [105]
					186572, -- [106]
					186574, -- [107]
					187621, -- [108]
					197849, -- [109]
					197850, -- [110]
					198161, -- [111]
					198477, -- [112]
					199618, -- [113]
					199619, -- [114]
					200349, -- [115]
					201015, -- [116]
					202081, -- [117]
					202453, -- [118]
					203983, -- [119]
					204873, -- [120]
					205011, -- [121]
					205054, -- [122]
					206364, -- [123]
					208739, -- [124]
					210099, -- [125]
					213466, -- [126]
					216115, -- [127]
					218369, -- [128]
					220727, -- [129]
					224072, -- [130]
					224307, -- [131]
					224532, -- [132]
					225388, -- [133]
					226044, -- [134]
					226088, -- [135]
					227221, -- [136]
					229593, -- [137]
					234189, -- [138]
					238674, -- [139]
					239280, -- [140]
					239556, -- [141]
					241657, -- [142]
					243461, -- [143]
					243590, -- [144]
					243613, -- [145]
					244653, -- [146]
					244657, -- [147]
					244860, -- [148]
					245406, -- [149]
					253001, -- [150]
					254491, -- [151]
					255860, -- [152]
					256311, -- [153]
					257858, -- [154]
					262240, -- [155]
					262241, -- [156]
					262242, -- [157]
					262243, -- [158]
					262244, -- [159]
					262245, -- [160]
					264215, -- [161]
					264219, -- [162]
					267406, -- [163]
					269103, -- [164]
					269936, -- [165]
					270509, -- [166]
					272427, -- [167]
					272482, -- [168]
					275269, -- [169]
					275270, -- [170]
					276020, -- [171]
					277556, -- [172]
					285694, -- [173]
					285696, -- [174]
					285697, -- [175]
					285702, -- [176]
					285703, -- [177]
					285813, -- [178]
					286135, -- [179]
					286539, -- [180]
					286974, -- [181]
					287845, -- [182]
					288390, -- [183]
					288623, -- [184]
					289925, -- [185]
					291917, -- [186]
					296524, -- [187]
					299484, -- [188]
					304298, -- [189]
					305699, -- [190]
					306957, -- [191]
					307260, -- [192]
					308360, -- [193]
					309859, -- [194]
					314729, -- [195]
					315093, -- [196]
					315094, -- [197]
					318059, -- [198]
					318078, -- [199]
					318540, -- [200]
					319781, -- [201]
					320740, -- [202]
					326082, -- [203]
					326892, -- [204]
					327902, -- [205]
					330115, -- [206]
					330966, -- [207]
					330967, -- [208]
					331343, -- [209]
					337617, -- [210]
					340797, -- [211]
					340827, -- [212]
					343496, -- [213]
				},
				["prideful"] = {
					340186, -- [1]
					340384, -- [2]
					340880, -- [3]
					342333, -- [4]
				},
				["ascendance"] = {
					28200, -- [1]
					28204, -- [2]
					114049, -- [3]
					114050, -- [4]
					114051, -- [5]
					114052, -- [6]
					147059, -- [7]
					163296, -- [8]
					173160, -- [9]
					191475, -- [10]
					191478, -- [11]
					344548, -- [12]
				},
				["anti-magic shell"] = {
					31662, -- [1]
					48707, -- [2]
					49088, -- [3]
					53766, -- [4]
					171465, -- [5]
					173097, -- [6]
					181425, -- [7]
					203272, -- [8]
					218977, -- [9]
					218988, -- [10]
					292150, -- [11]
					311975, -- [12]
				},
				["destabilize"] = {
					123059, -- [1]
					157657, -- [2]
					163466, -- [3]
					263902, -- [4]
					334688, -- [5]
					334695, -- [6]
				},
				["enrage"] = {
					8599, -- [1]
					12686, -- [2]
					15061, -- [3]
					15097, -- [4]
					15716, -- [5]
					18501, -- [6]
					19451, -- [7]
					19812, -- [8]
					22428, -- [9]
					23128, -- [10]
					23342, -- [11]
					26041, -- [12]
					26051, -- [13]
					28371, -- [14]
					30485, -- [15]
					31540, -- [16]
					31915, -- [17]
					32714, -- [18]
					33958, -- [19]
					34670, -- [20]
					37605, -- [21]
					37648, -- [22]
					37975, -- [23]
					38046, -- [24]
					38166, -- [25]
					38664, -- [26]
					39031, -- [27]
					41254, -- [28]
					41447, -- [29]
					42705, -- [30]
					42745, -- [31]
					43139, -- [32]
					44427, -- [33]
					45111, -- [34]
					47399, -- [35]
					48138, -- [36]
					48142, -- [37]
					48193, -- [38]
					50420, -- [39]
					51513, -- [40]
					52470, -- [41]
					54287, -- [42]
					54427, -- [43]
					55285, -- [44]
					56646, -- [45]
					59697, -- [46]
					59707, -- [47]
					59828, -- [48]
					60075, -- [49]
					61369, -- [50]
					63227, -- [51]
					68335, -- [52]
					68541, -- [53]
					70371, -- [54]
					71205, -- [55]
					72143, -- [56]
					75998, -- [57]
					76100, -- [58]
					76862, -- [59]
					78722, -- [60]
					78943, -- [61]
					80084, -- [62]
					80467, -- [63]
					86736, -- [64]
					102134, -- [65]
					108169, -- [66]
					109889, -- [67]
					109890, -- [68]
					115430, -- [69]
					119629, -- [70]
					126370, -- [71]
					127823, -- [72]
					129016, -- [73]
					130196, -- [74]
					133052, -- [75]
					140758, -- [76]
					144404, -- [77]
					145411, -- [78]
					145554, -- [79]
					145692, -- [80]
					145974, -- [81]
					150498, -- [82]
					150500, -- [83]
					154982, -- [84]
					156314, -- [85]
					163483, -- [86]
					164257, -- [87]
					164811, -- [88]
					165947, -- [89]
					172360, -- [90]
					172781, -- [91]
					175192, -- [92]
					175337, -- [93]
					176048, -- [94]
					178658, -- [95]
					179681, -- [96]
					184361, -- [97]
					184362, -- [98]
					186882, -- [99]
					188480, -- [100]
					190225, -- [101]
					197064, -- [102]
					201279, -- [103]
					207680, -- [104]
					212561, -- [105]
					214037, -- [106]
					216363, -- [107]
					218121, -- [108]
					222022, -- [109]
					222042, -- [110]
					224604, -- [111]
					225319, -- [112]
					225320, -- [113]
					228318, -- [114]
					228895, -- [115]
					237689, -- [116]
					245566, -- [117]
					257260, -- [118]
					257391, -- [119]
					257609, -- [120]
					258463, -- [121]
					259975, -- [122]
					260355, -- [123]
					261893, -- [124]
					266095, -- [125]
					271369, -- [126]
					273422, -- [127]
					273874, -- [128]
					275091, -- [129]
					275667, -- [130]
					277573, -- [131]
					297152, -- [132]
					298078, -- [133]
					300414, -- [134]
					302483, -- [135]
					304178, -- [136]
					307506, -- [137]
					311086, -- [138]
					313675, -- [139]
					314466, -- [140]
					316133, -- [141]
					316424, -- [142]
					316425, -- [143]
					317535, -- [144]
					317553, -- [145]
					319147, -- [146]
					321820, -- [147]
					323599, -- [148]
					323828, -- [149]
					324085, -- [150]
					329989, -- [151]
					330631, -- [152]
					332169, -- [153]
					334800, -- [154]
					343484, -- [155]
				},
				["defensive countermeasure"] = {
					297133, -- [1]
					299428, -- [2]
					300996, -- [3]
					303941, -- [4]
				},
				["aspect of the turtle"] = {
					186265, -- [1]
					189949, -- [2]
					210761, -- [3]
				},
				["filthy transfusion"] = {
					273834, -- [1]
					273835, -- [2]
					273836, -- [3]
				},
				["eye for an eye"] = {
					25988, -- [1]
					25997, -- [2]
					205191, -- [3]
					205202, -- [4]
				},
				["nothing personal"] = {
					286573, -- [1]
					286579, -- [2]
					286581, -- [3]
					289467, -- [4]
				},
				["mutilated flesh"] = {
					211672, -- [1]
					340431, -- [2]
					381672, -- [3]
					394021, -- [4]
				},
				["butcher cut"] = {
					279416, -- [1]
					279426, -- [2]
				},
				["amplifying poison"] = {
					381664, -- [1]
					383414, -- [2]
					394328, -- [3]
				},
				["moonkin aura"] = {
					209740, -- [1]
					209746, -- [2]
				},
				["might of the upper reaches"] = {
					333579, -- [1]
				},
				["double tap"] = {
					203412, -- [1]
					203414, -- [2]
					203486, -- [3]
					260402, -- [4]
				},
				["greater fade"] = {
					213602, -- [1]
				},
				["spectral sight"] = {
					188501, -- [1]
					199461, -- [2]
					199490, -- [3]
					202688, -- [4]
					215725, -- [5]
					220239, -- [6]
					220243, -- [7]
					233028, -- [8]
					320379, -- [9]
				},
				["deadly poison"] = {
					2818, -- [1]
					2823, -- [2]
					3583, -- [3]
					10022, -- [4]
					13582, -- [5]
					21787, -- [6]
					21788, -- [7]
					32970, -- [8]
					32971, -- [9]
					34616, -- [10]
					34655, -- [11]
					34657, -- [12]
					36872, -- [13]
					38519, -- [14]
					38520, -- [15]
					41191, -- [16]
					41192, -- [17]
					41485, -- [18]
					43580, -- [19]
					43581, -- [20]
					56145, -- [21]
					56149, -- [22]
					59479, -- [23]
					59482, -- [24]
					63755, -- [25]
					63756, -- [26]
					67710, -- [27]
					67711, -- [28]
					72329, -- [29]
					82632, -- [30]
					82633, -- [31]
					96648, -- [32]
					113780, -- [33]
					129410, -- [34]
					130980, -- [35]
					130981, -- [36]
					132745, -- [37]
					132746, -- [38]
					145419, -- [39]
					145420, -- [40]
					145421, -- [41]
					177918, -- [42]
					177919, -- [43]
					177920, -- [44]
					289078, -- [45]
					314113, -- [46]
					373774, -- [47]
					377030, -- [48]
					377036, -- [49]
					394324, -- [50]
					394325, -- [51]
				},
				["bulwark of maldraxxus"] = {
					336449, -- [1]
					336450, -- [2]
					336451, -- [3]
				},
				["mystic touch"] = {
					8647, -- [1]
					113746, -- [2]
					331653, -- [3]
				},
				["droman's wrath"] = {
					323059, -- [1]
				},
				["raging tantrum"] = {
					333241, -- [1]
					333242, -- [2]
				},
				["forsworn doctrine"] = {
					317936, -- [1]
					331213, -- [2]
				},
				["shadow's grasp"] = {
					206760, -- [1]
					263656, -- [2]
					263658, -- [3]
					306965, -- [4]
				},
				["combustion"] = {
					29977, -- [1]
					74630, -- [2]
					99303, -- [3]
					100271, -- [4]
					190319, -- [5]
					197889, -- [6]
					304888, -- [7]
					321710, -- [8]
					323048, -- [9]
				},
				["unending resolve"] = {
					104773, -- [1]
					173189, -- [2]
					317138, -- [3]
				},
				["blur"] = {
					81216, -- [1]
					177566, -- [2]
					195450, -- [3]
					198589, -- [4]
					202818, -- [5]
					202819, -- [6]
					212800, -- [7]
					292222, -- [8]
					320407, -- [9]
				},
				["all-consuming spite"] = {
					343553, -- [1]
				},
				["earth shield"] = {
					379, -- [1]
					974, -- [2]
					32734, -- [3]
					38590, -- [4]
					54479, -- [5]
					54480, -- [6]
					55599, -- [7]
					55600, -- [8]
					56451, -- [9]
					57802, -- [10]
					57803, -- [11]
					58981, -- [12]
					58982, -- [13]
					59471, -- [14]
					59472, -- [15]
					60013, -- [16]
					60014, -- [17]
					66063, -- [18]
					66064, -- [19]
					67530, -- [20]
					67537, -- [21]
					69568, -- [22]
					69569, -- [23]
					69925, -- [24]
					69926, -- [25]
					77905, -- [26]
					79927, -- [27]
					79928, -- [28]
					101649, -- [29]
					101650, -- [30]
					143475, -- [31]
					143479, -- [32]
					145559, -- [33]
					145560, -- [34]
					159981, -- [35]
					159982, -- [36]
					165773, -- [37]
					199355, -- [38]
					199356, -- [39]
					204288, -- [40]
					204290, -- [41]
					226078, -- [42]
					254417, -- [43]
					254425, -- [44]
					268709, -- [45]
					268710, -- [46]
					374066, -- [47]
					374067, -- [48]
					377874, -- [49]
					377875, -- [50]
					383648, -- [51]
				},
				["enslaved"] = {
					201089, -- [1]
					204831, -- [2]
					211680, -- [3]
					222424, -- [4]
					268192, -- [5]
					299156, -- [6]
					303622, -- [7]
					323961, -- [8]
				},
				["earth dominance"] = {
					374917, -- [1]
					396067, -- [2]
					396068, -- [3]
					396085, -- [4]
					396098, -- [5]
				},
				["die by the sword"] = {
					118038, -- [1]
					236385, -- [2]
					315948, -- [3]
				},
				["power word: fortitude"] = {
					13864, -- [1]
					21562, -- [2]
					23947, -- [3]
					23948, -- [4]
					36004, -- [5]
					58921, -- [6]
					74973, -- [7]
					94366, -- [8]
					133538, -- [9]
					160637, -- [10]
					165739, -- [11]
					183585, -- [12]
					206629, -- [13]
					211681, -- [14]
					266501, -- [15]
					267528, -- [16]
					284466, -- [17]
					286145, -- [18]
				},
				["dark soul: misery"] = {
					113860, -- [1]
				},
				["cyclone"] = {
					29538, -- [1]
					32334, -- [2]
					33786, -- [3]
					38516, -- [4]
					38517, -- [5]
					39594, -- [6]
					40578, -- [7]
					43528, -- [8]
					60236, -- [9]
					61662, -- [10]
					62632, -- [11]
					62633, -- [12]
					65859, -- [13]
					88010, -- [14]
					92371, -- [15]
					143499, -- [16]
					143551, -- [17]
					151165, -- [18]
					160209, -- [19]
					189454, -- [20]
					189947, -- [21]
					189950, -- [22]
					193121, -- [23]
					193244, -- [24]
					203562, -- [25]
					203596, -- [26]
					204832, -- [27]
					208056, -- [28]
					208060, -- [29]
					233946, -- [30]
					234175, -- [31]
					255793, -- [32]
					261521, -- [33]
					268341, -- [34]
				},
			},
			["cast_statusbar_fadein_time"] = 0.009999999776482582,
			["target_shady_enabled"] = false,
			["aura2_y_offset"] = 18.19999694824219,
			["aura_timer_text_anchor"] = {
				["x"] = 0.5,
			},
			["buffs_on_aura2"] = true,
			["indicator_quest"] = false,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.7803922295570374, -- [1]
				0.250980406999588, -- [2]
				0.250980406999588, -- [3]
				0.9600000008940697, -- [4]
			},
			["show_interrupt_author"] = false,
			["npc_cache"] = {
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184300] = {
					"Ebonstone Golem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[205799] = {
					"Cinderstep Melter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[97285] = {
					"Wind Rush Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[164338] = {
					"Mawsworn Guard", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[178671] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[164339] = {
					"Mawsworn Bowman", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[199659] = {
					"Warlord Kagni", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[184303] = {
					"Skittering Crawler", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[82698] = {
					"Night-Twisted Devout", -- [1]
					"Highmaul", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[177650] = {
					"Lordaeron Knight", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[175091] = {
					"Necrotic Droplet", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164342] = {
					"Mawsworn Defender", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178163] = {
					"Murkbrine Shorerunner", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164343] = {
					"Mawsworn Debilitator", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[164345] = {
					"Scavenging Soul Eater", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[162298] = {
					"Yulkatar the Cruel", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[186357] = {
					"Stellar Mote", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[187894] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[164348] = {
					"Wandering Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[182777] = {
					"Rygelon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175611] = {
					"The Tarragrue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[79888] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[164351] = {
					"Fading Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173053] = {
					"Afterimage of Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[172030] = {
					"Tormenter Overlord", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[181244] = {
					"Domination Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168960] = {
					"Fulfir the Scarred", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[166913] = {
					"Corrupted Guardian", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[171520] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168961] = {
					"The Hungering Ones", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[173568] = {
					"Anima Crazed Worker", -- [1]
					"Castle Nathria", -- [2]
				},
				[174592] = {
					"Territorial Wader", -- [1]
					"Halls of Atonement", -- [2]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[171521] = {
					"Dread Evoker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168962] = {
					"Reborn Phoenix", -- [1]
					"Castle Nathria", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[53134] = {
					"Ancient Core Hound", -- [1]
					"Firelands", -- [2]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[177154] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169476] = {
					"Highway Serf", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166917] = {
					"Grove Wrecker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[94224] = {
					"Petrifying Totem", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[205820] = {
					"Crawling Goo", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[59789] = {
					"Thalnos the Soulrender", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[185346] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166919] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168967] = {
					"Gerwyn", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[166920] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[180741] = {
					"Xuen", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[166921] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[177159] = {
					"Soulburner Fraxin", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[180743] = {
					"Niuzao", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[177161] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[174090] = {
					"Nathrian Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[167948] = {
					"Infectious Monstrosity", -- [1]
					"Plaguefall", -- [2]
				},
				[177162] = {
					"Mawsworn Interrogator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[167949] = {
					"Plague-Ridden Survivor", -- [1]
					"Plaguefall", -- [2]
				},
				[168973] = {
					"High Torturer Darithos", -- [1]
					"Castle Nathria", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[150547] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184331] = {
					"Infinite Timereaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[177165] = {
					"Mawsworn Destroyer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[154131] = {
					"Molten Fury", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[201736] = {
					"Sundered Arcanist", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[185357] = {
					"Sentry", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[26125] = {
					"Risen Ghoul", -- [1]
					"Castle Nathria", -- [2]
				},
				[129550] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[115730] = {
					"Felguard Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[175123] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[174100] = {
					"Nathrian Singuard", -- [1]
					"Castle Nathria", -- [2]
				},
				[199182] = {
					"Jumping Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[151579] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[185363] = {
					"Manifestor Krugan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[202256] = {
					"Djaradin Lavamancer", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[193555] = {
					"Nokhud Villager", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[202257] = {
					"Djaradin Magmashaper", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[190485] = {
					"Erkhart Stormvein", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[202259] = {
					"Djaradin Wallclimber", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[191510] = {
					"Smoldering Hellion", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196117] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[193558] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166429] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[189464] = {
					"Qalashi Irontorch", -- [1]
					"Neltharus", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[202262] = {
					"Blazing Dreadsquall", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[199703] = {
					"Magma Mystic", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[53141] = {
					"Molten Surger", -- [1]
					"Firelands", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[189466] = {
					"Irontorch Commander", -- [1]
					"Neltharus", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[99868] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[175646] = {
					"P.O.S.T. Master", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164897] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[202264] = {
					"Primal Lava Elemental", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[172064] = {
					"Unstable Larva", -- [1]
					"Plaguefall", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[201753] = {
					"Sundered Destroyer", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[197147] = {
					"Qalashi Honor Guard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[201754] = {
					"Sarkareth", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[183839] = {
					"Cartel Plunderer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114714] = {
					"Ghostly Steward", -- [1]
					"Return to Karazhan", -- [2]
				},
				[197148] = {
					"Qalashi Lavabearer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189470] = {
					"Lava Flare", -- [1]
					"Neltharus", -- [2]
				},
				[166436] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[154663] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189471] = {
					"Qalashi Blacksmith", -- [1]
					"Neltharus", -- [2]
				},
				[166949] = {
					"Chi-Ji", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Castle Nathria", -- [2]
				},
				[189472] = {
					"Qalashi Lavabearer", -- [1]
					"Neltharus", -- [2]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[190496] = {
					"Terros", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[175652] = {
					"Lord of Woe", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112668] = {
					"Infernal Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[203806] = {
					"Whisper in the Dark", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[114716] = {
					"Ghostly Baker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115484] = {
					"Fel Bat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180773] = {
					"Vigilant Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[196642] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[189988] = {
					"Thing From Beyond", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[203809] = {
					"Entropic Hatred", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[173609] = {
					"Nathrian Conservator", -- [1]
					"Castle Nathria", -- [2]
				},
				[182311] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[182823] = {
					"Cosmic Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199715] = {
					"Nokhud Battleguard", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189478] = {
					"Forgemaster Gorek", -- [1]
					"Neltharus", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[203811] = {
					"Incarnation of Entropy", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196645] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[126492] = {
					"Netherguard Adept", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[199718] = {
					"Nokhud Huntmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180779] = {
					"Terrorspine", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173613] = {
					"Nathrian Registrar", -- [1]
					"Castle Nathria", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[178732] = {
					"Mawsworn Runesmith", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[199719] = {
					"Nokhud Wardog", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180780] = {
					"Dreadmaw", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[174126] = {
					"Baron Duskhollow", -- [1]
					"Castle Nathria", -- [2]
				},
				[178733] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180781] = {
					"Frothing Hound", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[80937] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[178734] = {
					"Mawsworn Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175663] = {
					"Hylbrande", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[166451] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[123680] = {
					"Dark Keeper Aedis", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[166452] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[184880] = {
					"Dominated Disrupter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166453] = {
					"Darkturned Clawguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[164406] = {
					"Shriekwing", -- [1]
					"Castle Nathria", -- [2]
				},
				[201773] = {
					"Eternal Blaze", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195119] = {
					"Primalist Shockcaster", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[164407] = {
					"Sludgefist", -- [1]
					"Castle Nathria", -- [2]
				},
				[201774] = {
					"Essence of Shadow", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[80940] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[174134] = {
					"Lord Evershade", -- [1]
					"Castle Nathria", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[151613] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[82733] = {
					"Night-Twisted Shadowsworn", -- [1]
					"Highmaul", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[178743] = {
					"Terrified Glitterfeather", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[203825] = {
					"Voracious Magma Worm", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[204337] = {
					"Lurking Tempest", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[178744] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[203826] = {
					"Colossal Draconic Golem", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179257] = {
					"Burning Shade", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167485] = {
					"Starving Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81967] = {
					"Frostwall Nibbler", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[175677] = {
					"Smuggled Creature", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167999] = {
					"Echo of Sin", -- [1]
					"Castle Nathria", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[78641] = {
					"Night-Twisted Faithful", -- [1]
					"Highmaul", -- [2]
				},
				[203831] = {
					"Crystalline Guardian", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[152644] = {
					"Deadsoul Drifter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176705] = {
					"Venza Goldfuse", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[168004] = {
					"Empowered Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194622] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[76597] = {
					"Frost Wolf Alpha", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[202814] = {
					"Twisted Aberration", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[61213] = {
					"Krik'thik Conscript", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[153165] = {
					"Custodian Thonar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[79414] = {
					"Training Dummy", -- [1]
					"8.0 Boost Experience - Horde", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173641] = {
					"Nathrian Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[191045] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[127019] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[191046] = {
					"Shady Dealer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[86326] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[196679] = {
					"Frozen Shroud", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[86071] = {
					"Rokkaa", -- [1]
					"Highmaul", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173134] = {
					"Darksworn Goliath", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184908] = {
					"Vy Interceptor", -- [1]
					"Halls of Atonement", -- [2]
				},
				[202824] = {
					"Erratic Remnant", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[86072] = {
					"Oro", -- [1]
					"Highmaul", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174161] = {
					"Lady Sinsear", -- [1]
					"Castle Nathria", -- [2]
				},
				[167507] = {
					"Veilwing Fledgeling", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[86073] = {
					"Lokk", -- [1]
					"Highmaul", -- [2]
				},
				[184911] = {
					"Urh Dismantler", -- [1]
					"Halls of Atonement", -- [2]
				},
				[174162] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[179281] = {
					"Coagulated Blood", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113971] = {
					"Maiden of Virtue", -- [1]
					"Return to Karazhan", -- [2]
				},
				[86330] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[155226] = {
					"Verdant Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[170071] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[166491] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[138338] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[166492] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[165469] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[196694] = {
					"Arcane Forager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[194647] = {
					"Thunder Caller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164447] = {
					"Skuld", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[166495] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[169055] = {
					"Marrow Scraper", -- [1]
					"Theater of Pain", -- [2]
				},
				[165472] = {
					"Nathrian Siphoner", -- [1]
					"Castle Nathria", -- [2]
				},
				[166496] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[189531] = {
					"Decayed Elder", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168033] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[165474] = {
					"Nathrian Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[181856] = {
					"Point Defense Drone", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[187999] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[181859] = {
					"Volatile Materium", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175205] = {
					"Baleful Shadow", -- [1]
					"Castle Nathria", -- [2]
				},
				[151659] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183396] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[172647] = {
					"Parasitic Infestor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165481] = {
					"Court Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[194147] = {
					"Volcanius", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[183398] = {
					"Ancient Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[173161] = {
					"Lady Sinsear", -- [1]
					"Castle Nathria", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173162] = {
					"Lord Evershade", -- [1]
					"Castle Nathria", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[173163] = {
					"Baron Duskhollow", -- [1]
					"Castle Nathria", -- [2]
				},
				[198757] = {
					"Void Lasher", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[196198] = {
					"Algeth'ar Security", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[173164] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[170093] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167022] = {
					"Battlesewn Render", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[196200] = {
					"Algeth'ar Echoknight", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183404] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175726] = {
					"Skyja", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[201320] = {
					"Rashok", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[175727] = {
					"Soulrender Dormazain", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[183406] = {
					"Colossal Realmcrafter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[183407] = {
					"Eternal Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175729] = {
					"Remnant of Ner'zhul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[127295] = {
					"Void Image", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[174194] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[175730] = {
					"Fatescribe Roh-Kalo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[129599] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[183409] = {
					"Pinning Weapon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175731] = {
					"Guardian of the First Ones", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175732] = {
					"Sylvanas Windrunner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[177269] = {
					"So'leah", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[195697] = {
					"Thunderbeast Rider", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189555] = {
					"Astral Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[167033] = {
					"Putrid Shambler", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[36272] = {
					"Apothecary Frye", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[166523] = {
					"Vesper Totem", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164476] = {
					"Tortured Amalgamation", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[152703] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[166012] = {
					"Athanos", -- [1]
					"Bastion Scenario", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[183416] = {
					"Bound Realmbreaker", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[116550] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[166525] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114247] = {
					"The Curator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[126788] = {
					"Shadowy Voidwyrm", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[177787] = {
					"Mawsworn Hopebreaker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184954] = {
					"Ancient Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198263] = {
					"Stalwart Broodwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[86607] = {
					"Iron Flame Technician", -- [1]
					"Highmaul", -- [2]
				},
				[190586] = {
					"Earth Breaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[179837] = {
					"Tracker Zo'korss", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184444] = {
					"Oppressive Artificer", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[135816] = {
					"Vilefiend", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114249] = {
					"Volatile Energy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[198266] = {
					"Pouncing Broodswarmer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190588] = {
					"Tectonic Crusher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[166019] = {
					"Shimmermoth", -- [1]
					"Halls of Atonement", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[86609] = {
					"Iron Warmaster", -- [1]
					"Highmaul", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180865] = {
					"Twisted Warden", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81235] = {
					"Grimrail Laborer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184961] = {
					"Gnarled Skitter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[150154] = {
					"Saurolisk Bonenipper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[184962] = {
					"Gnarled Scavenger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[114252] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[53167] = {
					"Unbound Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[173191] = {
					"Soulstalker V'lara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183429] = {
					"Ebon Chainguard", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[168073] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[86612] = {
					"Spore Shooter", -- [1]
					"Highmaul", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168074] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[199812] = {
					"Zaqali Wallclimber", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[200836] = {
					"Obsidian Guard", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[183945] = {
					"Unstable Matter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[82519] = {
					"Highmaul Conscript", -- [1]
					"Highmaul", -- [2]
				},
				[173708] = {
					"Anchoring Rune", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[167566] = {
					"Bleakwing Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167055] = {
					"Rot Flinger", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[156818] = {
					"Wrathion", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[202375] = {
					"Zskarn", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[200840] = {
					"Flamebound Huntsman", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165521] = {
					"Lady Inerva Darkvein", -- [1]
					"Castle Nathria", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[187021] = {
					"Rotbow Sentry", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[183438] = {
					"Chainbound Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183439] = {
					"Mawsworn Annihilator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[126799] = {
					"Coruscating Voidlord", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[77404] = {
					"The Butcher", -- [1]
					"Highmaul", -- [2]
				},
				[95832] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[181395] = {
					"Skolex", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[114260] = {
					"Mrrgria", -- [1]
					"Return to Karazhan", -- [2]
				},
				[130896] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114261] = {
					"Toe Knee", -- [1]
					"Return to Karazhan", -- [2]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[205968] = {
					"Fragment of Shadow", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[181399] = {
					"Kin'tessa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[85341] = {
					"Lunarfall Raccoon", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[114262] = {
					"Attumen the Huntsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[205971] = {
					"Fragment of Fire", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[166046] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[180379] = {
					"Mawsworn Arbalest", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[184986] = {
					"Kurog Grimtotem", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114264] = {
					"Midnight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[82528] = {
					"Gorian Arcanist", -- [1]
					"Highmaul", -- [2]
				},
				[203927] = {
					"Failed Prototype", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[147621] = {
					"Dark Iron Vanguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[114265] = {
					"Gang Ruffian", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168098] = {
					"Empowered Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[99678] = {
					"Lingering Corruption", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180385] = {
					"Condemned Soul Remnant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[199325] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[78948] = {
					"Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[96608] = {
					"Ebonclaw Worg", -- [1]
					"Halls of Valor", -- [2]
				},
				[82532] = {
					"Krush", -- [1]
					"Highmaul", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96609] = {
					"Gildedfur Stag", -- [1]
					"Halls of Valor", -- [2]
				},
				[185508] = {
					"Claw Fighter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
				},
				[82533] = {
					"Smash", -- [1]
					"Highmaul", -- [2]
				},
				[150190] = {
					"HK-8 Aerial Oppression Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[183974] = {
					"Cartel Plunderer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183463] = {
					"Remnant of a Fallen King", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114526] = {
					"Ghostly Understudy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82534] = {
					"Spike", -- [1]
					"Highmaul", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[203939] = {
					"Animation Fluid", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96611] = {
					"Angerhoof Bull", -- [1]
					"Halls of Valor", -- [2]
				},
				[199333] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180906] = {
					"Halondrus", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198310] = {
					"Flame Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[170157] = {
					"Stygian Runesmith", -- [1]
					"The Shadowlands", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[197799] = {
					"Quarry Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150195] = {
					"Gnome-Eating Slime", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168111] = {
					"Empowered Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[205478] = {
					"Conduit Guardian", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[168112] = {
					"General Kaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[197801] = {
					"Awakened Terrasentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[178862] = {
					"Screamspike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168113] = {
					"General Grashaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[1863] = {
					"Zahona", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[180399] = {
					"Evaile", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[126559] = {
					"Dark Manifestation", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[193709] = {
					"Primalist Earthwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185008] = {
					"Volatile Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[179890] = {
					"Executioner Varruth", -- [1]
					"Plaguefall", -- [2]
				},
				[11859] = {
					"Doomguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[179891] = {
					"Soggodon the Breaker", -- [1]
					"Plaguefall", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[130400] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173238] = {
					"Deadsoul Strider", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[17252] = {
					"Thooghun", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179894] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114790] = {
					"Viz'aduum the Watcher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[185528] = {
					"Trickclaw Mystic", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179386] = {
					"Corsair Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[173756] = {
					"Stone Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114792] = {
					"Virtuous Lady", -- [1]
					"Return to Karazhan", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[194745] = {
					"Rotfang Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[175806] = {
					"So'azmi", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76914] = {
					"Coldtusk", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[199353] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[153285] = {
					"Training Dummy", -- [1]
					"Kalimdor", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[180415] = {
					"Mawsworn Axeguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185534] = {
					"Bonebolt Hunter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[177856] = {
					"Vicious Ghoul", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114794] = {
					"Skeletal Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165060] = {
					"Animimic", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167109] = {
					"Skeletal Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[81779] = {
					"Ogron Mauler", -- [1]
					"Highmaul", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[181954] = {
					"Anduin Wrynn", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177860] = {
					"Desiccated Swordsman", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81780] = {
					"Guard Captain Thag", -- [1]
					"Highmaul", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[194241] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164553] = {
					"Misty Ally", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[81269] = {
					"Warden Thul'tok", -- [1]
					"Highmaul", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114541] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[77942] = {
					"Primal Storm Elemental", -- [1]
					"Theater of Pain", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[150222] = {
					"Gunker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81270] = {
					"Gorian Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[167115] = {
					"Necromancer Warcaster", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[200388] = {
					"Malformed Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[184520] = {
					"Anduin's Despair", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[201413] = {
					"Inflammable Wall", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[90997] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[187593] = {
					"Primal Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184522] = {
					"Vigilant Custodian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[104818] = {
					"Ancestral Protection Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[197831] = {
					"Quarry Stonebreaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81272] = {
					"Gorian Runemaster", -- [1]
					"Highmaul", -- [2]
				},
				[183499] = {
					"Hired Muscle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180428] = {
					"Tortured Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[114801] = {
					"Spectral Apprentice", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[78714] = {
					"Kargath Bladefist", -- [1]
					"Highmaul", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[197835] = {
					"Kaurdyth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114802] = {
					"Spectral Journeyman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[79739] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[126832] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91001] = {
					"Tarspitter Lurker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184530] = {
					"Eternal Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[104822] = {
					"Flame of Woe", -- [1]
					"Halls of Valor", -- [2]
				},
				[201934] = {
					"Shadowflame Amalgamation", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184019] = {
					"Burly Rock-Thrower", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[177877] = {
					"Desiccated Magus", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[184020] = {
					"Hulking Berserker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[200912] = {
					"Neldris", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[92538] = {
					"Tarspitter Grub", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[36296] = {
					"Apothecary Hummel", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184535] = {
					"Overthrown Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[198869] = {
					"Sundered Devastator", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[173276] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[115831] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[200918] = {
					"Rionthus", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[177372] = {
					"Mawsworn Realmbinder", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[198871] = {
					"Sundered Scaleguard", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[184539] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[198872] = {
					"Sundered Manaweaver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[172255] = {
					"Gravestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[177886] = {
					"Arthas Menethil", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[198873] = {
					"Sundered Edgelord", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173280] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[198874] = {
					"Sundered Siegemaster", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[202971] = {
					"Null Glimmer", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[198878] = {
					"Primalist Tempestmaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[194273] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190690] = {
					"Thundering Ravager", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191714] = {
					"Seeking Stormling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[80005] = {
					"Skylord Tovra", -- [1]
					"Grimrail Depot", -- [2]
				},
				[197857] = {
					"Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179942] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[150254] = {
					"Scraphound", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[189669] = {
					"Binding Spear", -- [1]
					"Neltharus", -- [2]
				},
				[137458] = {
					"Rotting Spore", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[416] = {
					"Rupuri", -- [1]
					"Castle Nathria", -- [2]
				},
				[417] = {
					"Kreefenn", -- [1]
					"Theater of Pain", -- [2]
				},
				[168683] = {
					"Gorak Zhar", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[173802] = {
					"Carved Assistant", -- [1]
					"Castle Nathria", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[179433] = {
					"Vault Aegis", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[179434] = {
					"Mawsworn Doubtcaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131318] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[200936] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[176879] = {
					"Hollowsoul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185581] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176880] = {
					"Soulscream Tormentor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185582] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[195820] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166644] = {
					"Artificer Xy'mox", -- [1]
					"Castle Nathria", -- [2]
				},
				[199916] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[100486] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[185584] = {
					"Blasphemy", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[191215] = {
					"Tarasek Legionnaire", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[200943] = {
					"Electrified Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[179446] = {
					"Incinerator Arkolath", -- [1]
					"Plaguefall", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[59722] = {
					"Pile of Corpses", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[80782] = {
					"Icespine Stinger", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[187638] = {
					"Flamescale Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81806] = {
					"Gorian Royal Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[172282] = {
					"Web Wrap", -- [1]
					"Plaguefall", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[200948] = {
					"Nokhud Apprentice", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168700] = {
					"Pestering Fiend", -- [1]
					"Castle Nathria", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[186105] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[178427] = {
					"Deadsoul Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[179963] = {
					"Terror Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[196855] = {
					"Braekkas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[186106] = {
					"Overthrown Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114312] = {
					"Moroes", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186107] = {
					"Vault Keeper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[143622] = {
					"Wild Imp", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[201464] = {
					"Cinderstep Weaver", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[174335] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[201465] = {
					"Cinderstep Melter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[192764] = {
					"Flame Guardian", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[201466] = {
					"Cinderstep Igniter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[190205] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[201467] = {
					"Stonebreath Summoner", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[201468] = {
					"Stonebreath Landslider", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[201469] = {
					"Restless Pebble", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[201470] = {
					"Flickering Flame", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[194816] = {
					"Forgewrought Monstrosity", -- [1]
					"Neltharus", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[192769] = {
					"Thondrozus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[201471] = {
					"Earthborne Charger", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[201472] = {
					"Torch Revenant", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[186116] = {
					"Gutshot", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[168713] = {
					"Dread Caller Skulfir", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114318] = {
					"Baron Rafe Dreuger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167691] = {
					"Stasis Trap", -- [1]
					"Castle Nathria", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[185607] = {
					"Lost Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176394] = {
					"P.O.S.T. Worker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164621] = {
					"Oozing Slime", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[186120] = {
					"Treemouth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[58959] = {
					"핍툴", -- [1]
					"Castle Nathria", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[176395] = {
					"Overloaded Mailemental", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[193799] = {
					"Rotchanting Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186121] = {
					"Decatriarch Wratheye", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[195847] = {
					"Ukhel Willcrusher", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[185610] = {
					"Unmade Steward", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186122] = {
					"Rira Hackclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[36565] = {
					"Apothecary Baxter", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[114320] = {
					"Lord Robin Daris", -- [1]
					"Return to Karazhan", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[178957] = {
					"Empowered Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[186124] = {
					"Gashtooth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[150293] = {
					"Mechagon Prowler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114321] = {
					"Lord Crispin Ference", -- [1]
					"Return to Karazhan", -- [2]
				},
				[193291] = {
					"Apex Blazewing", -- [1]
					"Neltharus", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[170257] = {
					"Broker Ve'nott", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[150295] = {
					"Tank Buster MK1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[192781] = {
					"Ore Elemental", -- [1]
					"Neltharus", -- [2]
				},
				[193293] = {
					"Qalashi Warden", -- [1]
					"Neltharus", -- [2]
				},
				[78491] = {
					"Brackenspore", -- [1]
					"Highmaul", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186128] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[176404] = {
					"Dark Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[181011] = {
					"Ancient Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187154] = {
					"Unstable Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
				},
				[69791] = {
					"Vilww", -- [1]
					"Castle Nathria", -- [2]
				},
				[78237] = {
					"Phemos", -- [1]
					"Highmaul", -- [2]
				},
				[197904] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[169751] = {
					"Ashen Wasp", -- [1]
					"Theater of Pain", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[192786] = {
					"Qalashi Plunderer", -- [1]
					"Neltharus", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[192787] = {
					"Qalashi Spinecrusher", -- [1]
					"Neltharus", -- [2]
				},
				[78238] = {
					"Pol", -- [1]
					"Highmaul", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[166170] = {
					"Phaedra", -- [1]
					"Bastion Scenario", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[192788] = {
					"Qalashi Thaumaturge", -- [1]
					"Neltharus", -- [2]
				},
				[176920] = {
					"Domination Arrow", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[145185] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[187159] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[184600] = {
					"Corordro", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[187160] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[151329] = {
					"Warden Skoldus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[153377] = {
					"Goop", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[166174] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[184091] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184603] = {
					"Ancient Bufonid", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[94621] = {
					"Invisible Stalker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[198424] = {
					"Primalist Frostsculptor", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[184092] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166177] = {
					"Reinforced Pouncer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114329] = {
					"Luminore", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166178] = {
					"Forsworn Doubtguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[144680] = {
					"Frida Ironbellows", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[153382] = {
					"Maw of the Maw", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114330] = {
					"Babblet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[82594] = {
					"Grimrail Loader", -- [1]
					"Grimrail Depot", -- [2]
				},
				[45912] = {
					"Wild Vortex", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[186658] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[170790] = {
					"Tranquil Puddlewader", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[182053] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[192803] = {
					"War Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190245] = {
					"Broodkeeper Diurna", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166187] = {
					"Runestag", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[195876] = {
					"Desecrated Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[79015] = {
					"Ko'ragh", -- [1]
					"Highmaul", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[80551] = {
					"Shard of Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[181546] = {
					"Prototype of Renewal", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[131383] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[176940] = {
					"Soulember", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[184107] = {
					"Runic Protector", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[181548] = {
					"Prototype of Absolution", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[189227] = {
					"Qalashi Hunter", -- [1]
					"Neltharus", -- [2]
				},
				[181549] = {
					"Prototype of War", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184622] = {
					"Incarnation of Torment", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[181551] = {
					"Prototype of Duty", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114338] = {
					"Mana Confluence", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184623] = {
					"Ancient Avian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[31216] = {
					"Imfiredup", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205611] = {
					"Molten Hound", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[189232] = {
					"Kokia Blazehoof", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[189233] = {
					"Caustic Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184627] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[189235] = {
					"Overseer Lahar", -- [1]
					"Neltharus", -- [2]
				},
				[80557] = {
					"Mote of Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[201522] = {
					"Summitshaper Lorac", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[182071] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[122532] = {
					"Ember of Taeshalach", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[176953] = {
					"Mawsworn Flamehand", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205619] = {
					"Sarek Cinderbreath", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[185656] = {
					"Filth Caller", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[187192] = {
					"Rageclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[205620] = {
					"Malgosa Spellbinder", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[182074] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190776] = {
					"Arcane Commander", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[176956] = {
					"Shadowsteel Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[205622] = {
					"Krono Sandtongue", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[45919] = {
					"Young Storm Dragon", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[205623] = {
					"Drazos Blackwing", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[76466] = {
					"Psyfiend", -- [1]
					"Auchindoun", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"Halls of Valor", -- [2]
				},
				[190779] = {
					"Arcane Golem", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[190780] = {
					"Arcane Elemental", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[184126] = {
					"Defense Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[189247] = {
					"Tamed Phoenix", -- [1]
					"Neltharus", -- [2]
				},
				[165189] = {
					"gumi", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205628] = {
					"Twisted Elementium", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[184130] = {
					"Earthen Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[205629] = {
					"Crazed Experiment", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[184131] = {
					"Earthen Guardian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[185155] = {
					"Kin'tessa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184132] = {
					"Earthen Warder", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[179526] = {
					"Troz'igal the Oppressor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184134] = {
					"Scavenging Leaper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[97202] = {
					"Olmyr the Enlightened", -- [1]
					"Halls of Valor", -- [2]
				},
				[114350] = {
					"Shade of Medivh", -- [1]
					"Return to Karazhan", -- [2]
				},
				[194373] = {
					"Brackenhide Gnoll", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[45922] = {
					"Empyrean Assassin", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[193352] = {
					"Hextrick Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[192329] = {
					"Territorial Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184651] = {
					"Subjugator Zeltoth", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[205638] = {
					"Sundered Flame Banner", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[75194] = {
					"Gnasher", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166225] = {
					"Beckoned Doubt", -- [1]
					"Bastion Scenario", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[189773] = {
					"Protoform Barrier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[203594] = {
					"Lumbering Boulder", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186191] = {
					"Decay Speaker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192334] = {
					"Graath", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[76220] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[191311] = {
					"Infinite Whelp", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[205644] = {
					"Oozing Sludge", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[157016] = {
					"Imperial Archivist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[79548] = {
					"Assault Cannon", -- [1]
					"Grimrail Depot", -- [2]
				},
				[189265] = {
					"Qalashi Bonetender", -- [1]
					"Neltharus", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194896] = {
					"Primal Stormshield", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[191313] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[192337] = {
					"Void Tendril", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[184659] = {
					"Dominated Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189266] = {
					"Qalashi Trainee", -- [1]
					"Neltharus", -- [2]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[196946] = {
					"Lurking Lunker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[43878] = {
					"Grand Vizier Ertan", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[180567] = {
					"Frenzied Nightclaw", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[194389] = {
					"Lava Spawn", -- [1]
					"Neltharus", -- [2]
				},
				[87229] = {
					"Iron Blood Mage", -- [1]
					"Highmaul", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[176474] = {
					"Goopdtwo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205651] = {
					"Bubbling Slime", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[187224] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[95676] = {
					"Odyn", -- [1]
					"Halls of Valor", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[177500] = {
					"Corsair Brute", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[185691] = {
					"Vicious Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[169823] = {
					"Gorm Behemoth", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[201560] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198489] = {
					"Denizen of the Dream", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[188252] = {
					"Melidrussa Chillworn", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[205656] = {
					"Sundered Chemist", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[175456] = {
					"Swarm Training Dummy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[186206] = {
					"Cruel Bonecrusher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[53094] = {
					"Patriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[193373] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187231] = {
					"Wither Biter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[45928] = {
					"Executor of the Caliph", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[172899] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[186208] = {
					"Rotbow Stalker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[197982] = {
					"Storm Warrior", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[183138] = {
					"Inchoate Shadow", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[114364] = {
					"Mana-Gorged Wyrm", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[153451] = {
					"Kosarus the Fallen", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[130489] = {
					"Dazarian Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[187238] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[200035] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92612] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[178539] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[177004] = {
					"Tortured Amalgamation", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178029] = {
					"Mawsworn Wingsoldier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[205671] = {
					"Shadow Additive", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[186220] = {
					"Brackenhide Shaper", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114625] = {
					"Phantom Guest", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196970] = {
					"Taranthiza", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[205672] = {
					"Flame Additive", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[205673] = {
					"Sundered Devourer", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[156022] = {
					"Bubbling Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[201579] = {
					"Magmorax", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[45932] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[156023] = {
					"Miniature Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[186226] = {
					"Fetid Rotsinger", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[114628] = {
					"Skeletal Waiter", -- [1]
					"Return to Karazhan", -- [2]
				},
				[186227] = {
					"Monstrous Decay", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[150396] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189299] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[150397] = {
					"King Mechagon", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183669] = {
					"Fiendish Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[184693] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[98761] = {
					"Goodoption", -- [1]
					"Maw of Souls", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Theater of Pain", -- [2]
				},
				[186229] = {
					"Wilted Oak", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199027] = {
					"Magmas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[178041] = {
					"Mawsworn Shackler", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[199028] = {
					"Glacias", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187767] = {
					"Embar Firepath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[202612] = {
					"Cliffkeeper Bouldani", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[199029] = {
					"Cyclas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[202613] = {
					"Portalkeeper Cimbra", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[199030] = {
					"Loamas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173949] = {
					"Nathrian Soldier", -- [1]
					"Castle Nathria", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187772] = {
					"Opalfang", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[115401] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[199547] = {
					"Frostforged Zealot", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[202108] = {
					"Djaradin Dragonhunter", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[199549] = {
					"Flamesworn Herald", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[202109] = {
					"Djaradin Commander", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[173445] = {
					"Sindrel", -- [1]
					"Castle Nathria", -- [2]
				},
				[186242] = {
					"Skulking Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[114636] = {
					"Phantom Guardsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196992] = {
					"Arcane Elemental", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[185168] = {
					"Brute", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[191243] = {
					"Wild Lasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[94331] = {
					"Petrifying Crystal", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[45930] = {
					"Minister of Air", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[193565] = {
					"Nokhudon Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[98246] = {
					"Risen Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[196972] = {
					"Korvelnor", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[196482] = {
					"Overgrown Ancient", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[59705] = {
					"Scarlet Flamethrower", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[173448] = {
					"Dragost", -- [1]
					"Castle Nathria", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[176520] = {
					"Ocular Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[186246] = {
					"Fleshripper Vulture", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179080] = {
					"Empowered Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[204162] = {
					"Flowbee", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[181398] = {
					"Mal'Ganis", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[189318] = {
					"Infected Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[183688] = {
					"Stasis Trap", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[197509] = {
					"Primal Thundercloud", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[80599] = {
					"Night-Twisted Earthwarper", -- [1]
					"Highmaul", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59746] = {
					"Scarlet Centurion", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[79720] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[78549] = {
					"Gorian Reaver", -- [1]
					"Highmaul", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[45915] = {
					"Armored Mistral", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[173444] = {
					"Caramain", -- [1]
					"Castle Nathria", -- [2]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[91002] = {
					"Rotdrool Grabber", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[193553] = {
					"Nokhudon Warhound", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[43873] = {
					"Altairus", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[116563] = {
					"Ancient Core Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[197169] = {
					"Urglan", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[45477] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[100820] = {
					"Spirit Wolf", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[183413] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[52019] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[170385] = {
					"Writhing Misery", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178043] = {
					"Mawsworn Lancer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[87768] = {
					"Night-Twisted Fanatic", -- [1]
					"Highmaul", -- [2]
				},
				[184206] = {
					"Malicious Imp", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[126969] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[59930] = {
					"Empowered Zombie", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[87910] = {
					"Gorian Rune-Mender", -- [1]
					"Highmaul", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[99922] = {
					"Ebonclaw Packmate", -- [1]
					"Halls of Valor", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'nyy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180113] = {
					"Rattling Mage", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177893] = {
					"Mawforged Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[193544] = {
					"Nokhudon Houndsman", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[176531] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178394] = {
					"Cartel Lackey", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184494] = {
					"Anduin's Doubt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[155251] = {
					"Elder Longbranch", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[79068] = {
					"Iron Grunt", -- [1]
					"Highmaul", -- [2]
				},
				[144248] = {
					"Head Machinist Sparkflux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179893] = {
					"Cartel Skulker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[155250] = {
					"Decayspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[184093] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173973] = {
					"Nathrian Tracker", -- [1]
					"Castle Nathria", -- [2]
				},
				[180486] = {
					"Dirtwhistle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[152594] = {
					"Broker Ve'ken", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[147614] = {
					"Dark Iron Primalist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[183496] = {
					"Foul Gorger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[144244] = {
					"The Platinum Pummeler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[96934] = {
					"Valarjar Trapper", -- [1]
					"Halls of Valor", -- [2]
				},
				[180427] = {
					"Loom Guardian", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185181] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187139] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[129526] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[178071] = {
					"Maw Assassin", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[88967] = {
					"Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[121975] = {
					"Aggramar", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[99657] = {
					"Deranged Mindflayer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[178072] = {
					"Anduin Wrynn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165275] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[173466] = {
					"Fara", -- [1]
					"Castle Nathria", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[154015] = {
					"Escaped Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[186150] = {
					"Soul Fragment", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[176538] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[182169] = {
					"Lihuvim", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[154016] = {
					"Prisonbreak Soulmender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176539] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[192919] = {
					"Gigantic Thresher", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[82399] = {
					"Ogron Earthshaker", -- [1]
					"Highmaul", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[175616] = {
					"Zo'phex", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[152612] = {
					"Subjugator Klontzas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[193944] = {
					"Qalashi Lavamancer", -- [1]
					"Neltharus", -- [2]
				},
				[165279] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170910] = {
					"Shimmering Wader", -- [1]
					"Halls of Atonement", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[197793] = {
					"Awakened Juggernaut", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[82400] = {
					"Ogron Brute", -- [1]
					"Highmaul", -- [2]
				},
				[152995] = {
					"Warden of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[183498] = {
					"Illicit Collector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[45935] = {
					"Temple Adept", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[201261] = {
					"Kazzara, the Hellforged", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[97083] = {
					"King Ranulf", -- [1]
					"Halls of Valor", -- [2]
				},
				[189340] = {
					"Chargath, Bane of Scales", -- [1]
					"Neltharus", -- [2]
				},
				[163746] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184733] = {
					"Dominated Grunt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[144295] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[178079] = {
					"The Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[47238] = {
					"Whipping Wind", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[196971] = {
					"Rendvith", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[114637] = {
					"Spectral Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[154022] = {
					"Prisonbreak Packleader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184533] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168110] = {
					"Empowered Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114650] = {
					"Phantom Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180640] = {
					"Stormbound Breaker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157094] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[115418] = {
					"Spider", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190366] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[177285] = {
					"Mawsworn Gatekeeper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[87589] = {
					"Ogron Warbringer", -- [1]
					"Highmaul", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[76260] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[95675] = {
					"God-King Skovald", -- [1]
					"Halls of Valor", -- [2]
				},
				[101639] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[205618] = {
					"Thorak Greenscale", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[184737] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[144299] = {
					"Workshop Defender", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115419] = {
					"Ancient Tome", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"Theater of Pain", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184738] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[176537] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184734] = {
					"Sacred Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[200913] = {
					"Thadrion", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[144301] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[153003] = {
					"Soul Fragment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[180786] = {
					"Binding of Misery", -- [1]
					"Plaguefall", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[81985] = {
					"Everbloom Tender", -- [1]
					"The Everbloom", -- [2]
				},
				[130521] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[144303] = {
					"G.U.A.R.D.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[194467] = {
					"Brackenhide Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[130522] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165276] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194469] = {
					"Fledgling Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[178601] = {
					"Kevin's Oozeling", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[183412] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[198870] = {
					"Sundered Preserver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150249] = {
					"Pistonhead Scrapper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[144300] = {
					"Mechagon Citizen", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[121985] = {
					"Flame of Taeshalach", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[129699] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[180389] = {
					"Mawsworn Rageguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185574] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[176556] = {
					"Alcruux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[196559] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[184746] = {
					"Cartel Plunderer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[79545] = {
					"Nitrogg Thundertower", -- [1]
					"Grimrail Depot", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[205734] = {
					"Sundered Edgelord", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[153011] = {
					"Binder Baritas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[150159] = {
					"King Gobbamak", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184742] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[10467] = {
					"Mana Tide Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[205735] = {
					"Sundered Preserver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[152500] = {
					"Deadsoul Amalgam", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[186284] = {
					"Gutchewer Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[80822] = {
					"Night-Twisted Berserker", -- [1]
					"Highmaul", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183424] = {
					"Virtuous Gentleman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[205736] = {
					"Sundered Siegemaster", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[170417] = {
					"Animated Stygia", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173469] = {
					"Kullan", -- [1]
					"Castle Nathria", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[126493] = {
					"Netherguard Transmogrifier", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[205737] = {
					"Sundered Manaweaver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[157109] = {
					"Vampire Bat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[85225] = {
					"Gorian Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[199595] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[77803] = {
					"Railmaster Rocketspark", -- [1]
					"Grimrail Depot", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[153015] = {
					"Bound Soul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[192481] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[176562] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[172979] = {
					"Honeydew Sporeflutterer", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165764] = {
					"Rockbound Vanquisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180470] = {
					"Verethian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"Castle Nathria", -- [2]
				},
				[194991] = {
					"Oathsworn Vanguard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[177588] = {
					"Lordaeron Footman", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[53115] = {
					"Molten Lord", -- [1]
					"Firelands", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[146365] = {
					"Blazing Fireguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[126489] = {
					"Creeping Void", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[185268] = {
					"Ebonsteel Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[146366] = {
					"Molten Hound", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[73967] = {
					"Niuzao", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[69792] = {
					"Vilww", -- [1]
					"Castle Nathria", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146367] = {
					"Char'golm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[167923] = {
					"Diseased Remnant", -- [1]
					"Plaguefall", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177592] = {
					"Silver Hand Betrayer", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[185271] = {
					"Stellar Mote", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[186125] = {
					"Tricktotem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[175546] = {
					"Timecap'n Hooktail", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[130575] = {
					"Wandering Axebeak", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[180665] = {
					"Gibbering Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[177594] = {
					"Mawsworn Agonizer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[146370] = {
					"Dark Iron Vanguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176571] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[186127] = {
					"Ebonsteel Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[194487] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[194999] = {
					"Volatile Spark", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[146371] = {
					"Dark Iron Primalist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[195821] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[78623] = {
					"Cho'gall", -- [1]
					"Highmaul", -- [2]
				},
				[176572] = {
					"Mawsworn Accursed", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185274] = {
					"Astral Particle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[186353] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[183992] = {
					"Automated Defense Matrix", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185275] = {
					"Kelmortos", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[157122] = {
					"Patrician Cromwell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179133] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[177164] = {
					"Mawsworn Pillager", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[176574] = {
					"Mawsworn Soulkeeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[187315] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[86256] = {
					"Gorian High Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[152517] = {
					"Deadsoul Lifetaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[189363] = {
					"Infected Lasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[126604] = {
					"Curious Voidstalker", -- [1]
					"Outland", -- [2]
				},
				[178623] = {
					"Mawsworn Guard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179135] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[180159] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176576] = {
					"Mawsworn Pyremancer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[177600] = {
					"Mawsworn Realmbreaker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[174336] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[178624] = {
					"Mawsworn Sentry", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179136] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[189886] = {
					"Blazebound Firestorm", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[176577] = {
					"Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[177601] = {
					"Mawsworn Invoker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[171522] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[178625] = {
					"Mawsworn Archer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[78121] = {
					"Gorian Warmage", -- [1]
					"Highmaul", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[176578] = {
					"Vault Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[178626] = {
					"Mawrat", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169925] = {
					"Begrudging Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[183745] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[176579] = {
					"Keeper Hazaduum", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171461] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[94960] = {
					"Hymdall", -- [1]
					"Halls of Valor", -- [2]
				},
				[182210] = {
					"Magically Regulated Automa Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[200131] = {
					"Sha-Touched Guardian", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[81398] = {
					"Frostwall Goren Hatchling", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[130024] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[53119] = {
					"Flamewaker Forward Guard", -- [1]
					"Firelands", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168966] = {
					"Brightsparkle", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[185347] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[179892] = {
					"Oros Coldheart", -- [1]
					"Plaguefall", -- [2]
				},
				[205759] = {
					"Whirling Torrent", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[198081] = {
					"Quarry Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[127119] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[175559] = {
					"Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[177095] = {
					"Kyra", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180484] = {
					"Vilt", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[180485] = {
					"Hips", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[132051] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[189893] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[195580] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[110063] = {
					"Beast", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[53120] = {
					"Flamewaker Pathfinder", -- [1]
					"Firelands", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[201155] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[190406] = {
					"Aqualing", -- [1]
					"Halls of Infusion", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[179124] = {
					"Shade of Destiny", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[201668] = {
					"Neltharion", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[127124] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167935] = {
					"Contagious Droplet", -- [1]
					"Plaguefall", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77816] = {
					"Borka the Brute", -- [1]
					"Grimrail Depot", -- [2]
				},
				[192519] = {
					"Monstrous Mud", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169421] = {
					"Felguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[166915] = {
					"Possessed Tender", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[178964] = {
					"Empowered Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[180171] = {
					"Brooding Cleric", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166169] = {
					"Adonias", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114715] = {
					"Ghostly Chef", -- [1]
					"Return to Karazhan", -- [2]
				},
				[86185] = {
					"Night-Twisted Supplicant", -- [1]
					"Highmaul", -- [2]
				},
				[156158] = {
					"Adjutant Felipos", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53121] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[76593] = {
					"Frost Wolf", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[191926] = {
					"Fishface", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[177613] = {
					"Burning Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151812] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[126470] = {
					"Nether-Prince Durzaan", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[96677] = {
					"Steeljaw Grizzly", -- [1]
					"Halls of Valor", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[180501] = {
					"Innocent Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[169425] = {
					"Felhound", -- [1]
					"Castle Nathria", -- [2]
				},
				[58964] = {
					"Xordus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[53732] = {
					"Unbound Smoldering Elemental", -- [1]
					"Firelands", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[196043] = {
					"Primalist Infuser", -- [1]
					"Halls of Infusion", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[126491] = {
					"Netherguard Phaseblade", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[189901] = {
					"Warlord Sargha", -- [1]
					"Neltharus", -- [2]
				},
				[155945] = {
					"Gherus the Chained", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[85241] = {
					"Night-Twisted Brute", -- [1]
					"Highmaul", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[201746] = {
					"Sundered Naturalist", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[77428] = {
					"Imperator Mar'gok", -- [1]
					"Highmaul", -- [2]
				},
				[177950] = {
					"Soul Prison", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[45572] = {
					"Howling Gale", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[205843] = {
					"Cinderstep Melter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[170418] = {
					"Goxul the Devourer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76284] = {
					"Spiteful Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[103822] = {
					"Treant", -- [1]
					"Theater of Pain", -- [2]
				},
				[170452] = {
					"Essence Orb", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167246] = {
					"Unleashed Trauma", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114675] = {
					"Guardian's Image", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180690] = {
					"Vazzaren the Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[192761] = {
					"Iskakx", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[169429] = {
					"Shivarra", -- [1]
					"Castle Nathria", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[190688] = {
					"Blazing Fiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[192464] = {
					"Raging Ember", -- [1]
					"Neltharus", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[166914] = {
					"Fallen Keeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Castle Nathria", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[53206] = {
					"Hell Hound", -- [1]
					"Firelands", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[86329] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[179560] = {
					"Fragment of Troz'igal", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[78077] = {
					"Volatile Anomaly", -- [1]
					"Highmaul", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178133] = {
					"Murkbrine Wavejumper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190686] = {
					"Frozen Destroyer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[203812] = {
					"Voice From Beyond", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[172803] = {
					"Afterimage of Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184735] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[157099] = {
					"Imperial Censor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[97081] = {
					"King Bjorn", -- [1]
					"Halls of Valor", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[95674] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97084] = {
					"King Tor", -- [1]
					"Halls of Valor", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[184791] = {
					"Inner Hatred", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[175725] = {
					"Eye of the Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[103673] = {
					"Darkglare", -- [1]
					"Theater of Pain", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[87619] = {
					"Gorian Warden", -- [1]
					"Highmaul", -- [2]
				},
				[185154] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184792] = {
					"Cartel Overseer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177114] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[77483] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[187967] = {
					"Sennarth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[81407] = {
					"Grimrail Bombardier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[76259] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152033] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[115417] = {
					"Rat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[202258] = {
					"Djaradin Skullcrusher", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[45917] = {
					"Cloud Prince", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Halls of Valor", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[72849] = {
					"Driftwatcher Rylak", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[97788] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[184910] = {
					"Wo Drifter", -- [1]
					"Theater of Pain", -- [2]
				},
				[176605] = {
					"Scottbrexit", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[184143] = {
					"Hyperlight Archon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[107073] = {
					"Duskwatch Reinforcement", -- [1]
					"Court of Stars", -- [2]
				},
				[194330] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[183501] = {
					"Artificer Xy'mox", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173406] = {
					"Renegade Abomination", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[180990] = {
					"The Jailer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81362] = {
					"Frostwall Goren", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[185353] = {
					"Huntmaster", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[173464] = {
					"Deplina", -- [1]
					"Castle Nathria", -- [2]
				},
				[151658] = {
					"Strider Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[181850] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[153196] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[178018] = {
					"Vicious Ghoul", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[181861] = {
					"Magmatusk", -- [1]
					"Neltharus", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[183500] = {
					"Thieveing Agent", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[86611] = {
					"Mind Fungus", -- [1]
					"Highmaul", -- [2]
				},
				[45704] = {
					"Lurking Tempest", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[144246] = {
					"K.U.-J.0.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[167119] = {
					"Beckoned Wraith", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[145898] = {
					"Anointed Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[188100] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[196202] = {
					"Algeth'ar Educator", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[144249] = {
					"Omega Buster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183432] = {
					"Ebon Dominator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[172005] = {
					"Furrowed Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[203230] = {
					"Dragonfire Golem", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[188011] = {
					"Primal Terrasentry", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[53127] = {
					"Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[86275] = {
					"Gorian Enforcer", -- [1]
					"Highmaul", -- [2]
				},
				[184335] = {
					"Infinite Agent", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[196203] = {
					"Ethereal Restorer", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[178661] = {
					"Mawsworn Interceptor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196577] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[190947] = {
					"Altered Wymling", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
				},
				[173953] = {
					"Loyal Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[98693] = {
					"Shackled Servitor", -- [1]
					"Maw of Souls", -- [2]
				},
				[196835] = {
					"Kroshk", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[169601] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[115115] = {
					"Coldmist Stalker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[77905] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[145903] = {
					"Darkforged Crusader", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[174208] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[168579] = {
					"Fen Hatchling", -- [1]
					"Plaguefall", -- [2]
				},
				[147439] = {
					"Molten Hound", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[114522] = {
					"Mrs. Cauldrons", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[177286] = {
					"Phantasmic Amalgamation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[184453] = {
					"Brutal Motivator", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[53128] = {
					"Giant Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[147440] = {
					"Blazing Fireguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[156142] = {
					"Seeker of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[181224] = {
					"Dausegne", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[95843] = {
					"King Haldor", -- [1]
					"Halls of Valor", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[100818] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[179177] = {
					"Mawsworn Overlord", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[196581] = {
					"White Tiger Statue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[113998] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[76296] = {
					"Twisted Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Castle Nathria", -- [2]
				},
				[137716] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[116574] = {
					"Silver Forks", -- [1]
					"Return to Karazhan", -- [2]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[45924] = {
					"Turbulent Squall", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167406] = {
					"Sire Denathrius", -- [1]
					"Castle Nathria", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189467] = {
					"Qalashi Bonesplitter", -- [1]
					"Neltharus", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[185147] = {
					"Stormcaller", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[116562] = {
					"Flamewaker Centurion", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169157] = {
					"Mudlump", -- [1]
					"Castle Nathria", -- [2]
				},
				[177859] = {
					"Opengut Abomination", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
			},
			["indicator_anchor"] = {
				["y"] = 3,
				["x"] = -14,
				["side"] = 7,
			},
			["health_selection_overlay_alpha"] = 0,
			["aura_stack_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.06999999284744263, -- [4]
			},
			["minor_height_scale"] = 0.9999999403953552,
			["aura_padding"] = 1.5,
			["indicator_worldboss"] = false,
			["cast_statusbar_fadeout_time"] = 0.009999999776482582,
			["aura_stack_size"] = 7,
			["aura_height2"] = 17,
			["aura_show_crowdcontrol"] = true,
			["aura_border_colors"] = {
				["steal_or_purge"] = {
					0.9019607843137255, -- [1]
					0.9019607843137255, -- [2]
					0.9019607843137255, -- [3]
				},
				["crowdcontrol"] = {
					0, -- [1]
					0, -- [2]
					0, -- [3]
				},
				["offensive"] = {
					nil, -- [1]
					0, -- [2]
					0, -- [3]
				},
				["defensive"] = {
					0.8509803921568627, -- [1]
					0.4509803921568628, -- [2]
					0.1019607843137255, -- [3]
				},
				["is_buff"] = {
					nil, -- [1]
					0, -- [2]
					0, -- [3]
				},
			},
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Initialization",
					["UID"] = "0x6366dbeb1fda6285",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["__TrashAt"] = 1680622748,
					["Time"] = 1677634821,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1041231,
					["Enabled"] = true,
					["Revision"] = 1240,
					["semver"] = "",
					["Author"] = "Causese-Valdrakken",
					["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
					["Prio"] = 99,
					["Name"] = "Priority based scaling",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Enable Scaling",
							["Value"] = true,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to scale based on priority.",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for mid priority.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.75,
							["Name"] = "Mid prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "midScale",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for low priority.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Low prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "lowScale",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Enable Coloring",
							["Value"] = false,
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to be colored based on priority.",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Mid prio",
							["Value"] = {
								1, -- [1]
								0.92941182851791, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "midColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for mid priority.",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Low prio",
							["Value"] = {
								0.49803924560547, -- [1]
								0.49803924560547, -- [2]
								0.49803924560547, -- [3]
								1, -- [4]
							},
							["Key"] = "lowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for low priority.",
						}, -- [6]
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["version"] = -1,
				}, -- [1]
			},
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Show Energy"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Unit - Important"] = 11,
				["Cast - Quick Flash"] = 2,
				["Aura - Buff Alert"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Spiteful Affix"] = 3,
				["Explosion Affix M+"] = 14,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Cast - Stop Casting"] = 4,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Auto Set Skull"] = 11,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Tank Interrupt"] = 12,
				["Fixate On You"] = 11,
			},
			["extra_icon_anchor"] = {
				["x"] = -2,
			},
			["extra_icon_wide_icon"] = false,
			["range_check_alpha"] = 0.5999999642372131,
			["aura_frame2_anchor"] = {
				["y"] = 18.19999694824219,
				["side"] = 7,
			},
			["cast_statusbar_texture"] = "Atrocity",
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["indicator_faction"] = false,
			["debuff_show_cc"] = false,
			["extra_icon_height"] = 15,
			["transparency_behavior"] = 3,
			["spell_animations"] = false,
			["debuff_show_cc_border"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
			},
			["aura_consolidate"] = true,
			["extra_icon_width"] = 15,
			["health_statusbar_texture"] = "Atrocity",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Execute Range"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Attacking Specific Unit"] = 2,
				["Combo Points"] = 6,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
			},
			["minor_width_scale"] = 0.9999999403953552,
			["castbar_target_text_size"] = 13,
			["aura_frame1_anchor"] = {
				["y"] = 1.599990844726563,
				["side"] = 1,
			},
			["aura_timer_text_font"] = "Expressway",
			["cast_statusbar_color_finished"] = {
				0.392156862745098, -- [1]
				0.996078431372549, -- [2]
				0.6392156862745098, -- [3]
			},
			["extra_icon_stack_font"] = "Expressway",
			["aura_height"] = 15,
			["non_targeted_alpha_enabled"] = true,
			["cast_statusbar_bgtexture"] = "Atrocity",
			["aura2_x_offset"] = 0,
			["target_indicator"] = "NONE",
			["extra_icon_stack_size"] = 7,
			["aura_show_buff_by_the_unit"] = false,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateOverlapV"] = "1.6000000238419",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplatePersonalShowInCombat"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.1000000238419",
				["nameplateShowFriends"] = "0",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateLargeTopInset"] = "0.085",
				["ShowClassColorInNameplate"] = "1",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateShowDebuffsOnFriendly"] = "0",
			},
			["login_counter"] = 16451,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				1, -- [1]
				1, -- [2]
			},
			["aura_stack_font"] = "Expressway",
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.200000047683716,
				},
			},
			["aura_timer_text_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.06999999284744263, -- [4]
			},
			["auras_per_row_amount"] = 6,
			["aura_stack_anchor"] = {
				["y"] = 6,
				["x"] = 1.5,
				["side"] = 5,
			},
			["plate_config"] = {
				["player"] = {
					["castbar_enabled"] = false,
					["power_percent_text_enabled"] = false,
					["healthbar_enabled"] = false,
					["power_enabled"] = false,
					["percent_text_enabled"] = false,
					["percent_show_health"] = false,
					["spellpercent_text_enabled"] = false,
					["percent_text_ooc"] = false,
					["percent_show_percent"] = false,
					["percent_text_show_decimals"] = false,
					["module_enabled"] = false,
				},
				["friendlyplayer"] = {
					["actorname_use_friends_color"] = false,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 7,
					["actorname_use_class_color"] = true,
					["cast"] = {
						110, -- [1]
						5, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["quest_color"] = {
						0.5, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["actorname_use_guild_color"] = false,
					["all_names"] = false,
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["only_damaged"] = false,
					["only_thename"] = true,
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actorname_text_color"] = {
						0.5, -- [1]
						1, -- [2]
						0.5, -- [3]
					},
					["quest_enabled"] = true,
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						110, -- [1]
						5, -- [2]
					},
					["quest_color_enabled"] = true,
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actortitle_text_size"] = 9,
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actorname_text_outline"] = "OUTLINE",
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 9,
					["level_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.2999999821186066,
					["percent_text_size"] = 7,
					["percent_text_font"] = "Expressway",
					["buff_frame_y_offset"] = 0,
					["percent_show_percent"] = false,
					["spellname_text_font"] = "Expressway",
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellname_text_size"] = 7,
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["relevance_state"] = 3,
					["only_names"] = true,
					["actorname_text_size"] = 7,
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
				},
				["friendlynpc"] = {
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 7,
					["cast"] = {
						110, -- [1]
						5, -- [2]
					},
					["big_actortitle_text_size"] = 7,
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["all_names"] = false,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["cast_incombat"] = {
						110, -- [1]
						5, -- [2]
					},
					["relevance_state"] = 3,
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_show_decimals"] = false,
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["actorname_text_size"] = 7,
					["big_actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 7,
					["level_text_outline"] = "OUTLINE",
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_alpha"] = 0.2999999821186066,
					["percent_text_size"] = 7,
					["percent_text_font"] = "Expressway",
					["percent_show_percent"] = false,
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["spellname_text_size"] = 7,
					["spellname_text_font"] = "Expressway",
				},
				["global_health_width"] = 110,
				["global_health_height"] = 15,
				["enemyplayer"] = {
					["castbar_offset"] = -1.600006103515625,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 8,
					["cast"] = {
						110, -- [1]
						9, -- [2]
					},
					["big_actortitle_text_size"] = 8,
					["spellpercent_text_anchor"] = {
						["x"] = 0.5,
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["quest_color_enemy"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						110, -- [1]
						9, -- [2]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 11,
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["quest_color_neutral"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 7,
					["level_text_outline"] = "OUTLINE",
					["big_actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 8,
					["percent_show_health"] = false,
					["percent_text_size"] = 7,
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_font"] = "Expressway",
					["quest_enabled"] = true,
					["spellname_text_font"] = "Expressway",
					["actorname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellpercent_text_enabled"] = false,
					["spellname_text_size"] = 7,
					["level_text_alpha"] = 0.2999999821186066,
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["big_actorname_text_size"] = 8,
					["spellpercent_text_font"] = "Expressway",
					["cast"] = {
						110, -- [1]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 0.5,
					},
					["percent_text_show_decimals"] = false,
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["quest_color_enemy"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
					},
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						110, -- [1]
						10, -- [2]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 11,
					},
					["spellname_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
					},
					["actorname_text_size"] = 7,
					["big_actorname_text_font"] = "Expressway",
					["castbar_offset"] = -1.600006103515625,
					["level_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 8,
					["actorname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["spellpercent_text_enabled"] = false,
					["percent_text_font"] = "Expressway",
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_size"] = 7,
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["percent_text_size"] = 7,
					["level_text_alpha"] = 0.2999999821186066,
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_enabled"] = false,
				},
			},
			["aura_y_offset"] = 1.599990844726563,
			["aura_show_defensive_cd"] = true,
			["focus_texture"] = "Kait",
			["indicator_elite"] = false,
			["cast_statusbar_use_fade_effects"] = false,
			["border_thickness"] = 0.4999999701976776,
			["resources_settings"] = {
				["chr"] = {
					["Player-57-0D480764"] = "SoulShards",
					["Player-57-0B7D8135"] = "Chi",
					["Player-57-0B1CFD21"] = "ComboPoints",
					["Player-57-0D4542F5"] = "ComboPoints",
					["Player-57-0B43B146"] = "SoulShards",
					["Player-3684-0E213266"] = "SoulShards",
					["Player-57-0A630FDB"] = "ArcaneCharges",
					["Player-57-0BA165CE"] = "Runes",
					["Player-57-08C1DC17"] = "HolyPower",
					["Player-57-0D48734C"] = "SoulShards",
					["Player-57-0D62515D"] = "Essence",
					["Player-57-0B7B51F3"] = "ComboPoints",
				},
			},
			["indicator_scale"] = 0.7999999523162842,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["castbar_icon_size"] = "same as castbar plus healthbar",
			["npc_colors"] = {
				[203831] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196798] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186696] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189893] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[109908] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[194241] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[190405] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[196671] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[180431] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165470] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195265] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[77812] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[99359] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168156] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[184908] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[150254] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[173016] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114321] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"orangered", -- [3]
				},
				[177237] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[184910] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[164578] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[197698] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[175576] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164451] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[164707] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[196548] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[202814] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[75193] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186191] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[135169] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[185680] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[195399] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[126983] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[178392] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168418] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[200387] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114260] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[53134] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[198214] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[77816] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[185683] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[168420] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[165479] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[61670] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[170850] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168932] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[114261] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[116563] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184022] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[84978] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[177117] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[75899] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185685] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[184023] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168934] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[114262] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[190034] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[83892] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[191313] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[178142] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98406] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[197835] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[194894] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[200137] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165483] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[76220] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[76284] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[79545] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[194895] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168681] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[99366] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[101476] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[177889] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[187224] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196559] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[154744] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[184539] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[194897] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164463] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[173798] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[190294] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[175205] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[75966] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185691] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[177891] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[133007] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[59722] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163058] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[167406] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[177892] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185181] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165872] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[174568] = {
					false, -- [1]
					false, -- [2]
					"azure", -- [3]
				},
				[168942] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[45912] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114330] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[174569] = {
					false, -- [1]
					false, -- [2]
					"azure", -- [3]
				},
				[114522] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[89011] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190426] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189531] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[162038] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[105699] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[150146] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162039] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[97068] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[75713] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[180070] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[162040] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[195927] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[170480] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[187999] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[150276] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[52019] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[200131] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[80816] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195928] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[114584] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[126918] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[97197] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[170199] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168153] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190686] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195929] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[160495] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180840] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[61699] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[98280] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186339] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114329] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[75459] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195930] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[185168] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[104295] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[75715] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[193373] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[77889] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[116562] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[198872] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168310] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[127106] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[83893] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[95779] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[61929] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199353] = {
					true, -- [1]
					false, -- [2]
					"lightblue", -- [3]
				},
				[114526] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[76595] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[90997] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[75652] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[205651] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[84028] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[75198] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[198874] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[105703] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[58319] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[179821] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[83389] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[201560] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[192481] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[154758] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[193760] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[59789] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190947] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[90998] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[97200] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[97264] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[81983] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114783] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[205618] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[105704] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[166396] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[174197] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[83390] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[116574] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[180335] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[130896] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[196576] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[183495] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[77700] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163457] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[84989] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184300] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180336] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[101549] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[105705] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[170490] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168572] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[175861] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163458] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[184301] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[191847] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[202971] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[186220] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197219] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[91000] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[97202] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[164737] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[81985] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[104300] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[100527] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197985] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[165251] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163459] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[83392] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[75272] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178165] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[173178] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196835] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[203230] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[203826] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[91001] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[171772] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[165762] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[179446] = {
					false, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[190690] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[183412] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[76104] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[115020] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[174842] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[86526] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[198502] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[95861] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[81603] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[166275] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[92538] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196198] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[165764] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[198503] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[99188] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[100529] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[200035] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[180091] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168578] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[75210] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[198501] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168962] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[45917] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162057] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[189247] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[74571] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[150165] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[107435] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[97269] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[126848] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196712] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[102232] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[189886] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[102104] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168580] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[75211] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[170882] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[99891] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[194745] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180473] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[198709] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[75979] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[196202] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[169861] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[96247] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[196971] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[150297] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[180474] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186740] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[77130] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98677] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[179963] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186229] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[183416] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185537] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186741] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[182778] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[150169] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[172803] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[189299] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[179399] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[174210] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[177407] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[196972] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[77131] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[165515] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[100526] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[67093] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[102962] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[187638] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[163086] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[191206] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[187894] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[91006] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178631] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[45919] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[194999] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[94331] = {
					true, -- [1]
					false, -- [2]
					"lightblue", -- [3]
				},
				[91007] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[187767] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168843] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[184954] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[145185] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[151579] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[195696] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[199916] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[187768] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[97081] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[179840] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[194487] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[205671] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[138281] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114792] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[187897] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[151325] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[77133] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[179841] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186107] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[205672] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178630] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[112668] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[154011] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[114266] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[188026] = {
					true, -- [1]
					false, -- [2]
					"lightblue", -- [3]
				},
				[168717] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168845] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168973] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[183423] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[144294] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[187771] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[77134] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[183424] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168718] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[57109] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[79852] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[165010] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[75194] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[45915] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[97083] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[154014] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[191225] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[144295] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[98362] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[114794] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[162133] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[105715] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197697] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168594] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[177094] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[144296] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[97788] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196855] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[192761] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[154015] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[97084] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[78734] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[104246] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[130012] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163862] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[190588] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[178628] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[154016] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[98521] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[76177] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[115115] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[144298] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185346] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190207] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[176395] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199029] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[74579] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184580] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190206] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[80938] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[92610] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114796] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[176396] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154018] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[96574] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[104822] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[191230] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[95842] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197169] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[184453] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184581] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[129758] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[104247] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[130909] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[186116] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[144301] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[77905] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[91332] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184582] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[154020] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[151773] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[164506] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[191232] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[98813] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[59746] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[45922] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[53115] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[88967] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[95771] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114542] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[150168] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[186246] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178824] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[86372] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[96640] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114632] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[177808] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[183945] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[92612] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[190340] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168907] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[91781] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[185147] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166299] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[185353] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[56792] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[186120] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[199547] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167962] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167116] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[194816] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[199037] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199549] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[130400] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[171799] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189318] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[167963] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114312] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180495] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[166301] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[176404] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[114544] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[186122] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[190342] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98368] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166302] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[172312] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196992] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[91002] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[81297] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114289] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195842] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165919] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[79507] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[95939] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[179847] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[104251] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98177] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163618] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163746] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[101438] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[191222] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[100991] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[129699] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[193457] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163620] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[186125] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[190345] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[184335] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[79508] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189706] = {
					true, -- [1]
					false, -- [2]
					"darkviolet", -- [3]
				},
				[176535] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[59873] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[104273] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[97219] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[83025] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[98370] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[193799] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189707] = {
					true, -- [1]
					false, -- [2]
					"darkviolet", -- [3]
				},
				[185528] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[43873] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163621] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[95769] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[193544] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[188302] = {
					true, -- [1]
					false, -- [2]
					"darkviolet", -- [3]
				},
				[77080] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[45477] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196102] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[177816] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98243] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[197509] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[83026] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[114803] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[195847] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[76057] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[81236] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[177817] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[79510] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[59553] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[82579] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[91786] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[76296] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[169196] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165414] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189363] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[193291] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[151476] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[185363] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[114804] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[189235] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[59544] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[170147] = {
					false, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[79720] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[194315] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[187155] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[128551] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[79511] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[81638] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[59800] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[82597] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[61910] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[194316] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[74349] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184911] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[81984] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[131402] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[187593] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[173633] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98693] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[194317] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169893] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[196577] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[150712] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[151812] = {
					true, -- [1]
					false, -- [2]
					"transparent", -- [3]
				},
				[197801] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[203811] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[171557] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[98246] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[189233] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[115765] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[131817] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[96584] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[59545] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[61623] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[101437] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[176929] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[193553] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[201736] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[102019] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[87761] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[59801] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[173604] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[187159] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[130024] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[127019] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[100485] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163121] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[133836] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[192788] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163503] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[187160] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[101637] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[190485] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[91790] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[189464] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[59552] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[97097] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[187033] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[162099] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[102404] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[97173] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[100486] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[47238] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199182] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[102788] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[45928] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[151613] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[76446] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197904] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199333] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[178851] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[155216] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[59930] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163891] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[91792] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[45704] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[189466] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196115] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[42859] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[98761] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[168878] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[193558] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[170157] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[190381] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176551] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[196116] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[45924] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190362] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[132051] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163892] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168112] = {
					false, -- [1]
					false, -- [2]
					"transparent", -- [3]
				},
				[186124] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[101639] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196117] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[203939] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[196970] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[203809] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[150253] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168113] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163126] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[193944] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[91003] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[81819] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178141] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[97172] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163894] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[89012] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[192794] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[91783] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[202257] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[107073] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[188703] = {
					true, -- [1]
					false, -- [2]
					"darkviolet", -- [3]
				},
				[126832] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[201746] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[75426] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163128] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[176555] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[202258] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[81820] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[74787] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[94224] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[192796] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[180392] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186658] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[98706] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[56511] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[193352] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187154] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[193565] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[77734] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[185508] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[115388] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[188067] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178731] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[45930] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[198424] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190368] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199703] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197147] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163524] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[113537] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[97043] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[153285] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[76259] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168886] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[83613] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[91796] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[181546] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[83616] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[202262] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[197149] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[186150] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[190370] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[166969] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[121975] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[192800] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190377] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[172858] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[179891] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[76260] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163520] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166970] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[82590] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180782] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184107] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[202264] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199325] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[167998] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[186284] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[166971] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[203927] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[181549] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[101326] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164414] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[180015] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[190373] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[164926] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[179890] = {
					false, -- [1]
					false, -- [2]
					"palevioletred", -- [3]
				},
				[84957] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[176563] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[197535] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167612] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114624] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168891] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[190366] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[180432] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[168318] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[198047] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[191243] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[180387] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[100531] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[195138] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[192767] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[187139] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[76518] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[176565] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[177716] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[97170] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[176949] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165824] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[164929] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[197793] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[197406] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[174773] = {
					true, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[167615] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[76263] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[61213] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[78437] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[45932] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[195876] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[84767] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[56448] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[97171] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[114626] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[179892] = {
					false, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[164921] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[192680] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[195877] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[205968] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[173800] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[179893] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[101839] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164804] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[203806] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168627] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[195878] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[91787] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[98275] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[102287] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114627] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[174012] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[45572] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[56930] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[199717] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[155215] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[196263] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[192919] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[95766] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[99922] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[180407] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[96587] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178171] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[104270] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[80805] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[102277] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[97365] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[197799] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[192789] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[180664] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[191510] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[164552] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[100818] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129526] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[138338] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[190484] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[59705] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[155090] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[162689] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[190128] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[176957] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189265] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[186420] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[167111] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[165763] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[183404] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[155219] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[178139] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[169925] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[203812] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[179388] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[101075] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[95832] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[176703] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[198868] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[176959] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[80935] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[200836] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[102375] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[194990] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[155221] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[96664] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[59598] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[169927] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[205820] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[77483] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185656] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[115486] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[116549] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[164557] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[77803] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[199595] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[43878] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[98542] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[185357] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167965] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168988] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[187192] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[95834] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[45935] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[167964] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189878] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[104274] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184331] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[184124] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[205735] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[192334] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154663] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[111563] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[80937] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[155225] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[184125] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[205736] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[114249] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180417] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[102430] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[176581] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[155226] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[167691] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[114633] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[205737] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[88163] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[192764] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190776] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[169421] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[170572] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[164562] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[193462] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[131383] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[185534] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[99033] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[98810] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[130011] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[98538] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[80875] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[114634] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[179269] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[144293] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[171341] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190407] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168844] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[77890] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[84520] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[184444] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165076] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[190779] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[152033] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[97720] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[184130] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[186615] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[77935] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[131318] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190780] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[169425] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[115019] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[191164] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[184131] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[74355] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[114316] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[75506] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[169426] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[104278] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164567] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184132] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[167892] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[78728] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[137458] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[186226] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[150292] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[204337] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[166276] = {
					false, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[104918] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[198500] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[74356] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[76466] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[175992] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[169428] = {
					false, -- [1]
					false, -- [2]
					"orangered", -- [3]
				},
				[150160] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[97182] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[176973] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[98081] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168022] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180426] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[92387] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[169429] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[113998] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[199233] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[176974] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[162047] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[74357] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[114318] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[196679] = {
					true, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[169430] = {
					true, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[188100] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[192333] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[196045] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[81212] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[183497] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[198870] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190174] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[96608] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[115419] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[205620] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190403] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[151657] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[180429] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[180433] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[104217] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[150251] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[95843] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
			},
			["cast_statusbar_spark_half"] = true,
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 0.5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1680622827,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 171,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Cast Border",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"right\"\n    envTable.BorderThickness = .5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1.6, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1.6, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.IconBorder:SetIgnoreParentScale(false)\n    end    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1680622834,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 199,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Icon Border",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    unitFrame.castBar.ScheduleToHide = function (self) self:Hide() end\n    \nend",
					},
					["Time"] = 1680622833,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 61,
					["semver"] = "",
					["Author"] = "Caeleran-Draenor",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Hide Cast on Kick",
					["PlaterCore"] = 1,
					["version"] = -1,
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.RemainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > auraIcon.RemainingTime)) then\n                if not auraIcon.pandemicGlowStarted then\n                    Plater.StartButtonGlow(auraIcon, nil, envTable.options)\n                    auraIcon.pandemicGlowStarted = true\n                end\n            else\n                if auraIcon.pandemicGlowStarted then\n                    Plater.StopButtonGlow(auraIcon, envTable.options.key)\n                    auraIcon.pandemicGlowStarted = false\n                end\n            end                \n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (auraIcon:IsShown() and remainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > remainingTime)) then\n                    if not auraIcon.pandemicGlowStarted then\n                        Plater.StartButtonGlow(auraIcon, nil, envTable.options)\n                        auraIcon.pandemicGlowStarted = true\n                    end\n                else\n                    if auraIcon.pandemicGlowStarted then\n                        Plater.StopButtonGlow(auraIcon, envTable.options.key)\n                        auraIcon.pandemicGlowStarted = false\n                    end                    \n                end  \n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    \n    -- spellIDs:\n    envTable.glowSpells = {\n        [164815] = 5.4, -- sunfire\n        [164812] = 6.6, -- moonfire\n        [202347] = 7.2, -- stellar flare\n        [980] = 5.4, -- agony\n        [146739] = 4.2, -- corruption\n        [316099] = 6.3, -- ua1\n        [342938] = 6.3, -- ua2\n        [63106] = 4.5, -- siphon life\n        [157736] = 5.4, -- immolate\n        [34914] = 6.3, -- vampiric touch\n        [589] = 4.8, -- sw: pain\n        [204213] = 4.8, -- purge the wicked\n        [188389] = 5.4, -- flame shock\n        [191587] = 8.1, -- virulent plague\n        [703] = 5.4, -- garrote\n        [1943] = 7.2, -- rupture\n        [121411] = 4.2, -- crimson tempest\n        [346278] = 4.5, -- burning wound\n        [1079] = 5.4, -- rip\n        [155722] = 5.4, -- rake\n        [106830] = 5.4, -- thrash\n        [772] = 4.5, --rend\n    }\n    \n    \n    -- for the LibCustomGlow implementation:\n    envTable.options = {\n        color = \"#e1e1e1\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        \n    }\n    \nend",
					},
					["Time"] = 1680622750,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DEATHKNIGHT"] = true,
							["WARLOCK"] = true,
							["SHAMAN"] = true,
							["ROGUE"] = true,
							["DRUID"] = true,
							["DEMONHUNTER"] = true,
							["PRIEST"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 420,
					["semver"] = "1.0.3",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Pandemic Glow",
					["PlaterCore"] = 1,
					["version"] = 4,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if not envTable.units[select(6, strsplit(\"-\", UnitGUID(unitId)))] then\n        envTable.CheckAggro (unitFrame)\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if not envTable.units[select(6, strsplit(\"-\", UnitGUID(unitId)))] then\n        envTable.CheckAggro (unitFrame)\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.units = {\n        [\"120651\"] = true, -- Explosives \n        [\"174773\"] = true, -- Spiteful\n        [\"169430\"] = true, -- Ur'zul DH Necrolord\n        [\"169428\"] = true, -- Wrathguard DH Necrolord\n        [\"169425\"] = true, -- Felhound DH Necrolord\n        [\"168932\"] = true, -- Doomguard DH Necrolord\n        [\"169429\"] = true, -- Shivarra DH Necrolord\n        [\"169426\"] = true, -- Infernal DH Necrolord\n        [\"169421\"] = true, -- Felguard DH Necrolord\n    }\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.anothertank)\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680622833,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 192,
					["semver"] = "1.0.0",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
					["Prio"] = 98,
					["Name"] = "Force Threat Color",
					["PlaterCore"] = 1,
					["version"] = 1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"mediumseagreen\", --monk statue npcID\n        [103822] = \"mediumseagreen\", --druid treant npcID        \n        [61056] = \"mediumseagreen\", --shaman earth ele npcID\n        [95072] = \"mediumseagreen\", --shaman earth ele npcID    \n    }\n    \n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634908,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 292,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "",
					["Prio"] = 97,
					["Name"] = "Attacking Specific Unit",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [6]
				{
					["OptionsValues"] = {
						["BScdreverse"] = true,
						["BSborderth"] = 0.5,
						["BStimer_size"] = 18,
						["BSstack_size"] = 12,
						["BStimer_color"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.ExtraIconFrame:SetOption (\"text_size\", modTable.config.BStimer_size)\n    unitFrame.ExtraIconFrame:SetOption (\"text_color\", modTable.config.BStimer_color)\n    unitFrame.ExtraIconFrame:SetOption (\"desc_text_size\", modTable.config.BSdesc_size)\n    unitFrame.ExtraIconFrame:SetOption (\"stack_text_size\", modTable.config.BSstack_size)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier ()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier = function()\n        \n        if modTable.config.BShidefriendl and unitFrame.actorType == \"friendlyplayer\" then\n            unitFrame.ExtraIconFrame:Hide()\n        end      \n        \n        for index, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if (auraIcon:IsShown()) then\n                \n                local profile = Plater.db.profile\n                local Anchor = {\n                    side = modTable.config.Descanchor, \n                    x = modTable.config.Descxoff, \n                    y = modTable.config.Descyoff,\n                }              \n                local size = modTable.config.BSborderth\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                auraIcon.PixelPerfectBorder:UpdateSizes()\n                \n                auraIcon.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                auraIcon.Texture:ClearAllPoints()\n                auraIcon.Texture:SetAllPoints()\n                auraIcon.Border:Hide() \n                \n                Plater.SetFontOutlineAndShadow (auraIcon.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n                \n                Plater.SetAnchor (auraIcon.Desc, Anchor)\n                auraIcon.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n                auraIcon.Cooldown:SetDrawSwipe (true) \n                if modTable.config.BScdreverse then\n                    auraIcon.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n                end\n                \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680622827,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 424,
					["semver"] = "1.0.0",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Buff Special",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Basic Options",
							["Value"] = "Basic Options",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Hide Buff Special at Friendly UnitFrame",
							["Value"] = true,
							["Key"] = "BShidefriendly",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Hide Buff Special at Friendly UnitFrame",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Swipe Closure Inverted",
							["Value"] = true,
							["Key"] = "BScdreverse",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, swipe closure inverted",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special border thickness",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 2,
							["Key"] = "BSborderth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Border Thickness",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "Buff Special Text Options",
							["Value"] = "Buff Special Text Options",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set timer text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 14,
							["Key"] = "BStimer_size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timer Text Size",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Timer Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "BStimer_color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set timer text color",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set stack text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "BSstack_size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Stack Text Size",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "Buff Special Player Name Options",
							["Value"] = "Buff Special Player Name Options",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "BSdesc_size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text Size",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 4,
							["Key"] = "Descanchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text Anchor",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text y-offset",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = -2,
							["Key"] = "Descyoff",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text Y-offset",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text x-offset",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "Descxoff",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text X-offset",
						}, -- [15]
					},
					["HooksTemp"] = {
					},
					["version"] = 1,
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 2.9,\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1680622750,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 76,
					["semver"] = "1.0.0",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Timer Text Color",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = 1,
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    \n    -- settings:\n    local formatAuraTimers = modTable.config.formatAuraTimers\n    local formatBuffSpecialTimers = modTable.config.formatBuffSpecialTimers\n    \n    \n    -- time formatting function: (can be adjusted)\n    Plater.FormatTimeNew = function (s)\n        if s < 3 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%d\"):format(s)\n        elseif s < 3600 then\n            return (\"%d:%02d\"):format(s/60%60, s%60)\n        elseif s < 86400 then\n            return (\"%dh %02dm\"):format(s/(3600), s/60%60)\n        else\n            return (\"%dd %02dh\"):format(s/86400, (s /3600) - (floor(s/86400) * 24))\n        end\n    end\n    Plater.FormatTimeOrig = Plater.FormatTimeOrig or Plater.FormatTime\n    \n    local DF = _G[\"DetailsFramework\"]\n    DF.IconRowFunctions.FormatCooldownTimeOrig = DF.IconRowFunctions.FormatCooldownTimeOrig or DF.IconRowFunctions.FormatCooldownTime\n    \n    \n    -- exchange formatting:\n    function modTable.hookTimeFormat()\n        if formatAuraTimers then\n            Plater.FormatTime = Plater.FormatTimeNew\n        else\n            Plater.FormatTime = Plater.FormatTimeOrig\n        end\n        \n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if DF.IconRowFunctions.FormatCooldownTime then\n                DF.IconRowFunctions.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n        else\n            -- no buff special\n            if DF.IconRowFunctions.FormatCooldownTime then\n                DF.IconRowFunctions.FormatCooldownTime = DF.IconRowFunctions.FormatCooldownTimeOrig\n            end\n        end\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        else\n            \n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = DF.IconRowFunctions.FormatCooldownTimeOrig\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeOrig (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        end\n        \n    end\n    \n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    modTable.hookTimeFormat()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680622828,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/mULsbUUxJ/11",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 199,
					["semver"] = "1.0.10",
					["Author"] = "Viash-Thrall",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Detailed Timer",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Format Aura Timers",
							["Value"] = true,
							["Key"] = "formatAuraTimers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Format Buff Special Timers",
							["Value"] = true,
							["Key"] = "formatBuffSpecialTimers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
					},
					["HooksTemp"] = {
					},
					["version"] = 11,
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = .5 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Time"] = 1680622828,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 178,
					["semver"] = "",
					["Author"] = "????????-Illidan",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Debuff Border",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1677634480,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135940,
					["Enabled"] = true,
					["Revision"] = 1230,
					["semver"] = "",
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Prio"] = 99,
					["Name"] = "Absorb Shields in Healthbar",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Options Intro",
							["Value"] = "Options For @scriptname",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = "",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Initialization",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Devouring Plague\"] = 23,\n        [\"Mind Flay\"] = 25,\n        \n        --Demon Hunter\n        [\"Burning Wound\"] = 50,\n        \n        --Warrior\n        [\"Rend\"] = 50,\n        [\"Colossus Smash\"] = 51,\n        \n        --Warlock\n        [\"Agony\"] = 50,\n        [\"Corruption\"] = 40,\n        [\"Unstable Affliction\"] = 30,\n        [\"Siphon Life\"] = 20,\n        [\"Shadow Embrace\"] = 10,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634698,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [12]
				{
					["OptionsValues"] = {
						["colorInterruptAvailable"] = {
							0.6235294342041016, -- [1]
							0.7490196228027344, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["colorNoInterrupt"] = {
							0.4862745404243469, -- [1]
							0.4862745404243469, -- [2]
							0.4862745404243469, -- [3]
							1, -- [4]
						},
						["hideNameSolo"] = true,
						["colorInterruptSoon"] = {
							0.8823530077934265, -- [1]
							0.8823530077934265, -- [2]
							0.8823530077934265, -- [3]
							1, -- [4]
						},
						["colorProtected"] = {
							0.7803922295570374, -- [1]
							0.250980406999588, -- [2]
							0.250980406999588, -- [3]
							1, -- [4]
						},
						["colorSecondaryInterrupt"] = {
							0.1725490242242813, -- [1]
							0.8156863451004028, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["UID"] = "0x63cc19ce2df2342d",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
						["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\",\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [8] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        }                                         \n    }   \n    \nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1680622832,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 429383,
					["Enabled"] = true,
					["Revision"] = 1262,
					["semver"] = "",
					["Author"] = "Nimeshady-Zul'jin",
					["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
					["Prio"] = 99,
					["Name"] = "Enhanced Enemy Castbar [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "CUSTOM CAST BAR COLORS",
							["Value"] = "Feature - Custom cast bar coloring:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Enable custom colored enemy cast bars.",
							["Value"] = true,
							["Key"] = "showInterruptColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
							["Value"] = true,
							["Key"] = "showSecondaryInterrupts",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Color when my primary interrupt is available.",
							["Value"] = {
								0.10980392992496, -- [1]
								0.63921570777893, -- [2]
								0.1843137294054, -- [3]
								1, -- [4]
							},
							["Key"] = "colorInterruptAvailable",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
							["Value"] = {
								0.63921570777893, -- [1]
								0.61568629741669, -- [2]
								0.10980392992496, -- [3]
								1, -- [4]
							},
							["Key"] = "colorInterruptSoon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Color when my primary interrupt is unavailable.",
							["Value"] = {
								0.61960786581039, -- [1]
								0.16862745583057, -- [2]
								0.28627452254295, -- [3]
								1, -- [4]
							},
							["Key"] = "colorNoInterrupt",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
							["Value"] = {
								0.10980392992496, -- [1]
								0.52156865596771, -- [2]
								0.63921570777893, -- [3]
								1, -- [4]
							},
							["Key"] = "colorSecondaryInterrupt",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Color for casts that are protected/un-interruptable.",
							["Value"] = {
								0.22352942824364, -- [1]
								0.22352942824364, -- [2]
								0.22352942824364, -- [3]
								1, -- [4]
							},
							["Key"] = "colorProtected",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Color of interrupt available tick. (Hover for more info)",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.0078431377187371, -- [3]
								1, -- [4]
							},
							["Key"] = "colorTick",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Settings Target Name",
							["Value"] = "Feature - Show name of target in the cast bar:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show the name of cast targets in the cast bar.",
							["Value"] = true,
							["Key"] = "showTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Hide my name when not in a party.",
							["Value"] = true,
							["Key"] = "hideNameSolo",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Show \"Me\" instead of my character name.",
							["Value"] = true,
							["Key"] = "replaceName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 60,
							["Name"] = "Maximum length of a cast name in %. Hover for more info.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castNameSize",
						}, -- [14]
						{
							["Type"] = 5,
							["Name"] = "Settings Border Flash",
							["Value"] = "Feature - Flash nameplates when a spell targets you:",
							["Key"] = "option8",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Namplate Flash",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
							["Value"] = false,
							["Key"] = "nameplateFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
						}, -- [16]
						{
							["Type"] = 4,
							["Name"] = "Hide flash effect when not in a party.",
							["Value"] = true,
							["Key"] = "hideNameplateFlashSolo",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing solo.",
						}, -- [17]
						{
							["Type"] = 4,
							["Name"] = "Hide flash effect when I'm playing a tank specialization.",
							["Value"] = true,
							["Key"] = "hideFlashAsTank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
						}, -- [18]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [13]
				{
					["LastHookEdited"] = "Initialization",
					["UID"] = "0x62f9521d664ad",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        \n        -- Dungeons\n        [196642] = false, -- Hungry Lasher (Boss add)\n        [197398] = false, -- Hungry Lasher\n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634807,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 458228,
					["Enabled"] = true,
					["Revision"] = 168,
					["semver"] = "",
					["Author"] = "Viashi-Argent Dawn",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Performance Units",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Performance",
							["Value"] = true,
							["Key"] = "performance",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Force Blizzard",
							["Value"] = false,
							["Key"] = "forceBlizz",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [14]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        --Dragonflight Raids\n        \n        --Vault of the Incarnates\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        [\"Nascent Proto-Dragon\"] = \"Nascent Dragon\",\n        [\"Juvenile Frost Proto-Dragon\"] = \"Frost Dragon\",\n        \n        --Ruby Life Pools\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Big Crystal\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Decay Totem\",\n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        \n        --Return To Karazhan\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["Time"] = 1680623125,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
					["Enabled"] = true,
					["Revision"] = 935,
					["semver"] = "",
					["Author"] = "Rhk-Tarren Mill",
					["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
					["Prio"] = 99,
					["Name"] = "M+ Renamer",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    -- settings:\n    \n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.skyreachColor, --\"gold\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.1, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"skyreach\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local nodeInfo = C_Traits.GetNodeInfo(C_ClassTalents.GetActiveConfigID(), 80663)\n    local learned = nodeInfo and nodeInfo.entryIDsWithCommittedRanks and nodeInfo.entryIDsWithCommittedRanks[1] and true or false  \n    \n    \n    --do nothing if skyreach isnt talented\n    if (learned) == false then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return \n    end\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return\n    end\n    \n    if modTable.config.showskyreach then\n        if not Plater.UnitHasAura (unitFrame, 393050) then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        end\n    end\n    \n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options)\n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options2)\n    \nend",
					},
					["Time"] = 1680622736,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["MONK"] = true,
							["Enabled"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["Enabled"] = true,
							["269"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/9WPWW_bnm/3",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
					["Enabled"] = true,
					["Revision"] = 490,
					["semver"] = "1.0.2",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Glows Nameplate if Skyreach Exhaustion is Missing",
					["Prio"] = 99,
					["Name"] = "Skyreach Available Glow",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Glow Skyreach Missing",
							["Value"] = true,
							["Key"] = "showskyreach",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Skyreach Missing Color",
							["Value"] = {
								1, -- [1]
								0.84313725490196, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "skyreachColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
					},
					["HooksTemp"] = {
					},
					["version"] = 3,
				}, -- [16]
			},
			["auras_per_row_auto"] = false,
			["extra_icon_caster_outline"] = "OUTLINE",
			["auras_per_row_amount2"] = 6,
			["aura_width"] = 17,
			["bossmod_support_enabled"] = false,
			["health_statusbar_bgcolor"] = {
				0.03137254901960784, -- [1]
				0.03137254901960784, -- [2]
				0.03137254901960784, -- [3]
				0.7000000178813934, -- [4]
			},
			["pet_width_scale"] = 0.9999999403953552,
			["extra_icon_timer_size"] = 7,
			["target_highlight_color"] = {
				0.9294118285179138, -- [1]
				0.1882353127002716, -- [2]
				0.2431372702121735, -- [3]
			},
			["extra_icon_stack_outline"] = "OUTLINE",
			["click_space"] = {
				115, -- [1]
				20, -- [2]
			},
			["extra_icon_auras"] = {
				81261, -- [1]
				33786, -- [2]
				5211, -- [3]
				99, -- [4]
				203123, -- [5]
				89766, -- [6]
				6789, -- [7]
				118699, -- [8]
				30283, -- [9]
				5484, -- [10]
				710, -- [11]
				6770, -- [12]
				2094, -- [13]
				2637, -- [14]
				115078, -- [15]
				217832, -- [16]
				51514, -- [17]
				20066, -- [18]
				9484, -- [19]
				853, -- [20]
				105421, -- [21]
				31935, -- [22]
				10326, -- [23]
				24394, -- [24]
				3355, -- [25]
				213691, -- [26]
				1513, -- [27]
				5246, -- [28]
				132169, -- [29]
				199085, -- [30]
				132168, -- [31]
				211881, -- [32]
				179057, -- [33]
				204490, -- [34]
				207685, -- [35]
				221562, -- [36]
				207167, -- [37]
				287254, -- [38]
				108194, -- [39]
				91800, -- [40]
				31661, -- [41]
				118, -- [42]
				82691, -- [43]
				119381, -- [44]
				198909, -- [45]
				408, -- [46]
				1776, -- [47]
				1330, -- [48]
				118905, -- [49]
				197214, -- [50]
				64044, -- [51]
				15487, -- [52]
				8122, -- [53]
				226943, -- [54]
				200200, -- [55]
				"Haymaker", -- [56]
				"Quaking Palm", -- [57]
				"War Stomp", -- [58]
			},
			["castbar_target_font"] = "Expressway",
			["ui_parent_cast_level"] = 1,
			["aura_cooldown_show_swipe"] = false,
			["range_check_in_range_or_target_alpha_friendlies"] = 0.8999999761581421,
			["aura_show_offensive_cd"] = true,
			["aura_width2"] = 20,
			["cast_statusbar_spark_offset"] = -4,
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["indicator_spec"] = false,
			["indicator_raidmark_scale"] = 0.699999988079071,
			["cast_statusbar_bgcolor"] = {
				0.03137254901960784, -- [1]
				0.03137254901960784, -- [2]
				0.03137254901960784, -- [3]
				0.4670491218566895, -- [4]
			},
			["aura_breakline_space"] = 2,
			["health_statusbar_bgtexture"] = "Atrocity",
			["indicator_raidmark_anchor"] = {
				["x"] = 0,
				["side"] = 9,
			},
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						0.9764705882352941, -- [1]
						0.5411764705882353, -- [2]
						0.4745098039215686, -- [3]
					},
					["anothertank"] = {
						0.7294117647058823, -- [1]
						0.9176470588235294, -- [2]
					},
					["aggro"] = {
						0.5058823529411764, -- [1]
						0.4235294117647059, -- [2]
						0.9137254901960784, -- [3]
					},
					["noaggro"] = {
						0.6352941176470588, -- [1]
						0.2196078431372549, -- [2]
						0.2196078431372549, -- [3]
					},
					["nocombat"] = {
						0.6352941176470588, -- [1]
						0.2196078431372549, -- [2]
						0.2196078431372549, -- [3]
					},
					["pulling"] = {
						0.3098039215686275, -- [1]
						0.4509803921568628, -- [2]
						0.6313725490196078, -- [3]
					},
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[205191] = false,
					[118038] = false,
					[210303] = true,
					[102560] = false,
					[125174] = false,
					[342073] = true,
					[209859] = false,
					[184364] = false,
					[243435] = false,
					[194223] = false,
					[5277] = false,
					[122278] = false,
					[48707] = false,
					[116849] = false,
					[199448] = false,
					[340873] = false,
					[51271] = false,
					[324046] = false,
					[315443] = false,
					[1022] = false,
					[61336] = false,
					[213610] = false,
					[6940] = false,
					[120954] = false,
					[113858] = false,
					[327416] = false,
					[333227] = false,
					[642] = false,
					[33206] = false,
					[343484] = true,
					[342246] = false,
					[197690] = false,
					[166591] = true,
					[190319] = false,
					[45438] = false,
					[498] = false,
					[312926] = true,
					[326450] = false,
					[389029] = false,
					[102342] = false,
					[338610] = false,
					[266779] = false,
					[310454] = false,
					[321754] = false,
					[31884] = false,
					[297133] = true,
					[336499] = false,
					[48792] = false,
					[47585] = false,
					[212295] = false,
					[113860] = false,
					[212800] = false,
					[188501] = false,
					[343470] = false,
					[31224] = false,
					[333737] = false,
					[97463] = false,
					[163689] = true,
					[23920] = false,
					[110909] = false,
					[260402] = false,
					[322773] = false,
					[194249] = false,
					[317936] = false,
					[376705] = false,
					[104773] = false,
					[1044] = false,
					[186265] = false,
					[79206] = false,
					[365338] = true,
					[122783] = false,
					[343558] = false,
					[338510] = false,
					[213602] = false,
					[114052] = false,
					[47788] = false,
					[323095] = false,
					[343496] = true,
					[333241] = false,
					[196555] = false,
					[22812] = false,
					[152262] = false,
					[147833] = false,
					[344739] = false,
					[355790] = false,
					[305497] = true,
					[343502] = false,
					[162264] = false,
					[389808] = true,
					[330545] = false,
					[227931] = true,
					[336451] = false,
					[233210] = true,
					[321402] = false,
					[303941] = true,
				},
				["debuff_banned"] = {
					[358379] = true,
					[356372] = false,
					[394325] = true,
					[389806] = true,
					[289467] = true,
					[321330] = true,
					[359078] = true,
					[346562] = true,
					[392388] = true,
					[331016] = false,
					[344754] = true,
					[360277] = true,
					[294934] = true,
					[283649] = true,
					[391568] = true,
					[356329] = true,
					[279426] = true,
					[324260] = true,
					[394328] = true,
					[353354] = false,
					[331653] = true,
					[354052] = true,
					[387881] = true,
					[273836] = true,
					[256148] = true,
					[352534] = true,
					[281242] = true,
					[375583] = true,
					[300013] = true,
					[306965] = true,
					[394021] = true,
					[396719] = true,
				},
				["debuff_tracked"] = {
					[323059] = false,
					[335372] = false,
					[453] = false,
				},
				["buff_banned"] = {
					[396106] = true,
					[338857] = true,
					[302564] = true,
					[359078] = true,
					[236502] = true,
					[383648] = true,
					[396109] = true,
					[333575] = true,
					[286145] = true,
					[209746] = true,
					[216777] = true,
					[396098] = true,
					[344426] = true,
					[292664] = true,
					[343613] = false,
					[323961] = true,
					[327416] = true,
					[284882] = true,
					[333579] = true,
					[344240] = true,
					[396113] = true,
					[373305] = true,
					[343553] = true,
					[367803] = true,
				},
			},
			["extra_icon_caster_font"] = "Expressway",
			["cast_statusbar_color"] = {
				0.6235294342041016, -- [1]
				0.7490196228027344, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["update_throttle"] = 0.3300000131130219,
			["castbar_icon_show"] = false,
			["indicator_extra_raidmark"] = false,
			["cast_statusbar_color_interrupted"] = {
				0.7803921568627451, -- [1]
				0.2509803921568627, -- [2]
				0.2509803921568627, -- [3]
			},
			["aura_show_debuffs_personal"] = false,
			["extra_icon_timer_font"] = "Expressway",
			["not_affecting_combat_alpha"] = 0.3999999761581421,
			["target_highlight_alpha"] = 1,
			["target_shady_combat_only"] = false,
			["target_shady_alpha"] = 0.2800000011920929,
			["tap_denied_color"] = {
				0.6, -- [1]
				0.6, -- [2]
				0.6, -- [3]
			},
			["bossmod_icons_anchor"] = {
				["y"] = 0,
			},
			["target_highlight_height"] = 11,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 50, 0);   \n    envTable.FixateTarget:Hide()\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
						["nameplateColor"] = {
							1, -- [1]
							0.9803921568627451, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["changeNameplateColor"] = false,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1671417854,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = 134400,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 50, 0);   \n    envTable.FixateTarget:Hide()\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 579,
					["semver"] = "",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["Name"] = "Spiteful Fixate",
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Desc"] = "",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.71372549019608, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
						["npcColor"] = {
							{
								"196548", -- [1]
								"forestgreen", -- [2]
							}, -- [1]
							{
								"195580", -- [1]
								"forestgreen", -- [2]
							}, -- [2]
							{
								"195820", -- [1]
								"forestgreen", -- [2]
							}, -- [3]
							{
								"195821", -- [1]
								"forestgreen", -- [2]
							}, -- [4]
							{
								"189886", -- [1]
								"forestgreen", -- [2]
							}, -- [5]
							{
								"75966", -- [1]
								"forestgreen", -- [2]
							}, -- [6]
							{
								"102019 ", -- [1]
								"forestgreen", -- [2]
							}, -- [7]
							{
								"187159", -- [1]
								"forestgreen", -- [2]
							}, -- [8]
							{
								"194897", -- [1]
								"forestgreen", -- [2]
							}, -- [9]
							{
								"104251", -- [1]
								"forestgreen", -- [2]
							}, -- [10]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1680622802,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["Revision"] = 577,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["url"] = "",
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Add - Important [P]",
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["Enabled"] = true,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1680622816,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["NpcNames"] = {
						"81236", -- [1]
						"77803", -- [2]
						"150276", -- [3]
						"152009", -- [4]
						"175806", -- [5]
						"114790", -- [6]
						"81297", -- [7]
						"79545", -- [8]
						"177269", -- [9]
						"133345", -- [10]
						"164926", -- [11]
						"114265", -- [12]
						"114261", -- [13]
						"114783", -- [14]
						"180013", -- [15]
						"179931", -- [16]
						"193532", -- [17]
						"116410", -- [18]
						"190485", -- [19]
						"193435", -- [20]
						"188252", -- [21]
						"186738", -- [22]
						"186125", -- [23]
						"186122", -- [24]
						"186124", -- [25]
						"184422", -- [26]
						"96574", -- [27]
						"114312", -- [28]
						"164804", -- [29]
						"164267", -- [30]
						"164967", -- [31]
						"169861", -- [32]
						"162061", -- [33]
						"144298", -- [34]
						"181378", -- [35]
						"181548", -- [36]
						"181551", -- [37]
						"181546", -- [38]
						"181549", -- [39]
						"183501", -- [40]
						"180906", -- [41]
						"185421", -- [42]
						"163121", -- [43]
						"175730", -- [44]
						"176523", -- [45]
						"175725", -- [46]
						"176929", -- [47]
						"166969", -- [48]
						"166970", -- [49]
						"166971", -- [50]
						"167406", -- [51]
						"173162", -- [52]
						"175732", -- [53]
						"183671", -- [54]
						"184020", -- [55]
						"114260", -- [56]
						"184581", -- [57]
						"184582", -- [58]
						"184580", -- [59]
						"189719", -- [60]
						"185534", -- [61]
						"190407", -- [62]
						"194816", -- [63]
						"186151", -- [64]
						"59544", -- [65]
						"186121", -- [66]
						"197697", -- [67]
						"194990", -- [68]
						"76057", -- [69]
						"56732", -- [70]
						"95676", -- [71]
						"94960", -- [72]
						"104215", -- [73]
						"95674", -- [74]
						"189492", -- [75]
						"190484", -- [76]
						"97087", -- [77]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["Enabled"] = true,
					["Revision"] = 374,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option8",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [8]
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Author"] = "Duracell",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Name"] = "Add - Health Markers [D]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1680622795,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 297,
					["Options"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
						350857, -- [4]
						352016, -- [5]
						235308, -- [6]
						235089, -- [7]
						367573, -- [8]
						362020, -- [9]
						232156, -- [10]
						374779, -- [11]
						113309, -- [12]
						117665, -- [13]
						379256, -- [14]
						396734, -- [15]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = -1,
					["semver"] = "",
					["Icon"] = -13828,
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [5]
			},
			["hover_highlight_alpha"] = 0.2999999821186066,
			["cast_statusbar_spark_alpha"] = 0.5,
			["health_selection_overlay"] = "Atrocity",
			["color_override_colors"] = {
				[3] = {
					0.6352941176470588, -- [1]
					0.2196078431372549, -- [2]
					0.2196078431372549, -- [3]
				},
				[4] = {
					0.8509803921568627, -- [1]
					0.8156862745098039, -- [2]
					0.5882352941176471, -- [3]
				},
				[5] = {
					0.5058823529411764, -- [1]
					0.7803921568627451, -- [2]
					0.5137254901960784, -- [3]
				},
			},
			["health_animation_time_dilatation"] = 2.619999885559082,
			["castbar_icon_attach_to_side"] = "right",
			["bossmod_cooldown_text_size"] = 17,
			["patch_version"] = 28,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 8,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["number_region_first_run"] = true,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["ScriptType"] = 3,
					["__TrashAt"] = 1680622788,
					["Time"] = 1677634878,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["url"] = "",
					["NpcNames"] = {
						"167966", -- [1]
						"199220", -- [2]
						"199916", -- [3]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 104,
					["Options"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Author"] = "Briarbreed-Area 52",
					["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Hide Nameplate",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Hide nameplates based on the unit's NPC ID.",
					["semver"] = "",
					["Icon"] = 644389,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["ScriptType"] = 2,
					["__TrashAt"] = 1680622794,
					["Time"] = 1676905232,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = 4038101,
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["Revision"] = 73,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["Enabled"] = true,
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Name"] = "Dots X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "minAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["NpcNames"] = {
					},
				}, -- [2]
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["cast_statusbar_color_channeling"] = {
				0.6235294117647059, -- [1]
				0.7490196078431373, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["aura2_grow_direction"] = 1,
			["aura_alpha"] = 1,
			["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
			["range_check_alpha_friendlies"] = 0.6499999761581421,
			["extra_icon_timer_outline"] = "OUTLINE",
			["aura_grow_direction"] = 3,
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						0.6352941176470588, -- [1]
						0.2196078431372549, -- [2]
						0.2196078431372549, -- [3]
					},
					["noaggro"] = {
						0.5058823529411764, -- [1]
						0.4235294117647059, -- [2]
						0.9137254901960784, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.7725490196078432, -- [2]
						0.6588235294117647, -- [3]
					},
				},
			},
			["aura_show_enrage"] = true,
			["indicator_pet"] = false,
			["aura_show_important"] = false,
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["cast_statusbar_spark_width"] = 8,
		},
		["Default"] = {
			["use_ui_parent"] = true,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Execute Range"] = 1,
				["Hide Neutral Units"] = 1,
				["Attacking Specific Unit"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
			},
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						281420, -- [16]
						274383, -- [17]
						259092, -- [18]
						367521, -- [19]
						374544, -- [20]
						385039, -- [21]
						382474, -- [22]
						369823, -- [23]
						377500, -- [24]
						260879, -- [25]
						186269, -- [26]
						378818, -- [27]
						371875, -- [28]
						372225, -- [29]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						257732, -- [22]
						256060, -- [23]
						257899, -- [24]
						384633, -- [25]
						374339, -- [26]
						395694, -- [27]
						391634, -- [28]
						372701, -- [29]
						369328, -- [30]
						265487, -- [31]
						413044, -- [32]
						183526, -- [33]
						88194, -- [34]
						87762, -- [35]
						413385, -- [36]
						411001, -- [37]
						378282, -- [38]
						384161, -- [39]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
						257397, -- [34]
						257736, -- [35]
						382787, -- [36]
						374699, -- [37]
						377402, -- [38]
						369602, -- [39]
						369465, -- [40]
						369400, -- [41]
						381593, -- [42]
						265091, -- [43]
						265433, -- [44]
						382791, -- [45]
						376780, -- [46]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
						257426, -- [36]
						255952, -- [37]
						257870, -- [38]
						413147, -- [39]
						383107, -- [40]
						377559, -- [41]
						388060, -- [42]
						376170, -- [43]
						384524, -- [44]
						375351, -- [45]
						390111, -- [46]
						369791, -- [47]
						369573, -- [48]
						369563, -- [49]
						369335, -- [50]
						369061, -- [51]
						375727, -- [52]
						265016, -- [53]
						265019, -- [54]
						260793, -- [55]
						260292, -- [56]
						272457, -- [57]
						272609, -- [58]
						269843, -- [59]
						183465, -- [60]
						226296, -- [61]
						188169, -- [62]
						183088, -- [63]
						410873, -- [64]
						411012, -- [65]
						88308, -- [66]
						382708, -- [67]
						375251, -- [68]
						375439, -- [69]
						372311, -- [70]
						373742, -- [71]
						372201, -- [72]
						374533, -- [73]
						377204, -- [74]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						384353, -- [19]
						265376, -- [20]
						193941, -- [21]
						411002, -- [22]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Tag Number [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura While Casting [P]",
					["NpcNames"] = {
					},
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Name"] = "Dots X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "minAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - On Going Cast [P]",
					["NpcNames"] = {
					},
				}, -- [33]
			},
			["aura2_x_offset"] = 0,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Color Automation [Plater]",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Hide Neutral Units [Plater]",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1596791840,
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Reorder Nameplate [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["semver"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Don't Have Aura [Plater]",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Time"] = 1554138845,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["HooksTemp"] = {
					},
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Players Targeting a Target [Plater]",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["HooksTemp"] = {
					},
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Tecno-Azralon",
					["Name"] = "Extra Border [Plater]",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Current Target Color [Plater]",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["HooksTemp"] = {
					},
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1597097268,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["version"] = -1,
					["Name"] = "Cast Bar Icon Settings [P]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["semver"] = "",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["Name"] = "Execute Range [Plater]",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547406548,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["HooksTemp"] = {
					},
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 363,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1620377377,
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["version"] = -1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["semver"] = "",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 284,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1621935143,
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["version"] = -1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["semver"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1608663128,
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Aura Reorder [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["semver"] = "",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["resources_settings"] = {
				["chr"] = {
					["Player-3684-0E213266"] = "SoulShards",
				},
			},
			["npc_cache"] = {
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
					"enUS", -- [3]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
					"enUS", -- [3]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
					"enUS", -- [3]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
					"enUS", -- [3]
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["ui_parent_scale_tune"] = 1.562500034924597,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Important"] = 11,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Show Energy"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Glowing [P]"] = 10,
				["Cast - Circular Swipe"] = 4,
				["Spiteful Affix"] = 3,
				["Fixate"] = 11,
				["Auto Set Skull"] = 11,
				["Cast - Shield Interrupt"] = 2,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Stop Casting"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Quick Flash"] = 2,
				["Cast - Important Target [P]"] = 2,
				["Fixate On You"] = 11,
			},
			["aura2_y_offset"] = 5,
			["login_counter"] = 40,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1669422159,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Unit - Important [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Scale",
						}, -- [13]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Tank Interrupt [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Unit - Health Markers [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Unit - Main Target [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Relics 9.2 M Dungeons",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "ColorSettingsAnchor",
							["Value"] = "Color Settings",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Haste Color",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "hasteColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "msColor",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "Moviment Speep Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Cooldown Reduction Color",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Key"] = "cdrColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "SizeSettingsAnchor",
							["Value"] = "Size Settings",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "canChangeSize",
							["Value"] = false,
							["Name"] = "Change Nameplate Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Key"] = "width",
							["Value"] = 100,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 12,
							["Name"] = "Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "height",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "BorderSettingsAnchor",
							["Value"] = "Border Settings",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Paint Border",
							["Value"] = true,
							["Key"] = "showBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 12",
							["Value"] = 0,
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "NameSettings",
							["Value"] = "Name Settings",
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Name"] = "Haste Name",
							["Value"] = "HASTE",
							["Key"] = "hasteName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Key"] = "cdrName",
							["Value"] = "CDR",
							["Name"] = "Cooldown Reduction Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Name"] = "Movement Speed Name",
							["Value"] = "MS",
							["Key"] = "msName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
					["__TrashAt"] = 1672271552,
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Ultra Important [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
					["__TrashAt"] = 1672271552,
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n\n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1666836560,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 346,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Glowing [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1625696653,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 836,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Important Target [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Width",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameHeight",
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1626467946,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1162,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1660259323,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 52,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Aura is Shield [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996691,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1060,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
					},
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1660340256,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 25,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Fixate by Unit Buff [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Frontal Cone [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
					["__TrashAt"] = 1672271552,
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1673799009,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["__TrashAt"] = 1673799009,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["__TrashAt"] = 1684544100,
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1684544100,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
				}, -- [23]
			},
			["number_region_first_run"] = true,
			["patch_version"] = 27,
			["plate_config"] = {
				["global_health_width"] = 112,
				["global_health_height"] = 12,
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[163689] = true,
					[297133] = true,
				},
			},
			["aura_y_offset"] = 5,
		},
		["Jundies Plater"] = {
			["focus_as_target_alpha"] = true,
			["aura_breakline_space"] = 1,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1677634316,
					["Icon"] = -13828,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 296,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
						350857, -- [4]
						352016, -- [5]
						235308, -- [6]
						235089, -- [7]
						367573, -- [8]
						362020, -- [9]
						232156, -- [10]
						374779, -- [11]
						113309, -- [12]
						117665, -- [13]
						379256, -- [14]
						396734, -- [15]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["url"] = "",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
						["fontColor"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["fontSize"] = 12,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["Time"] = 1673203447,
					["Icon"] = 136048,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
					["NpcNames"] = {
						"171557", -- [1]
						"162060", -- [2]
						"168318", -- [3]
						"184140", -- [4]
						"182169", -- [5]
						"196482", -- [6]
						"186120", -- [7]
						"186116", -- [8]
						"189729", -- [9]
						"189901", -- [10]
						"197025", -- [11]
						"190496", -- [12]
						"189813", -- [13]
						"190245", -- [14]
						"184972", -- [15]
						"184986", -- [16]
						"164558", -- [17]
						"186737", -- [18]
						"186616", -- [19]
						"186615", -- [20]
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 472,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Name"] = "Unit - Show Energy [Plater]",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["url"] = "",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--87329 - test dummy \n\n\n--FODDER NPC's\n--169421\n--169425\n--168932\n--169426\n--169429\n--169428\n--169430",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
						["outline"] = true,
						["nameplateColor"] = {
							0.86666666666667, -- [1]
							0.43529411764706, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["changeNameplateColor"] = true,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1677634366,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--87329 - test dummy \n\n\n--FODDER NPC's\n--169421\n--169425\n--168932\n--169426\n--169429\n--169428\n--169430",
					["Icon"] = -14046,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["Revision"] = 821,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.71372549019608, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Outline Test",
						}, -- [8]
					},
					["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"174773", -- [1]
						"164702", -- [2]
						"166251", -- [3]
						"165913", -- [4]
						"167898", -- [5]
						"56792", -- [6]
						"194745", -- [7]
						"87329", -- [8]
						"169421", -- [9]
						"169425", -- [10]
						"168932", -- [11]
						"169426", -- [12]
						"169429", -- [13]
						"169428", -- [14]
						"169430", -- [15]
					},
					["Prio"] = 99,
					["Name"] = "Spiteful/Fixate Name&Glow",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Enabled"] = true,
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1677634342,
					["Icon"] = 413591,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "1.0.3",
					["Enabled"] = true,
					["Revision"] = 277,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
					["Name"] = "Pandemic Glow (Pixel)",
					["Author"] = "Viash-Thrall",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
					["version"] = 4,
					["Prio"] = 99,
					["SpellIds"] = {
						292711, -- [1]
						278946, -- [2]
						212463, -- [3]
						284402, -- [4]
						284401, -- [5]
						2818, -- [6]
						703, -- [7]
						1943, -- [8]
						295425, -- [9]
						283668, -- [10]
						316220, -- [11]
						258179, -- [12]
						207690, -- [13]
						315341, -- [14]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
					["url"] = "https://wago.io/JcByzfZtU/4",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1677634325,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Enabled"] = true,
					["Revision"] = 833,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.56470588235294, -- [1]
								0.56470588235294, -- [2]
								0.56470588235294, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.41176470588235, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["Name"] = "Cast - Very Important [Plater]",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						268030, -- [22]
						257784, -- [23]
						337943, -- [24]
						320822, -- [25]
						333292, -- [26]
						341840, -- [27]
						324987, -- [28]
						333478, -- [29]
						178072, -- [30]
						330438, -- [31]
						329423, -- [32]
						350287, -- [33]
						334928, -- [34]
						348428, -- [35]
						330532, -- [36]
						358980, -- [37]
						351073, -- [38]
						358026, -- [39]
						357144, -- [40]
						351603, -- [41]
						356023, -- [42]
						330513, -- [43]
						334076, -- [44]
						237946, -- [45]
						237952, -- [46]
						312262, -- [47]
						242733, -- [48]
						362628, -- [49]
						316443, -- [50]
						356031, -- [51]
						356011, -- [52]
						356001, -- [53]
						355642, -- [54]
						355644, -- [55]
						355782, -- [56]
						355057, -- [57]
						356133, -- [58]
						357260, -- [59]
						357284, -- [60]
						347015, -- [61]
						355139, -- [62]
						336451, -- [63]
						364240, -- [64]
						364241, -- [65]
						361923, -- [66]
						368063, -- [67]
						356407, -- [68]
						363024, -- [69]
						355584, -- [70]
						334664, -- [71]
						340300, -- [72]
						366288, -- [73]
						232120, -- [74]
						228554, -- [75]
						228009, -- [76]
						228025, -- [77]
						228019, -- [78]
						227977, -- [79]
						228278, -- [80]
						228280, -- [81]
						228567, -- [82]
						29339, -- [83]
						169341, -- [84]
						162415, -- [85]
						340037, -- [86]
						373513, -- [87]
						373618, -- [88]
						167232, -- [89]
						227646, -- [90]
						375606, -- [91]
						386549, -- [92]
						385568, -- [93]
						385393, -- [94]
						388211, -- [95]
						211464, -- [96]
						215433, -- [97]
						371983, -- [98]
						373405, -- [99]
						391599, -- [100]
						387627, -- [101]
						375653, -- [102]
						388392, -- [103]
						387862, -- [104]
						392457, -- [105]
						396812, -- [106]
						383823, -- [107]
						371624, -- [108]
						393309, -- [109]
						393296, -- [110]
						391268, -- [111]
						393429, -- [112]
						374623, -- [113]
						390548, -- [114]
						391019, -- [115]
						387615, -- [116]
						152818, -- [117]
						225100, -- [118]
						210261, -- [119]
						212784, -- [120]
						392486, -- [121]
						397889, -- [122]
						395859, -- [123]
						385331, -- [124]
						388804, -- [125]
						156718, -- [126]
						398206, -- [127]
						198959, -- [128]
						106856, -- [129]
						106864, -- [130]
						397394, -- [131]
						367500, -- [132]
						377488, -- [133]
						377612, -- [134]
						385574, -- [135]
						215204, -- [136]
						212773, -- [137]
						397382, -- [138]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["url"] = "",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
					["Time"] = 1674081306,
					["Icon"] = 135801,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
					["NpcNames"] = {
					},
					["semver"] = "1.0.0",
					["Enabled"] = false,
					["Revision"] = 166,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Name"] = "Change Color on Debuff",
					["Author"] = "Nephuhlim-Illidan",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["version"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
						228287, -- [1]
						295311, -- [2]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
					["url"] = "https://wago.io/QmFFPeSSS/1",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Time"] = 1677634340,
					["Icon"] = 644389,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["NpcNames"] = {
						"167966", -- [1]
						"199220", -- [2]
						"199916", -- [3]
					},
					["semver"] = "1.1.0",
					["Enabled"] = true,
					["Revision"] = 104,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Name"] = "Hide Nameplate",
					["Author"] = "Briarbreed-Area 52",
					["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["Desc"] = "Hide nameplates based on the unit's NPC ID.",
					["version"] = 2,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["url"] = "https://wago.io/XPNrgiHqw/2",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --envTable.LCG = LibStub(\"LibCustomGlow-1.0\")\n    envTable.HealthBarColor = \"gold\"\n    --envTable.glow_frame = CreateFrame(\"Frame\", nil, unitFrame.healthBar)\n    --envTable.glow_frame:SetAllPoints(unitFrame.healthBar)\n    --envTable.glow_frame:SetSize(unitFrame.healthBar:GetSize())\n    envTable.CGConfig = {\n        color = {0.2, 0.9, 0.9, 1},    -- color and opacity in {r, g, b, a} from 0 to 1;\n        N =  12,    -- number of lines;\n        frequency = .33,    -- frequency, set to negative to inverse direction of rotation;\n        length = nil,    -- length of lines;\n        th = 2,    -- thickness of lines;\n        xOffset = 2,\n        yOffset = 2,    -- offset of glow relative to region border;\n        boder = nil,    -- set to true to create border under lines;\n        key = nil,    -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)    \n    --stop PixelGlow effect    \n    local frame = unitFrame.healthBar\n    Plater.StopPixelGlow(frame, envTable.CGConfig.key)    \n    --restore nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --start PixelGlow effect\n    local frame = unitFrame.healthBar\n    Plater.StartPixelGlow(frame, envTable.CGConfig.color, envTable.CGConfig, envTable.CGConfig.key)\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    \n    \nend\n\n\n",
					["Time"] = 1677634328,
					["Icon"] = 2175503,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --envTable.LCG = LibStub(\"LibCustomGlow-1.0\")\n    envTable.HealthBarColor = \"gold\"\n    --envTable.glow_frame = CreateFrame(\"Frame\", nil, unitFrame.healthBar)\n    --envTable.glow_frame:SetAllPoints(unitFrame.healthBar)\n    --envTable.glow_frame:SetSize(unitFrame.healthBar:GetSize())\n    envTable.CGConfig = {\n        color = {0.2, 0.9, 0.9, 1},    -- color and opacity in {r, g, b, a} from 0 to 1;\n        N =  12,    -- number of lines;\n        frequency = .33,    -- frequency, set to negative to inverse direction of rotation;\n        length = nil,    -- length of lines;\n        th = 2,    -- thickness of lines;\n        xOffset = 2,\n        yOffset = 2,    -- offset of glow relative to region border;\n        boder = nil,    -- set to true to create border under lines;\n        key = nil,    -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"120651", -- [1]
						"Explosives", -- [2]
					},
					["semver"] = "1.0.2",
					["Enabled"] = true,
					["Revision"] = 741,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --start PixelGlow effect\n    local frame = unitFrame.healthBar\n    Plater.StartPixelGlow(frame, envTable.CGConfig.color, envTable.CGConfig, envTable.CGConfig.key)\nend\n\n\n\n\n\n\n\n",
					["Name"] = "Explosive M+ Affix Pixel Glow",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply pixel glow to a explosive orb's healthbar when it spawns in a Mythic Dungeon with Explosion Affix.",
					["version"] = 3,
					["Prio"] = 99,
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    \n    \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)    \n    --stop PixelGlow effect    \n    local frame = unitFrame.healthBar\n    Plater.StopPixelGlow(frame, envTable.CGConfig.key)    \n    --restore nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \nend\n\n\n",
					["url"] = "https://wago.io/MpDahQfbA/3",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1677634304,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["NpcNames"] = {
						"81236", -- [1]
						"77803", -- [2]
						"150276", -- [3]
						"152009", -- [4]
						"175806", -- [5]
						"114790", -- [6]
						"81297", -- [7]
						"79545", -- [8]
						"177269", -- [9]
						"133345", -- [10]
						"164926", -- [11]
						"114265", -- [12]
						"114261", -- [13]
						"114783", -- [14]
						"180013", -- [15]
						"179931", -- [16]
						"193532", -- [17]
						"116410", -- [18]
						"190485", -- [19]
						"193435", -- [20]
						"188252", -- [21]
						"186738", -- [22]
						"186125", -- [23]
						"186122", -- [24]
						"186124", -- [25]
						"184422", -- [26]
						"96574", -- [27]
						"114312", -- [28]
						"164804", -- [29]
						"164267", -- [30]
						"164967", -- [31]
						"169861", -- [32]
						"162061", -- [33]
						"144298", -- [34]
						"181378", -- [35]
						"181548", -- [36]
						"181551", -- [37]
						"181546", -- [38]
						"181549", -- [39]
						"183501", -- [40]
						"180906", -- [41]
						"185421", -- [42]
						"163121", -- [43]
						"175730", -- [44]
						"176523", -- [45]
						"175725", -- [46]
						"176929", -- [47]
						"166969", -- [48]
						"166970", -- [49]
						"166971", -- [50]
						"167406", -- [51]
						"173162", -- [52]
						"175732", -- [53]
						"183671", -- [54]
						"184020", -- [55]
						"114260", -- [56]
						"184581", -- [57]
						"184582", -- [58]
						"184580", -- [59]
						"189719", -- [60]
						"185534", -- [61]
						"190407", -- [62]
						"194816", -- [63]
						"186151", -- [64]
						"59544", -- [65]
						"186121", -- [66]
						"197697", -- [67]
						"194990", -- [68]
						"76057", -- [69]
						"56732", -- [70]
						"95676", -- [71]
						"94960", -- [72]
						"104215", -- [73]
						"95674", -- [74]
						"189492", -- [75]
						"190484", -- [76]
						"97087", -- [77]
					},
					["semver"] = "1.0.8",
					["Enabled"] = true,
					["Revision"] = 373,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option8",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Name"] = "Add - Health Markers [D]",
					["Author"] = "Duracell",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["version"] = 9,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["url"] = "https://wago.io/miabQpRfX/9",
				}, -- [9]
			},
			["npcs_renamed"] = {
				["162691"] = "Blightboner",
				["185680"] = "Haste Relic",
				["181549"] = "War",
				["197985"] = "Flame",
				["185683"] = "Speed Relic",
				["195930"] = "Mandick",
				["185610"] = "Simp",
				["194316"] = "I'm Zarii",
				["190128"] = "Zul'gondeez",
				["196116"] = "Furry",
				["164705"] = "Haste Slime",
				["198047"] = "Tempest",
				["175806"] = "Sa'lami",
				["194315"] = "Shlongo",
				["70245"] = "uh oh",
				["168153"] = "Plaguecock",
				["179334"] = "Not the boss",
				["173044"] = "Stitcher",
				["189813"] = "Dathea",
				["179842"] = "Assclapper",
				["195929"] = "Twomen",
				["197219"] = "Big Lasher",
				["59726"] = "Pearl",
				["190381"] = "Rotburst Totem",
				["181224"] = "Da Sausage",
				["188026"] = "Skull Emoji",
				["175663"] = "Hill Brad",
				["184972"] = "Eggnog",
				["144294"] = "Twinkerer",
				["178141"] = "Fish Dicker",
				["164707"] = "Purple Slime",
				["144298"] = "Mk III",
				["59555"] = "Haunting",
				["151657"] = "Bomb",
				["190426"] = "Decay Totem",
				["181551"] = "Duty",
				["185685"] = "CDR Relic",
				["180015"] = "Dickhand",
				["175646"] = "S.U.C.C. Master",
				["180990"] = "Jailer",
				["194897"] = "Stormsurge Totem",
				["174843"] = "Maitre D",
				["178171"] = "Don't Pull Me",
				["191736"] = "Beak Bitch",
				["184908"] = "Haste Boi",
				["199368"] = "Hard Crystal",
				["184910"] = "Speed Boi",
				["181546"] = "Renewal",
				["168969"] = "Green Slime",
				["197698"] = "Thundercunt",
				["167731"] = "Separator",
				["187897"] = "Dragher",
				["151649"] = "Mk I",
				["32666"] = "Uh oh",
				["201155"] = "Nascent Dragon",
				["184911"] = "CDR Boi",
				["193457"] = "Ballerina",
				["181548"] = "Absolution",
				["191222"] = "Frost Dragon",
				["168310"] = "Plaguecock",
				["164501"] = "Mute Me",
				["180773"] = "Trash Can",
				["176523"] = "Painsmith",
				["192333"] = "Alpha",
				["165946"] = "Mordretha",
				["182169"] = "Lithium",
				["179733"] = "Fish Dick",
				["165010"] = "Purple Slime",
				["164967"] = "Dickus",
				["163891"] = "Bad Slime",
				["190484"] = "Cracka",
				["197298"] = "Nascent Dragon",
				["176394"] = "Worker",
				["164804"] = "Simp Tree",
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8552",
				["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:2204",
			},
			["aura_cache_by_name"] = {
				["power word: shield"] = {
					17, -- [1]
					11647, -- [2]
					11835, -- [3]
					11974, -- [4]
					17139, -- [5]
					20697, -- [6]
					22187, -- [7]
					27607, -- [8]
					29408, -- [9]
					32595, -- [10]
					35944, -- [11]
					36052, -- [12]
					41373, -- [13]
					44175, -- [14]
					44291, -- [15]
					46193, -- [16]
					66099, -- [17]
					71548, -- [18]
					71780, -- [19]
					83842, -- [20]
					84039, -- [21]
					102409, -- [22]
					113734, -- [23]
					122808, -- [24]
					123258, -- [25]
					127399, -- [26]
					135313, -- [27]
					136100, -- [28]
					165718, -- [29]
					211558, -- [30]
					226076, -- [31]
					248441, -- [32]
					284471, -- [33]
					318158, -- [34]
					344426, -- [35]
				},
				["butcher cut"] = {
					279416, -- [1]
					279426, -- [2]
				},
				["mutilated flesh"] = {
					211672, -- [1]
					340431, -- [2]
					381672, -- [3]
					394021, -- [4]
				},
				["enslaved"] = {
					201089, -- [1]
					204831, -- [2]
					211680, -- [3]
					222424, -- [4]
					268192, -- [5]
					299156, -- [6]
					303622, -- [7]
					323961, -- [8]
				},
				["moonkin aura"] = {
					209740, -- [1]
					209746, -- [2]
				},
				["numbing poison"] = {
					5760, -- [1]
					5761, -- [2]
					158873, -- [3]
					158876, -- [4]
					311373, -- [5]
					342947, -- [6]
					359078, -- [7]
				},
				["consecration"] = {
					26573, -- [1]
					32773, -- [2]
					33559, -- [3]
					36946, -- [4]
					37553, -- [5]
					38385, -- [6]
					41541, -- [7]
					43429, -- [8]
					57798, -- [9]
					59998, -- [10]
					69930, -- [11]
					79966, -- [12]
					81297, -- [13]
					107100, -- [14]
					111365, -- [15]
					153441, -- [16]
					158416, -- [17]
					162642, -- [18]
					165711, -- [19]
					184047, -- [20]
					188370, -- [21]
					190010, -- [22]
					200667, -- [23]
					200678, -- [24]
					200679, -- [25]
					204242, -- [26]
					205228, -- [27]
					216217, -- [28]
					221645, -- [29]
					221730, -- [30]
					233390, -- [31]
					243597, -- [32]
					251151, -- [33]
					251152, -- [34]
					251549, -- [35]
					251550, -- [36]
					264082, -- [37]
					283579, -- [38]
					283582, -- [39]
					283583, -- [40]
					288807, -- [41]
					288808, -- [42]
					288809, -- [43]
					290496, -- [44]
					290497, -- [45]
					290498, -- [46]
					294346, -- [47]
					294347, -- [48]
					327980, -- [49]
					344172, -- [50]
					382484, -- [51]
					387881, -- [52]
				},
				["chaos brand"] = {
					1490, -- [1]
					255260, -- [2]
					281242, -- [3]
				},
				["whip rage"] = {
					29340, -- [1]
				},
				["mystic touch"] = {
					8647, -- [1]
				},
				["regrowth"] = {
					8936, -- [1]
					16561, -- [2]
					20665, -- [3]
					22373, -- [4]
					22695, -- [5]
					27637, -- [6]
					28744, -- [7]
					34361, -- [8]
					39000, -- [9]
					39125, -- [10]
					66067, -- [11]
					69882, -- [12]
					72922, -- [13]
					72932, -- [14]
				},
				["earth shield"] = {
					379, -- [1]
					974, -- [2]
					32734, -- [3]
					38590, -- [4]
					54479, -- [5]
					54480, -- [6]
					55599, -- [7]
					55600, -- [8]
					56451, -- [9]
					57802, -- [10]
					57803, -- [11]
					58981, -- [12]
					58982, -- [13]
					59471, -- [14]
					59472, -- [15]
					60013, -- [16]
					60014, -- [17]
					66063, -- [18]
					66064, -- [19]
					67530, -- [20]
					67537, -- [21]
					69568, -- [22]
					69569, -- [23]
					69925, -- [24]
					69926, -- [25]
					77905, -- [26]
					79927, -- [27]
					79928, -- [28]
					101649, -- [29]
					101650, -- [30]
					143475, -- [31]
					143479, -- [32]
					145559, -- [33]
					145560, -- [34]
					159981, -- [35]
					159982, -- [36]
					165773, -- [37]
					199355, -- [38]
					199356, -- [39]
					204288, -- [40]
					204290, -- [41]
					226078, -- [42]
					254417, -- [43]
					254425, -- [44]
					268709, -- [45]
					268710, -- [46]
					374066, -- [47]
					374067, -- [48]
					377874, -- [49]
					377875, -- [50]
					383648, -- [51]
				},
				["deadly poison"] = {
					2818, -- [1]
					2823, -- [2]
					3583, -- [3]
					10022, -- [4]
					13582, -- [5]
					21787, -- [6]
					21788, -- [7]
					32970, -- [8]
					32971, -- [9]
					34616, -- [10]
					34655, -- [11]
					34657, -- [12]
					36872, -- [13]
					38519, -- [14]
					38520, -- [15]
					41191, -- [16]
					41192, -- [17]
					41485, -- [18]
					43580, -- [19]
					43581, -- [20]
					56145, -- [21]
					56149, -- [22]
					59479, -- [23]
					59482, -- [24]
					63755, -- [25]
					63756, -- [26]
					67710, -- [27]
					67711, -- [28]
					72329, -- [29]
					82632, -- [30]
					82633, -- [31]
				},
				["power word: fortitude"] = {
					13864, -- [1]
					21562, -- [2]
					23947, -- [3]
					23948, -- [4]
					36004, -- [5]
					58921, -- [6]
					74973, -- [7]
					94366, -- [8]
					133538, -- [9]
					160637, -- [10]
					165739, -- [11]
					183585, -- [12]
					206629, -- [13]
					211681, -- [14]
					266501, -- [15]
					267528, -- [16]
					284466, -- [17]
					286145, -- [18]
				},
				["crippling poison"] = {
					3408, -- [1]
					3409, -- [2]
					25809, -- [3]
					30981, -- [4]
					44289, -- [5]
				},
				["arcane intellect"] = {
					1459, -- [1]
					13326, -- [2]
					36880, -- [3]
					45525, -- [4]
				},
				["insidious chill"] = {
					391566, -- [1]
					391568, -- [2]
				},
				["mort'regar's echoes"] = {
					333575, -- [1]
				},
				["earth dominance"] = {
					374917, -- [1]
					396067, -- [2]
					396068, -- [3]
					396085, -- [4]
					396098, -- [5]
				},
				["mind flay"] = {
					15407, -- [1]
					16568, -- [2]
					17165, -- [3]
					22919, -- [4]
					23953, -- [5]
					26044, -- [6]
					26143, -- [7]
					28310, -- [8]
					29407, -- [9]
					29570, -- [10]
					32417, -- [11]
					35507, -- [12]
					37276, -- [13]
					37330, -- [14]
					37621, -- [15]
					38243, -- [16]
					40842, -- [17]
					42396, -- [18]
					43512, -- [19]
					46562, -- [20]
					52586, -- [21]
					54339, -- [22]
					54805, -- [23]
					57779, -- [24]
					57941, -- [25]
					59367, -- [26]
					59974, -- [27]
					60006, -- [28]
					60472, -- [29]
					65488, -- [30]
					78751, -- [31]
					79541, -- [32]
					79711, -- [33]
					89032, -- [34]
					91134, -- [35]
					103024, -- [36]
					129033, -- [37]
					144293, -- [38]
					149984, -- [39]
					150886, -- [40]
					150893, -- [41]
					154125, -- [42]
					164445, -- [43]
					172670, -- [44]
					183324, -- [45]
					189873, -- [46]
					193473, -- [47]
					196508, -- [48]
					196509, -- [49]
					201520, -- [50]
					202894, -- [51]
					203037, -- [52]
					203313, -- [53]
					203375, -- [54]
					208697, -- [55]
					216513, -- [56]
					218510, -- [57]
					222075, -- [58]
					234696, -- [59]
					241934, -- [60]
					254123, -- [61]
					260182, -- [62]
					260304, -- [63]
					263117, -- [64]
					264892, -- [65]
					271649, -- [66]
					274019, -- [67]
					274032, -- [68]
					277358, -- [69]
					277521, -- [70]
					278311, -- [71]
					284414, -- [72]
					290402, -- [73]
					292974, -- [74]
					299301, -- [75]
					303566, -- [76]
					306391, -- [77]
					308172, -- [78]
					308884, -- [79]
					308885, -- [80]
					310552, -- [81]
					310555, -- [82]
					312526, -- [83]
					312679, -- [84]
					314187, -- [85]
					314188, -- [86]
					314592, -- [87]
					315949, -- [88]
					316835, -- [89]
					317490, -- [90]
					319027, -- [91]
					321330, -- [92]
					394167, -- [93]
				},
				["might of the upper reaches"] = {
					333579, -- [1]
				},
				["enveloping mist"] = {
					124682, -- [1]
					209193, -- [2]
					212414, -- [3]
					227345, -- [4]
					231605, -- [5]
					274062, -- [6]
					317602, -- [7]
					344008, -- [8]
					344240, -- [9]
				},
				["ice barrier"] = {
					11426, -- [1]
					33245, -- [2]
					69787, -- [3]
				},
			},
			["url"] = "https://wago.io/ak3iS95aa/85",
			["aura_stack_anchor"] = {
				["y"] = 1.680000305175781,
				["x"] = 8.40999984741211,
				["side"] = 12,
			},
			["cast_statusbar_fadein_time"] = 0.01999999955296516,
			["health_cutoff_upper"] = false,
			["cast_statusbar_spark_alpha"] = 1,
			["aura2_y_offset"] = 1.300003051757813,
			["aura_timer_text_anchor"] = {
				["x"] = 0.5,
			},
			["buffs_on_aura2"] = true,
			["plate_config"] = {
				["player"] = {
					["spellname_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
					["percent_text_font"] = "Expressway",
					["power_percent_text_font"] = "Expressway",
				},
				["friendlyplayer"] = {
					["actorname_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
					["actorname_friend_color"] = {
						0.70980392156863, -- [1]
					},
					["actorname_text_size"] = 9,
					["actorname_use_class_color"] = true,
					["cast"] = {
						132, -- [1]
						2, -- [2]
					},
					["level_text_alpha"] = 0.29999998211861,
					["actorname_text_spacing"] = 8,
					["only_damaged"] = false,
					["actorname_guild_color"] = {
						0.49803921568627, -- [1]
					},
					["cast_incombat"] = {
						132, -- [1]
						2, -- [2]
					},
					["only_thename"] = true,
					["health_incombat"] = {
						132, -- [1]
						16, -- [2]
					},
					["health"] = {
						132, -- [1]
						16, -- [2]
					},
					["percent_show_percent"] = false,
					["percent_text_show_decimals"] = false,
					["percent_text_font"] = "Naowh",
					["level_text_font"] = "Naowh",
					["spellname_text_font"] = "Expressway",
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Naowh",
					["cast"] = {
						132, -- [1]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 9,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["enabled"] = false,
					["cast_incombat"] = {
						132, -- [1]
						10, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["quest_color"] = {
						1, -- [1]
						0.49803921568627, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 11,
					["big_actorname_text_font"] = "Naowh",
					["actorname_text_outline"] = "OUTLINE",
					["big_actortitle_text_color"] = {
						nil, -- [1]
						0.7843137254902, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["spellpercent_text_enabled"] = true,
					["percent_text_font"] = "Expressway",
					["quest_color_enemy"] = {
						1, -- [1]
						0.36862745098039, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actorname_text_color"] = {
						0.25098039215686, -- [1]
						0.68627450980392, -- [2]
						0.20392156862745, -- [3]
						1, -- [4]
					},
					["actorname_text_anchor"] = {
						["y"] = -0.2000045776367188,
						["x"] = 2.5,
						["side"] = 10,
					},
					["spellname_text_font"] = "Expressway",
					["health_incombat"] = {
						132, -- [1]
					},
					["health"] = {
						132, -- [1]
						16, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["percent_text_size"] = 10,
					["level_text_alpha"] = 0.29999998211861,
					["percent_show_health"] = true,
					["percent_text_enabled"] = true,
				},
				["global_health_height"] = 16,
				["global_health_width"] = 132,
				["enemyplayer"] = {
					["actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 10,
					["quest_color_enemy"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 8,
					["spellname_text_font"] = "Expressway",
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						135, -- [1]
						7, -- [2]
					},
					["all_names"] = true,
					["level_text_alpha"] = 0.29999998211861,
					["big_actortitle_text_size"] = 10,
					["fixed_class_color"] = {
						0.69803921568627, -- [1]
						0.1921568627451, -- [2]
						0.11372549019608, -- [3]
					},
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = 0.5,
						["x"] = 2,
						["side"] = 10,
					},
					["spellpercent_text_anchor"] = {
						["y"] = -1.5,
						["x"] = 3,
						["side"] = 5,
					},
					["spellpercent_text_size"] = 9,
					["actorname_text_spacing"] = 9,
					["percent_text_font"] = "Expressway",
					["big_actorname_text_font"] = "Expressway",
					["quest_enabled"] = true,
					["cast_incombat"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellname_text_size"] = 9,
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						135, -- [1]
						15, -- [2]
					},
					["health"] = {
						135, -- [1]
						15, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = -1.5,
						["x"] = -1,
						["side"] = 3,
					},
					["actorname_text_size"] = 10,
					["percent_text_anchor"] = {
						["y"] = 0.5,
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Expressway",
					["quest_color_enemy"] = {
						nil, -- [1]
						0.49803921568627, -- [2]
					},
					["spellpercent_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						nil, -- [1]
						0.49803921568627, -- [2]
					},
					["actorname_text_size"] = 9,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["actorname_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.29999998211861,
					["spellpercent_text_anchor"] = {
						["y"] = -1.5,
						["x"] = 3,
						["side"] = 5,
					},
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "Expressway",
					["cast_incombat"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellname_text_font"] = "Expressway",
					["actorname_text_anchor"] = {
						["y"] = 0.5,
						["x"] = 2,
						["side"] = 10,
					},
					["health_incombat"] = {
						135, -- [1]
						15, -- [2]
					},
					["spellname_text_size"] = 9,
					["health"] = {
						135, -- [1]
						15, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = -1.5,
						["x"] = -1,
						["side"] = 3,
					},
					["big_actorname_text_font"] = "Expressway",
					["percent_text_anchor"] = {
						["y"] = 0.5,
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["level_text_enabled"] = false,
				},
			},
			["health_selection_overlay"] = "PlaterFocus",
			["aura_y_offset"] = 1.300003051757813,
			["expansion_triggerwipe"] = {
				[9] = true,
				[8] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.80000007152557, -- [1]
				0.30196079611778, -- [2]
				0.30196079611778, -- [3]
				1, -- [4]
			},
			["first_run2"] = true,
			["indicator_spec"] = false,
			["border_thickness"] = 0.4999999701976776,
			["resources_settings"] = {
				["global_settings"] = {
					["anchor"] = {
						["y"] = 9.709999084472656,
					},
					["scale"] = 0.80000001192093,
				},
				["chr"] = {
					["Player-4184-004EAE08"] = "ArcaneCharges",
					["Player-3674-0898468A"] = "SoulShards",
					["Player-3674-096625B1"] = "Chi",
					["Player-3678-0D4F17CA"] = "ComboPoints",
					["Player-3676-0DBAB9E1"] = "ComboPoints",
					["Player-3678-0D4C07B5"] = "ComboPoints",
					["Player-970-0065C1C7"] = "ComboPoints",
					["Player-3678-0D44FD01"] = "ComboPoints",
					["Player-2073-09AF21B0"] = "ComboPoints",
					["Player-4604-00325132"] = "ComboPoints",
					["Player-4184-0021692E"] = "ComboPoints",
					["Player-970-006B99B8"] = "ComboPoints",
					["Player-3674-09CBAF8C"] = "ArcaneCharges",
				},
			},
			["health_animation_time_dilatation"] = 1.669999957084656,
			["npc_cache"] = {
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[161124] = {
					"Urg'roth, Breaker of Heroes", -- [1]
					"The Underrot", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[201155] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168425] = {
					"Forsworn Annihilator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[135699] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"UNKNOWN", -- [2]
				},
				[190686] = {
					"Frozen Destroyer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[118489] = {
					"Corrupted Risen Soldier", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[98285] = {
					"Smashum Grabb", -- [1]
					"Tanaan Jungle", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[190688] = {
					"Blazing Fiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[139284] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[118491] = {
					"Corrupted Risen Mage", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168443] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[196198] = {
					"Algeth'ar Security", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189555] = {
					"Arcane Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'dahh", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[190588] = {
					"Tectonic Crusher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180104] = {
					"Tangling Bloom", -- [1]
					"The Shadowlands", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[198263] = {
					"Stalwart Broodwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[199547] = {
					"Frostforged Zealot", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155432] = {
					"Enchanted Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[199549] = {
					"Flamesworn Herald", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[155433] = {
					"Void-Touched Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[155434] = {
					"Emissary of the Tides", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"UNKNOWN", -- [2]
				},
				[134602] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[115640] = {
					"Fuming Imp", -- [1]
					"Faronaar", -- [2]
				},
				[130026] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[135246] = {
					"\"Stabby\" Lottie", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[130027] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196117] = {
					"Crystal Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[190366] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[130025] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[198424] = {
					"Primalist Frostsculptor", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136665] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[200943] = {
					"Electrified Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[161244] = {
					"Blood of the Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[198326] = {
					"Stormwrought Despoiler", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168384] = {
					"Flesh Construct", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199325] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115642] = {
					"Umbral Imp", -- [1]
					"Faronaar", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187154] = {
					"Arcane Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[179852] = {
					"Soulless Vengeance", -- [1]
					"The Shadowlands", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[135759] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[127486] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197799] = {
					"Quarry Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[127480] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[175550] = {
					"Volatile Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[136735] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[87329] = {
					"Raider's Training Dummy", -- [1]
					"Draenor", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[199595] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196203] = {
					"Algeth'ar Nurse", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Spires of Ascension", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190690] = {
					"Thundering Ravager", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[87252] = {
					"Unruly Ogron", -- [1]
					"Iron Docks", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[127484] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169421] = {
					"Felguard", -- [1]
					"Halls of Infusion", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[127482] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"UNKNOWN", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[131445] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[161241] = {
					"Voidweaver Mal'thir", -- [1]
					"The Underrot", -- [2]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168658] = {
					"Forsworn Devastator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[32666] = {
					"Training Dummy", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[161243] = {
					"Samh'rek, Beckoner of Chaos", -- [1]
					"The Underrot", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[127488] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Halls of Infusion", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[175517] = {
					"Symbiotic Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[127497] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Halls of Infusion", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
			},
			["indicator_scale"] = 0.9999999403953552,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.50242385268211, -- [4]
			},
			["indicator_anchor"] = {
				["side"] = 6,
				["x"] = 2,
			},
			["health_selection_overlay_alpha"] = 0,
			["minor_height_scale"] = 0.99999994039536,
			["extra_icon_show_enrage_border"] = {
				0.85098039215686, -- [1]
				0, -- [2]
				0.074509803921569, -- [3]
			},
			["aura_padding"] = 0,
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634199,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = true,
					["Revision"] = 497,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["LastHookEdited"] = "Initialization",
					["Options"] = {
					},
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 158,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
					},
					["Options"] = {
					},
					["Author"] = "�r��ne-Kel'thuzad",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Adds double arrow as a target indicators option",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1677634210,
					["PlaterCore"] = 1,
					["Name"] = "Double Arrow Target",
					["Url"] = "https://wago.io/f5itAXjQq/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
					["LastHookEdited"] = "",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 231,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
					},
					["Options"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1677634245,
					["PlaterCore"] = 1,
					["Name"] = "QuestProgress",
					["Url"] = "https://wago.io/uwe9CEwMm/2",
					["Icon"] = 132212,
					["LastHookEdited"] = "Nameplate Updated",
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1677634169,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/VtPjNl8Mg/7",
					["Icon"] = 135940,
					["Enabled"] = true,
					["Revision"] = 1229,
					["semver"] = "1.0.6",
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Prio"] = 99,
					["version"] = 7,
					["PlaterCore"] = 1,
					["Name"] = "Absorb Shields in Healthbar",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options For @scriptname",
							["Name"] = "Options Intro",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = "",
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
					},
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 893,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Training Dummy\"] = \"Dum Dum\", \n        --[\"\"] = \"\", --Template\n        \n        --Dragonflight Raids\n        \n        --Vault of the Incarnates\n        [\"Frost Tomb\"] = \"Skull Emoji\",\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        [\"Eranog\"] = \"Eggnog\",\n        [\"Nascent Proto-Dragon\"] = \"Nascent Dragon\",\n        [\"Juvenile Frost Proto-Dragon\"] = \"Frost Dragon\",\n        \n        \n        \n        --Dragonflight Dungeons\n        \n        --Ruby Life Pools\n        [\"Thunderhead\"] = \"Thundercunt\",\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        [\"Defier Draghar\"] = \"Dragher\",\n        [\"Kyrakka\"] = \"Cracka\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Crawth\"] = \"Beak Bitch\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Big Crystal\",\n        [\"Crystal Fury\"] = \"Furry\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Decay Totem\",\n        \n        --Halls of Infusion\n        \n        \n        --Neltharus\n        \n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        [\"Stormcaller Solongo\"] = \"Shlongo\",\n        [\"Stormcaller Zarii\"] = \"I'm Zarii\",\n        [\"Soulharvester Tumen\"] = \"Twomen\",\n        [\"Soulharvester Mandakh\"] = \"Mandick\",\n        [\"Balara\"] = \"Ballerina\",\n        \n        \n        --Uldaman: Legacy of Tyr\n        \n        \n        \n        \n        --Shadowlands\n        \n        --Open World\n        [\"Fallen Knowledge-Seeker\"] = \"Seeker\",\n        \n        \n        \n        --Shadowlands Raids\n        \n        --Castle Nathria\n        [\"Stoneborn Maitre D'\"] = \"Maitre D'\",\n        [\"Rat of Unusual Size\"] = \"Big Rat\",\n        \n        --Sanctum of Domination\n        [\"Sylvanas Windrunner\"] = \"Sylvanas\",\n        \n        --Sepulcher of the First Ones\n        [\"Dausegne\"] = \"Da Sausage\",\n        [\"Anduin Wrynn\"] = \"Anduin\",\n        [\"The Jailer\"] = \"Jailer\",\n        [\"Unmade Steward\"] = \"Simp\",\n        [\"Lihuvim\"] = \"Lithium\",\n        [\"Prototype of War\"] = \"War\",\n        [\"Prototype of Duty\"] = \"Duty\",\n        [\"Prototype of Renewal\"] = \"Renewal\",\n        [\"Prototype of Absolution\"] = \"Absolution\",\n        \n        \n        \n        --Shadowlands Dungeons\n        \n        --De other Side\n        [\"Millhouse Manastorm\"] = \"Milfhouse\",\n        [\"Millificent Manastorm\"] = \"Millificent\",\n        \n        --Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Mute Me\",\n        \n        --Necrotic Wake\n        [\"Stitching Assistant\"] = \"Stitcher\",\n        [\"Separation Assistant\"] = \"Separator\",\n        [\"Blightbone\"] = \"Blightboner\",\n        \n        --Theater of pain\n        [\"Mordretha, the Endless Empress\"] = \"Mordretha\",   \n        \n        --Plaguefall\n        [\"Congealed Slime\"] = \"Purple Slime\",\n        [\"Pestilence Slime\"] = \"Haste Slime\",\n        [\"Gushing Slime\"] = \"Green Slime\",\n        [\"Rotmarrow Slime\"] = \"Bad Slime\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        [\"Plagueroc\"] = \"Plaguecock\",\n        \n        --Tazavesh: Streets of Wonder\n        [\"Commerce Enforcer\"] = \"Assclapper\",\n        [\"So'azmi\"] = \"Sa'lami\",\n        [\"P.O.S.T. Master\"] = \"S.U.C.C. Master\",\n        [\"Portalmancer Zo'dahh\"] = \"Not The Boss\",\n        \n        --Tazavesh: So'leah's Gambit\n        [\"Murkbrine Scalebinder\"] = \"Fish Dicker\",\n        [\"Invigorating Fish Stick\"] = \"Fish Dick\",\n        [\"Hylbrande\"] = \"Hill Brad\",\n        [\"Burly Deckhand\"] = \"Dickhand\",\n        [\"Stormforged Guardian\"] = \"Don't pull me\",\n        \n        \n        \n        --Legion Dungeons\n        \n        --Return To Karazhan\n        [\"Spectral Apprentice\"] = \"Apprentice\",\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Halls of Valor\n        [\"Solsten\"] = \"Soulstone\",\n        \n        --Court of Stars\n        \n        \n        \n        --MoP Dungeons\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n        [\"Peril\"] = \"Pearl\",\n        \n        \n        \n        --BFA Dungeons\n        \n        --Operation: Mechagon\n        [\"Rocket Tonk\"] = \"Rocket\",\n        [\"Strider Tonk\"] = \"Strider\",\n        [\"Bomb Tonk\"] = \"Bomb\",\n        [\"Defense Bot Mk I\"] = \"MK-I\",\n        [\"Defense Bot Mk III\"] = \"MK-III\",\n        [\"Mechagon Tinkerer\"] = \"Twinkerer\",\n        \n        \n        \n        --Seasonal Affixes\n        \n        --M+ Shrouded Affix\n        [\"Zul'gamux\"] = \"Zul'gondeez\",\n        \n        --M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Speed Relic\",\n        [\"Vy Relic\"] = \"Haste Relic\",\n        [\"Urh Dismantler\"] = \"CDR Boi\",\n        [\"Wo Drifter\"] = \"Speed Boi\",\n        [\"Vy Interceptor\"] = \"Haste Boi\",\n        \n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["Options"] = {
					},
					["Author"] = "Rhk-Tarren Mill",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Training Dummy\"] = \"Dum Dum\", \n        --[\"\"] = \"\", --Template\n        \n        --Dragonflight Raids\n        \n        --Vault of the Incarnates\n        [\"Frost Tomb\"] = \"Skull Emoji\",\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        [\"Eranog\"] = \"Eggnog\",\n        [\"Nascent Proto-Dragon\"] = \"Nascent Dragon\",\n        [\"Juvenile Frost Proto-Dragon\"] = \"Frost Dragon\",\n        \n        \n        \n        --Dragonflight Dungeons\n        \n        --Ruby Life Pools\n        [\"Thunderhead\"] = \"Thundercunt\",\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        [\"Defier Draghar\"] = \"Dragher\",\n        [\"Kyrakka\"] = \"Cracka\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Crawth\"] = \"Beak Bitch\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Big Crystal\",\n        [\"Crystal Fury\"] = \"Furry\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Decay Totem\",\n        \n        --Halls of Infusion\n        \n        \n        --Neltharus\n        \n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        [\"Stormcaller Solongo\"] = \"Shlongo\",\n        [\"Stormcaller Zarii\"] = \"I'm Zarii\",\n        [\"Soulharvester Tumen\"] = \"Twomen\",\n        [\"Soulharvester Mandakh\"] = \"Mandick\",\n        [\"Balara\"] = \"Ballerina\",\n        \n        \n        --Uldaman: Legacy of Tyr\n        \n        \n        \n        \n        --Shadowlands\n        \n        --Open World\n        [\"Fallen Knowledge-Seeker\"] = \"Seeker\",\n        \n        \n        \n        --Shadowlands Raids\n        \n        --Castle Nathria\n        [\"Stoneborn Maitre D'\"] = \"Maitre D'\",\n        [\"Rat of Unusual Size\"] = \"Big Rat\",\n        \n        --Sanctum of Domination\n        [\"Sylvanas Windrunner\"] = \"Sylvanas\",\n        \n        --Sepulcher of the First Ones\n        [\"Dausegne\"] = \"Da Sausage\",\n        [\"Anduin Wrynn\"] = \"Anduin\",\n        [\"The Jailer\"] = \"Jailer\",\n        [\"Unmade Steward\"] = \"Simp\",\n        [\"Lihuvim\"] = \"Lithium\",\n        [\"Prototype of War\"] = \"War\",\n        [\"Prototype of Duty\"] = \"Duty\",\n        [\"Prototype of Renewal\"] = \"Renewal\",\n        [\"Prototype of Absolution\"] = \"Absolution\",\n        \n        \n        \n        --Shadowlands Dungeons\n        \n        --De other Side\n        [\"Millhouse Manastorm\"] = \"Milfhouse\",\n        [\"Millificent Manastorm\"] = \"Millificent\",\n        \n        --Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Mute Me\",\n        \n        --Necrotic Wake\n        [\"Stitching Assistant\"] = \"Stitcher\",\n        [\"Separation Assistant\"] = \"Separator\",\n        [\"Blightbone\"] = \"Blightboner\",\n        \n        --Theater of pain\n        [\"Mordretha, the Endless Empress\"] = \"Mordretha\",   \n        \n        --Plaguefall\n        [\"Congealed Slime\"] = \"Purple Slime\",\n        [\"Pestilence Slime\"] = \"Haste Slime\",\n        [\"Gushing Slime\"] = \"Green Slime\",\n        [\"Rotmarrow Slime\"] = \"Bad Slime\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        [\"Plagueroc\"] = \"Plaguecock\",\n        \n        --Tazavesh: Streets of Wonder\n        [\"Commerce Enforcer\"] = \"Assclapper\",\n        [\"So'azmi\"] = \"Sa'lami\",\n        [\"P.O.S.T. Master\"] = \"S.U.C.C. Master\",\n        [\"Portalmancer Zo'dahh\"] = \"Not The Boss\",\n        \n        --Tazavesh: So'leah's Gambit\n        [\"Murkbrine Scalebinder\"] = \"Fish Dicker\",\n        [\"Invigorating Fish Stick\"] = \"Fish Dick\",\n        [\"Hylbrande\"] = \"Hill Brad\",\n        [\"Burly Deckhand\"] = \"Dickhand\",\n        [\"Stormforged Guardian\"] = \"Don't pull me\",\n        \n        \n        \n        --Legion Dungeons\n        \n        --Return To Karazhan\n        [\"Spectral Apprentice\"] = \"Apprentice\",\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Halls of Valor\n        [\"Solsten\"] = \"Soulstone\",\n        \n        --Court of Stars\n        \n        \n        \n        --MoP Dungeons\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n        [\"Peril\"] = \"Pearl\",\n        \n        \n        \n        --BFA Dungeons\n        \n        --Operation: Mechagon\n        [\"Rocket Tonk\"] = \"Rocket\",\n        [\"Strider Tonk\"] = \"Strider\",\n        [\"Bomb Tonk\"] = \"Bomb\",\n        [\"Defense Bot Mk I\"] = \"MK-I\",\n        [\"Defense Bot Mk III\"] = \"MK-III\",\n        [\"Mechagon Tinkerer\"] = \"Twinkerer\",\n        \n        \n        \n        --Seasonal Affixes\n        \n        --M+ Shrouded Affix\n        [\"Zul'gamux\"] = \"Zul'gondeez\",\n        \n        --M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Speed Relic\",\n        [\"Vy Relic\"] = \"Haste Relic\",\n        [\"Urh Dismantler\"] = \"CDR Boi\",\n        [\"Wo Drifter\"] = \"Speed Boi\",\n        [\"Vy Interceptor\"] = \"Haste Boi\",\n        \n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1677775102,
					["PlaterCore"] = 1,
					["Name"] = "M+ Renamer",
					["Url"] = "https://wago.io/cC74EIkxK/13",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
					["LastHookEdited"] = "",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
					},
					["Time"] = 1673672853,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["arena"] = true,
							["pvp"] = true,
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/Zz1aEIOJR/1",
					["Icon"] = 132310,
					["Enabled"] = true,
					["Revision"] = 323,
					["semver"] = "1.0.0",
					["Author"] = "Irashi-Antonidas",
					["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Sappable (Custom Icon)",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [6]
				{
					["OptionsValues"] = {
						["BSborderth"] = 1,
						["BSstack_color"] = {
							1, -- [1]
							0.023529414087534, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["BStimer_color"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.BShidefriendly and unitFrame.actorType == \"friendlyplayer\" then\n        if unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Hide()\n        end\n    else\n        if not unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Show()\n        end\n    end      \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    local function BuffSepcialFormat ()\n        local DF = _G [\"DetailsFramework\"]\n        DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge, spellName, isBuff, modRate)\n            \n            local actualSpellName, _, spellIcon = GetSpellInfo (spellId)\n            \n            if forceTexture then\n                spellIcon = forceTexture\n            end\n            \n            local spellName = spellName or actualSpellName or \"unknown_aura\"\n            local modRate = modRate or 1\n            \n            if (spellIcon) then\n                local profile = Plater.db.profile\n                local iconFrame = self:GetIcon()\n                iconFrame.Texture:SetTexture (spellIcon)\n                iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                \n                local size = modTable.config.BSborderth\n                \n                if (not iconFrame.PixelPerfectBorder) then\n                    iconFrame.PixelPerfectBorder = CreateFrame (\"frame\", nil, iconFrame, \"NamePlateFullBorderTemplate\")\n                end\n                \n                iconFrame.Border:Hide()\n                iconFrame.PixelPerfectBorder:SetVertexColor (Plater:ParseColors (borderColor))\n                iconFrame.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                iconFrame.PixelPerfectBorder:UpdateSizes()\n                \n                iconFrame.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                iconFrame.Texture:ClearAllPoints()\n                iconFrame.Texture:SetAllPoints()\n                \n                if (startTime) then\n                    CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                    \n                    if (self.options.show_text) then\n                        iconFrame.CountdownText:Show()\n                        \n                        local now = GetTime()\n                        iconFrame.timeRemaining = (startTime + duration - now) / modRate\n                        iconFrame.expirationTime = startTime + duration\n                        \n                        local formattedTime = (iconFrame.timeRemaining > 0) and self.options.decimal_timer and iconFrame.parentIconRow.FormatCooldownTimeDecimal(iconFrame.timeRemaining) or iconFrame.parentIconRow.FormatCooldownTime(iconFrame.timeRemaining) or \"\"\n                        iconFrame.CountdownText:SetText (formattedTime)\n                        \n                        iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                        DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                        DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                        DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                        \n                        if modTable.config.BScbt then\n                            if (iconFrame.timeRemaining/duration < 0.225) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"red\")\n                            elseif (iconFrame.timeRemaining/duration < 0.45) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"darkorange\")\n                            else\n                                Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                            end \n                        else\n                            Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                        end\n                        \n                        if self.options.on_tick_cooldown_update then\n                            iconFrame.lastUpdateCooldown = now\n                            iconFrame:SetScript(\"OnUpdate\", self.OnIconTick)\n                        else\n                            iconFrame:SetScript(\"OnUpdate\", nil)\n                        end\n                        \n                    else\n                        iconFrame:SetScript(\"OnUpdate\", nil)\n                        iconFrame.CountdownText:Hide()\n                    end\n                    \n                    iconFrame.Cooldown:SetReverse (self.options.cooldown_reverse)\n                    iconFrame.Cooldown:SetDrawSwipe (self.options.cooldown_swipe_enabled)\n                    iconFrame.Cooldown:SetEdgeTexture (self.options.cooldown_edge_texture)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (self.options.surpress_blizzard_cd_timer)\n                else\n                    iconFrame.timeRemaining = nil\n                    iconFrame.expirationTime = nil\n                    iconFrame:SetScript(\"OnUpdate\", nil)\n                    iconFrame.CountdownText:Hide()\n                end\n                \n                if (descText and self.options.desc_text) then\n                    iconFrame.Desc:Show()\n                    iconFrame.Desc:SetText (descText.text)     \n                    iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                    local Anchor = {\n                        side = modTable.config.Descanchor, \n                        x = modTable.config.Descxoff, \n                        y = modTable.config.Descyoff,\n                    }      \n                    Plater.SetAnchor (iconFrame.Desc, Anchor)\n                    DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                    DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                    DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                else\n                    iconFrame.Desc:Hide()\n                end\n                \n                \n                if (count and count > 1 and self.options.stack_text) then\n                    iconFrame.StackText:Show()\n                    iconFrame.StackText:SetText (count)\n                    iconFrame.StackText:SetTextColor (DF:ParseColors (modTable.config.BSstack_color))\n                    iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                    DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                    DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                    DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                else\n                    iconFrame.StackText:Hide()\n                end\n                \n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                iconFrame:Show()\n                \n                --> update the size of the frame\n                self:SetWidth ((self.options.left_padding * 2) + (modTable.config.BSpadding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                \n                --> make information available\n                iconFrame.spellId = spellId\n                iconFrame.startTime = startTime\n                iconFrame.duration = duration\n                iconFrame.count = count\n                iconFrame.debuffType = debuffType\n                iconFrame.caster = caster\n                iconFrame.canStealOrPurge = canStealOrPurge\n                iconFrame.isBuff = isBuff\n                iconFrame.spellName = spellName\n                \n                iconFrame.identifierKey = nil -- only used for \"specific\" add/remove\n                \n                --add the spell into the cache\n                self.AuraCache [spellId or -1] = true\n                self.AuraCache [spellName] = true\n                self.AuraCache.canStealOrPurge = self.AuraCache.canStealOrPurge or canStealOrPurge\n                self.AuraCache.hasEnrage = self.AuraCache.hasEnrage or debuffType == \"\" --yes, enrages are empty-string...\n                \n                --> show the frame\n                self:Show()\n                \n                return iconFrame\n            end\n        end\n    end    \n    \n    -- exchange formatting:\n    \n    function modTable.hookTimeFormat()\n        BuffSepcialFormat ()\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        BuffSepcialFormat ()\n        unitFrame.ExtraIconFrame:SetOption (\"icon_padding\", modTable.config.BSpadding)\n    end\n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    \n    modTable.hookTimeFormat()\n    \nend",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.BShidefriendly and unitFrame.actorType == \"friendlyplayer\" then\n        if unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Hide()\n        end\n    else\n        if not unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Show()\n        end\n    end      \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    local function BuffSepcialFormat ()\n        local DF = _G [\"DetailsFramework\"]\n        DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge, spellName, isBuff, modRate)\n            \n            local actualSpellName, _, spellIcon = GetSpellInfo (spellId)\n            \n            if forceTexture then\n                spellIcon = forceTexture\n            end\n            \n            local spellName = spellName or actualSpellName or \"unknown_aura\"\n            local modRate = modRate or 1\n            \n            if (spellIcon) then\n                local profile = Plater.db.profile\n                local iconFrame = self:GetIcon()\n                iconFrame.Texture:SetTexture (spellIcon)\n                iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                \n                local size = modTable.config.BSborderth\n                \n                if (not iconFrame.PixelPerfectBorder) then\n                    iconFrame.PixelPerfectBorder = CreateFrame (\"frame\", nil, iconFrame, \"NamePlateFullBorderTemplate\")\n                end\n                \n                iconFrame.Border:Hide()\n                iconFrame.PixelPerfectBorder:SetVertexColor (Plater:ParseColors (borderColor))\n                iconFrame.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                iconFrame.PixelPerfectBorder:UpdateSizes()\n                \n                iconFrame.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                iconFrame.Texture:ClearAllPoints()\n                iconFrame.Texture:SetAllPoints()\n                \n                if (startTime) then\n                    CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                    \n                    if (self.options.show_text) then\n                        iconFrame.CountdownText:Show()\n                        \n                        local now = GetTime()\n                        iconFrame.timeRemaining = (startTime + duration - now) / modRate\n                        iconFrame.expirationTime = startTime + duration\n                        \n                        local formattedTime = (iconFrame.timeRemaining > 0) and self.options.decimal_timer and iconFrame.parentIconRow.FormatCooldownTimeDecimal(iconFrame.timeRemaining) or iconFrame.parentIconRow.FormatCooldownTime(iconFrame.timeRemaining) or \"\"\n                        iconFrame.CountdownText:SetText (formattedTime)\n                        \n                        iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                        DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                        DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                        DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                        \n                        if modTable.config.BScbt then\n                            if (iconFrame.timeRemaining/duration < 0.225) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"red\")\n                            elseif (iconFrame.timeRemaining/duration < 0.45) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"darkorange\")\n                            else\n                                Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                            end \n                        else\n                            Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                        end\n                        \n                        if self.options.on_tick_cooldown_update then\n                            iconFrame.lastUpdateCooldown = now\n                            iconFrame:SetScript(\"OnUpdate\", self.OnIconTick)\n                        else\n                            iconFrame:SetScript(\"OnUpdate\", nil)\n                        end\n                        \n                    else\n                        iconFrame:SetScript(\"OnUpdate\", nil)\n                        iconFrame.CountdownText:Hide()\n                    end\n                    \n                    iconFrame.Cooldown:SetReverse (self.options.cooldown_reverse)\n                    iconFrame.Cooldown:SetDrawSwipe (self.options.cooldown_swipe_enabled)\n                    iconFrame.Cooldown:SetEdgeTexture (self.options.cooldown_edge_texture)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (self.options.surpress_blizzard_cd_timer)\n                else\n                    iconFrame.timeRemaining = nil\n                    iconFrame.expirationTime = nil\n                    iconFrame:SetScript(\"OnUpdate\", nil)\n                    iconFrame.CountdownText:Hide()\n                end\n                \n                if (descText and self.options.desc_text) then\n                    iconFrame.Desc:Show()\n                    iconFrame.Desc:SetText (descText.text)     \n                    iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                    local Anchor = {\n                        side = modTable.config.Descanchor, \n                        x = modTable.config.Descxoff, \n                        y = modTable.config.Descyoff,\n                    }      \n                    Plater.SetAnchor (iconFrame.Desc, Anchor)\n                    DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                    DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                    DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                else\n                    iconFrame.Desc:Hide()\n                end\n                \n                \n                if (count and count > 1 and self.options.stack_text) then\n                    iconFrame.StackText:Show()\n                    iconFrame.StackText:SetText (count)\n                    iconFrame.StackText:SetTextColor (DF:ParseColors (modTable.config.BSstack_color))\n                    iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                    DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                    DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                    DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                else\n                    iconFrame.StackText:Hide()\n                end\n                \n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                iconFrame:Show()\n                \n                --> update the size of the frame\n                self:SetWidth ((self.options.left_padding * 2) + (modTable.config.BSpadding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                \n                --> make information available\n                iconFrame.spellId = spellId\n                iconFrame.startTime = startTime\n                iconFrame.duration = duration\n                iconFrame.count = count\n                iconFrame.debuffType = debuffType\n                iconFrame.caster = caster\n                iconFrame.canStealOrPurge = canStealOrPurge\n                iconFrame.isBuff = isBuff\n                iconFrame.spellName = spellName\n                \n                iconFrame.identifierKey = nil -- only used for \"specific\" add/remove\n                \n                --add the spell into the cache\n                self.AuraCache [spellId or -1] = true\n                self.AuraCache [spellName] = true\n                self.AuraCache.canStealOrPurge = self.AuraCache.canStealOrPurge or canStealOrPurge\n                self.AuraCache.hasEnrage = self.AuraCache.hasEnrage or debuffType == \"\" --yes, enrages are empty-string...\n                \n                --> show the frame\n                self:Show()\n                \n                return iconFrame\n            end\n        end\n    end    \n    \n    -- exchange formatting:\n    \n    function modTable.hookTimeFormat()\n        BuffSepcialFormat ()\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        BuffSepcialFormat ()\n        unitFrame.ExtraIconFrame:SetOption (\"icon_padding\", modTable.config.BSpadding)\n    end\n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    \n    modTable.hookTimeFormat()\n    \nend",
					},
					["Time"] = 1677634210,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/-FONAlf09/15",
					["Icon"] = 134328,
					["Enabled"] = true,
					["Revision"] = 926,
					["semver"] = "1.0.14",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 15,
					["PlaterCore"] = 1,
					["Name"] = "Buff Special Options",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Basic Options",
							["Name"] = "Basic Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "BShidefriendly",
							["Value"] = true,
							["Name"] = "Hide Buff Special on Friendly UnitFrame",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Hide Buff Special at Friendly UnitFrame",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "BScbt",
							["Value"] = true,
							["Name"] = "Text Color By time",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, cooldown text color changed by time left. Below 10 is orange and below 5 is red.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special icon padding",
							["Min"] = 0,
							["Key"] = "BSpadding",
							["Value"] = 1,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special border thickness",
							["Min"] = 0,
							["Key"] = "BSborderth",
							["Value"] = 1.2,
							["Name"] = "Border Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Text Options",
							["Name"] = "Buff Special Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "BStimer_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Timer Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set timer text color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "BSstack_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Stack Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set stack text color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Player Name Options",
							["Name"] = "Buff Special Player Name Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 9,
							["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)) / 9(CENTER)",
							["Min"] = 1,
							["Key"] = "Descanchor",
							["Value"] = 4,
							["Name"] = "Player Name Text Anchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text y-offset",
							["Min"] = -100,
							["Key"] = "Descyoff",
							["Value"] = -2,
							["Name"] = "Player Name Text Y-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text x-offset",
							["Min"] = -100,
							["Key"] = "Descxoff",
							["Value"] = 0,
							["Name"] = "Player Name Text X-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
					},
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
					},
					["Time"] = 1677634183,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/lLK9gn7lc/5",
					["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
					["Enabled"] = true,
					["Revision"] = 74,
					["semver"] = "1.0.4",
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
					["Prio"] = 99,
					["version"] = 5,
					["PlaterCore"] = 1,
					["Name"] = "Arena - Buff-Tracking Mode",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
					},
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
					},
					["Time"] = 1677634208,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/mEN8Q6zUa/10",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Enabled"] = true,
					["Revision"] = 489,
					["semver"] = "1.0.9",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
					["Prio"] = 99,
					["version"] = 10,
					["PlaterCore"] = 1,
					["Name"] = "Cast Icon Anchor + Border",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1674275585,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/ZqU9hBu43/3",
					["Icon"] = 627607,
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "1.0.2",
					["Author"] = "Brewdux-Tarren Mill",
					["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
					["Prio"] = 99,
					["version"] = 3,
					["PlaterCore"] = 1,
					["Name"] = "Pet Threat Highlighter",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [10]
				{
					["OptionsValues"] = {
						["SPglowfreq"] = 0.59999990463257,
						["SPglowxoff"] = 0.5,
						["SPpixelborder"] = false,
						["SPglowyoff"] = 0.5,
						["SPglowparticle"] = 5,
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1674978736,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/uEnDIKvvP/2",
					["Icon"] = 132096,
					["Enabled"] = true,
					["Revision"] = 967,
					["semver"] = "1.0.1",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Steal/Purge Aura Glow",
					["LastHookEdited"] = "Initialization",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Common Options",
							["Name"] = "Common Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
							["Min"] = 1,
							["Key"] = "SPglownum",
							["Value"] = 2,
							["Name"] = "Glow Type",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Set to negative to inverse direction of rotation",
							["Min"] = -2,
							["Key"] = "SPglowfreq",
							["Value"] = 0.5,
							["Name"] = "Glow Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "SPglowcolor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0.45490196078431, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set glow color",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Pixel & Ants Glow",
							["Name"] = "Options for Pixel & Ants Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "Set number of lines",
							["Min"] = 1,
							["Key"] = "SPglowparticle",
							["Value"] = 6,
							["Name"] = "Number of Particles",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Offset of glow relative to region border",
							["Min"] = -10,
							["Key"] = "SPglowxoff",
							["Value"] = 1.2,
							["Name"] = "X-Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Offset of glow relative to region border",
							["Min"] = -10,
							["Key"] = "SPglowyoff",
							["Value"] = 1.2,
							["Name"] = "Y-Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Pixel Glow",
							["Name"] = "Options for Pixel Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "SPpixelborder",
							["Value"] = false,
							["Name"] = "Pixel Add Border",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable to true to create border under lines",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set pixel line length",
							["Min"] = 0.01,
							["Key"] = "SPpixellength",
							["Value"] = 6,
							["Name"] = "Pixel Line Length",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Set pixel line thickness",
							["Min"] = 0.01,
							["Key"] = "SPpixelth",
							["Value"] = 2,
							["Name"] = "Pixel Line Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Ants Glow",
							["Name"] = "Options for Ants Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 2.5,
							["Desc"] = "Set ants glow scale",
							["Min"] = 0.01,
							["Key"] = "SPantsscale",
							["Value"] = 0.8,
							["Name"] = "Ants Glow Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [17]
					},
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 15\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" \" .. targetNameByColor .. \"\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 15\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" \" .. targetNameByColor .. \"\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677632002,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/jsGuJ8TUI/2",
					["Icon"] = 2126355,
					["Enabled"] = false,
					["Revision"] = 246,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the cast target name with the spell name",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Cast target on Spell Name",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634222,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/P35nCfDqx/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
					["Enabled"] = true,
					["Revision"] = 81,
					["semver"] = "1.0.0",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Force Threat Color NPC",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [13]
				{
					["OptionsValues"] = {
						["EXEbdrcolor"] = {
							1, -- [1]
							0.37647062540054, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["EXEhbcon"] = false,
						["EXEalert"] = 0,
						["EXEhicolor"] = {
							0.74509805440903, -- [1]
							0.18823531270027, -- [2]
							0.11372549831867, -- [3]
							0, -- [4]
						},
						["onlyNPC"] = true,
						["EXEbdron"] = false,
					},
					["HooksTemp"] = {
						["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
					},
					["UID"] = "0x6150129e178c7fc5",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
						["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
					},
					["Time"] = 1677634180,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/uCoprJFNs/3",
					["Icon"] = 135358,
					["Enabled"] = true,
					["Revision"] = 3535,
					["semver"] = "1.0.2",
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
					["Prio"] = 99,
					["version"] = 3,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Initialization",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Execute Color Options",
							["Name"] = "Execute Color Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "EXEhbcon",
							["Value"] = true,
							["Name"] = "Enable Execute Healthbar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable Execute Healthbar Color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "EXEhbcolor",
							["Value"] = {
								0.3921568627451, -- [1]
								0.15294117647059, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Execute Healthbar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Healthbar Color",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "EXEbdron",
							["Value"] = false,
							["Name"] = "Enable Execute Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable Execute Border Color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "EXEbdrcolor",
							["Value"] = {
								0.3921568627451, -- [1]
								0.15294117647059, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Execute Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Border Color",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "onlyNPC",
							["Value"] = true,
							["Name"] = "Only on NPC",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Apply these features only on NPC",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "TrackAggro",
							["Value"] = false,
							["Name"] = "Track Aggro Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Execute Divisor Options",
							["Name"] = "Execute Divisor Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 4,
							["Key"] = "EXEhdoff",
							["Value"] = false,
							["Name"] = "Disable Execute Health Divisor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Disable Execute Health Divisor",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "EXEhdcolor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.8500000089407, -- [4]
							},
							["Name"] = "Execute Health Divisor Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Health Divisor Color",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "EXEhicolor",
							["Value"] = {
								0.27843137254902, -- [1]
								0, -- [2]
								1, -- [3]
								0.25, -- [4]
							},
							["Name"] = "Execute Health Indicator Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Health Indicator Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
							["Min"] = 0,
							["Key"] = "EXEalert",
							["Value"] = 13,
							["Name"] = "Preview Divisor %",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Force set health Divisor alpha value.",
							["Min"] = 0,
							["Key"] = "EXEhdalpha",
							["Value"] = 50,
							["Name"] = "Divisor Alpha %",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
					},
					["Name"] = "Advanced Execute Range [Fix]",
				}, -- [14]
				{
					["OptionsValues"] = {
						["castBarColorSelf"] = {
							1, -- [1]
							0, -- [2]
							0.99607849121094, -- [3]
							1, -- [4]
						},
						["castBarBorderColorInterrupt"] = {
							0, -- [1]
							1, -- [2]
							0.074509806931019, -- [3]
							1, -- [4]
						},
						["castBarColorInterrupt"] = {
							1, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["stratas"] = "MEDIUM",
					},
					["HooksTemp"] = {
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    Plater.SetCastBarColor(unitFrame);\n    Plater.SetCastBarBorderColor(unitFrame);\n    Plater.RefreshNameplateStrata(unitFrame);\nend\n\n\n",
						["Cast Start"] = "function (self, casterId, unitFrame, envTable, modTable)\n    if envTable.ApplyReflectable(unitFrame, casterId) then\n    elseif envTable.ApplyInterruptible(unitFrame, casterId) then\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.reflectableSpells = {\n        [167385] = true, -- Uber Strike for testing\n        \n        -- -- -- Raids\n        \n        -- -- Vault of the Incarnates\n        [396023] = true, -- Eranog - Incinerating Roar [Non-Targeted]\n        [397113] = true, -- Eranog - Burning Wound\n        [396351] = true, -- Terros - Infused Fallout [Non-Targeted]\n        [380487] = true, -- Terros - Rock Blast [Non-Targeted]\n        [381595] = true, -- Terros - Seismic Assault\n        [372315] = true, -- PC - Frost Spike\n        [372394] = true, -- PC - Lightning Bolt\n        [372027] = true, -- PC - Slashing Blaze\n        [374112] = true, -- Sennarth - Freezing Breath\n        [376851] = true, -- Dathea - Aerial Buffet\n        [385812] = true, -- Dathea - Aerial Slash\n        [376943] = true, -- Dathea - Cyclone [Non-Targeted]\n        [390548] = true, -- Kurog - Sundering Strike\n        [375870] = true, -- Diurna -  Mortal Stoneclaws\n        [378787] = true, -- Diurna - Crushing Stoneclaws\n        [375871] = true, -- Diurna - Wildfire [Non-Targeted]\n        [375873] = true, -- Diurna - Wildfire\n        [375716] = true, -- Diurna - Ice Barrage\n        [375653] = true, -- Diurna - Static Jolt\n        [375457] = true, -- Diurna - Chilling Tantrum [Non-Targeted]\n        [377658] = true, -- Raszageth - Electrified Jaws\n        [386410] = true, -- Raszageth - Thunderous Blast\n        \n        -- -- -- Mythic+\n        \n        -- -- Algeth'ar Academy\n        \n        [374343] = true, -- Echo of Doragosa - Energy Bomb\n        [388862] = true, -- Trash Surge\n        \n        -- -- Court of Starts\n        \n        [211406] = true, -- Trash - Firebolt\n        [209036] = true, -- Trash - Throw Torch\n        [373364] = true, -- Trash - Vampiric Claws\n        [209413] = true, -- Trash - Suppress\n        [211473] = true, -- Trash - Shadow Slash\n        \n        -- -- Halls of Valor\n        \n        [191976] = true, -- Hyrja - Arcing Bolt\n        [192288] = true, -- Trash - Searing Light\n        [198959] = true, -- Trash - Etch\n        [198962] = true, -- Trash - Shattered Rune\n        [198595] = true, -- Trash - Thunderous Bolt\n        \n        -- -- Ruby Life Pools\n        \n        [372808] = true, -- Melidrussa Frigid Shard\n        [373803] = true, -- Melidrussa Cold Claws\n        [371984] = true, -- Trash Icebolt\n        [384194] = true, -- Trash Cinderbolt\n        [385536] = true, -- Trash Flame Dance\n        [373869] = true, -- Trash Burning Touch\n        [392576] = true, -- Trash Thunder Bolt\n        \n        -- -- Shadowmoon Burial Grounds\n        \n        [152814] = true, -- Trash - Shadow Bolt\n        [156722] = true, -- Trash - Void Bolt\n        [398206] = true, -- Trash - Death Blast\n        [153524] = true, -- Trash - Plague Spit\n        [156776] = true, -- Trash - Rending Voidlash\n        \n        -- -- Temple of the Jade Serpent\n        \n        [397801] = true, -- Wise Mari - Hydrolance\n        [114571] = true, -- Lorewalker Stonestep - Agony\n        [106823] = true, -- Liu Flameheart - Serpent Strike\n        [106841] = true, -- Liu Flameheart - Jade Serpent Strike\n        [397888] = true, -- Trash - Hydrolance\n        [397931] = true, -- Trash - Dark Claw\n        [114646] = true, -- Trash - Haunting Gaze\n        [397914] = true, -- Trash - Defiling Mist\n        \n        -- -- The Azure Vault\n        \n        [374789] = true, -- Leymor - Infused Strike\n        [372222] = true, -- Azureblade - Azure Slash [Non-targeted]\n        [373932] = true, -- Azureblade - Illusionary Bolt\n        [384978] = true, -- Dragon - Strike] Dragon Strike\n        [371306] = true, -- Trash - Arcane Bolt\n        [377503] = true, -- Trash - Condensed Frost\n        [389804] = true, -- Trash - Heavy Tome\n        [370764] = true, -- Trash - Piercing Shards\n        \n        -- -- The Nokhud Offensive\n        \n        [384761] = true, -- The Raging Tempest - Wind Burst\n        [382670] = true, -- Teera and Maruuk - Gale Arrow [Non-targeted]\n        [376827] = true, -- Balakar Khan - Conductive Strike\n        [387613] = true, -- Trash - Death Bolt\n        [376829] = true, -- Trash - Thunder Strike\n        [381530] = true, -- Trash - Storm Shock\n        [386012] = true, -- Trash - Stormbolt\n        [376725] = true, -- Trash - Storm Bolt\n        [387127] = true  -- Trash - Chain Lightning\n    };\n    \n    envTable.interruptSpells = {\n        6552 -- Pummel\n    };\n    \n    envTable.castingStrata = modTable.config.stratas;\n    envTable.isWarrior = select(3, UnitClass(\"player\")) == 1;\n    \n    -- Function to apply the reflectable cast bar effects. Returns true if the effects were applied,\n    -- false otherwise.\n    envTable.ApplyReflectable = function (unitFrame, casterId)\n        local spellId = unitFrame.castBar.SpellID;\n        \n        -- IF  You are a warrior\n        -- AND The spell being cast is reflectable\n        -- AND The target is you\n        if envTable.isWarrior and envTable.reflectableSpells[spellId] and UnitIsUnit(casterId .. \"target\", \"player\") then\n            local _, duration = GetSpellCooldown(23920);\n            \n            -- IF Spell reflect is off CD\n            if duration == 0 then\n                Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorSelf);\n                -- Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarColorSelf);\n                return true; -- Effect was applied\n            end\n        end\n        \n        return false; -- No effects\n    end\n    \n    -- Function to apply the interruptible cast bar effects. Returns true if the effects were\n    -- applied, false otherwise.\n    envTable.ApplyInterruptible = function (unitFrame, casterId)\n        -- IF  The spell being cast is interruptible\n        -- AND The caster is an interruptible target\n        if unitFrame.castBar.CanInterrupt and UnitCanAttack(\"player\", casterId) then\n            -- Iterate through all the interrupt spells available to your current class.\n            for _, interruptId in ipairs(envTable.interruptSpells) do\n                local _, duration = GetSpellCooldown(interruptId);\n                -- IF An interrupt is off CD\n                if duration == 0 then\n                    unitFrame:SetFrameStrata(envTable.castingStrata);\n                    Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorInterrupt);\n                    Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarBorderColorInterrupt);\n                    return true; -- Effect was applied\n                end\n            end\n        end\n        \n        return false; -- No effects\n    end\nend",
					},
					["UID"] = "0x636726a724a7104",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.reflectableSpells = {\n        [167385] = true, -- Uber Strike for testing\n        \n        -- -- -- Raids\n        \n        -- -- Vault of the Incarnates\n        [396023] = true, -- Eranog - Incinerating Roar [Non-Targeted]\n        [397113] = true, -- Eranog - Burning Wound\n        [396351] = true, -- Terros - Infused Fallout [Non-Targeted]\n        [380487] = true, -- Terros - Rock Blast [Non-Targeted]\n        [381595] = true, -- Terros - Seismic Assault\n        [372315] = true, -- PC - Frost Spike\n        [372394] = true, -- PC - Lightning Bolt\n        [372027] = true, -- PC - Slashing Blaze\n        [374112] = true, -- Sennarth - Freezing Breath\n        [376851] = true, -- Dathea - Aerial Buffet\n        [385812] = true, -- Dathea - Aerial Slash\n        [376943] = true, -- Dathea - Cyclone [Non-Targeted]\n        [390548] = true, -- Kurog - Sundering Strike\n        [375870] = true, -- Diurna -  Mortal Stoneclaws\n        [378787] = true, -- Diurna - Crushing Stoneclaws\n        [375871] = true, -- Diurna - Wildfire [Non-Targeted]\n        [375873] = true, -- Diurna - Wildfire\n        [375716] = true, -- Diurna - Ice Barrage\n        [375653] = true, -- Diurna - Static Jolt\n        [375457] = true, -- Diurna - Chilling Tantrum [Non-Targeted]\n        [377658] = true, -- Raszageth - Electrified Jaws\n        [386410] = true, -- Raszageth - Thunderous Blast\n        \n        -- -- -- Mythic+\n        \n        -- -- Algeth'ar Academy\n        \n        [374343] = true, -- Echo of Doragosa - Energy Bomb\n        [388862] = true, -- Trash Surge\n        \n        -- -- Court of Starts\n        \n        [211406] = true, -- Trash - Firebolt\n        [209036] = true, -- Trash - Throw Torch\n        [373364] = true, -- Trash - Vampiric Claws\n        [209413] = true, -- Trash - Suppress\n        [211473] = true, -- Trash - Shadow Slash\n        \n        -- -- Halls of Valor\n        \n        [191976] = true, -- Hyrja - Arcing Bolt\n        [192288] = true, -- Trash - Searing Light\n        [198959] = true, -- Trash - Etch\n        [198962] = true, -- Trash - Shattered Rune\n        [198595] = true, -- Trash - Thunderous Bolt\n        \n        -- -- Ruby Life Pools\n        \n        [372808] = true, -- Melidrussa Frigid Shard\n        [373803] = true, -- Melidrussa Cold Claws\n        [371984] = true, -- Trash Icebolt\n        [384194] = true, -- Trash Cinderbolt\n        [385536] = true, -- Trash Flame Dance\n        [373869] = true, -- Trash Burning Touch\n        [392576] = true, -- Trash Thunder Bolt\n        \n        -- -- Shadowmoon Burial Grounds\n        \n        [152814] = true, -- Trash - Shadow Bolt\n        [156722] = true, -- Trash - Void Bolt\n        [398206] = true, -- Trash - Death Blast\n        [153524] = true, -- Trash - Plague Spit\n        [156776] = true, -- Trash - Rending Voidlash\n        \n        -- -- Temple of the Jade Serpent\n        \n        [397801] = true, -- Wise Mari - Hydrolance\n        [114571] = true, -- Lorewalker Stonestep - Agony\n        [106823] = true, -- Liu Flameheart - Serpent Strike\n        [106841] = true, -- Liu Flameheart - Jade Serpent Strike\n        [397888] = true, -- Trash - Hydrolance\n        [397931] = true, -- Trash - Dark Claw\n        [114646] = true, -- Trash - Haunting Gaze\n        [397914] = true, -- Trash - Defiling Mist\n        \n        -- -- The Azure Vault\n        \n        [374789] = true, -- Leymor - Infused Strike\n        [372222] = true, -- Azureblade - Azure Slash [Non-targeted]\n        [373932] = true, -- Azureblade - Illusionary Bolt\n        [384978] = true, -- Dragon - Strike] Dragon Strike\n        [371306] = true, -- Trash - Arcane Bolt\n        [377503] = true, -- Trash - Condensed Frost\n        [389804] = true, -- Trash - Heavy Tome\n        [370764] = true, -- Trash - Piercing Shards\n        \n        -- -- The Nokhud Offensive\n        \n        [384761] = true, -- The Raging Tempest - Wind Burst\n        [382670] = true, -- Teera and Maruuk - Gale Arrow [Non-targeted]\n        [376827] = true, -- Balakar Khan - Conductive Strike\n        [387613] = true, -- Trash - Death Bolt\n        [376829] = true, -- Trash - Thunder Strike\n        [381530] = true, -- Trash - Storm Shock\n        [386012] = true, -- Trash - Stormbolt\n        [376725] = true, -- Trash - Storm Bolt\n        [387127] = true  -- Trash - Chain Lightning\n    };\n    \n    envTable.interruptSpells = {\n        6552 -- Pummel\n    };\n    \n    envTable.castingStrata = modTable.config.stratas;\n    envTable.isWarrior = select(3, UnitClass(\"player\")) == 1;\n    \n    -- Function to apply the reflectable cast bar effects. Returns true if the effects were applied,\n    -- false otherwise.\n    envTable.ApplyReflectable = function (unitFrame, casterId)\n        local spellId = unitFrame.castBar.SpellID;\n        \n        -- IF  You are a warrior\n        -- AND The spell being cast is reflectable\n        -- AND The target is you\n        if envTable.isWarrior and envTable.reflectableSpells[spellId] and UnitIsUnit(casterId .. \"target\", \"player\") then\n            local _, duration = GetSpellCooldown(23920);\n            \n            -- IF Spell reflect is off CD\n            if duration == 0 then\n                Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorSelf);\n                -- Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarColorSelf);\n                return true; -- Effect was applied\n            end\n        end\n        \n        return false; -- No effects\n    end\n    \n    -- Function to apply the interruptible cast bar effects. Returns true if the effects were\n    -- applied, false otherwise.\n    envTable.ApplyInterruptible = function (unitFrame, casterId)\n        -- IF  The spell being cast is interruptible\n        -- AND The caster is an interruptible target\n        if unitFrame.castBar.CanInterrupt and UnitCanAttack(\"player\", casterId) then\n            -- Iterate through all the interrupt spells available to your current class.\n            for _, interruptId in ipairs(envTable.interruptSpells) do\n                local _, duration = GetSpellCooldown(interruptId);\n                -- IF An interrupt is off CD\n                if duration == 0 then\n                    unitFrame:SetFrameStrata(envTable.castingStrata);\n                    Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorInterrupt);\n                    Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarBorderColorInterrupt);\n                    return true; -- Effect was applied\n                end\n            end\n        end\n        \n        return false; -- No effects\n    end\nend",
						["Cast Start"] = "function (self, casterId, unitFrame, envTable, modTable)\n    if envTable.ApplyReflectable(unitFrame, casterId) then\n    elseif envTable.ApplyInterruptible(unitFrame, casterId) then\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    Plater.SetCastBarColor(unitFrame);\n    Plater.SetCastBarBorderColor(unitFrame);\n    Plater.RefreshNameplateStrata(unitFrame);\nend\n\n\n",
					},
					["Time"] = 1677634282,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
							["raid"] = true,
							["none"] = true,
						},
						["class"] = {
							["Enabled"] = true,
							["WARRIOR"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["71"] = true,
							["Enabled"] = true,
							["73"] = true,
							["72"] = true,
						},
					},
					["url"] = "https://wago.io/ACU9YCmh7/6",
					["Icon"] = 132361,
					["Enabled"] = false,
					["Revision"] = 345,
					["semver"] = "1.0.5",
					["Author"] = "Ragebucket-Sen'jin",
					["Desc"] = "A helpful collection of cast bar coloring conditions to make it obvious for when you can reflect or interrupt a spell.",
					["Prio"] = 99,
					["version"] = 6,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "unused1",
							["Value"] = "Reflectable Cast Settings",
							["Name"] = "Section 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "castBarColorSelf",
							["Value"] = {
								0, -- [1]
								0.89803928136826, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color: Targeting you, Spell Reflection off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of cast bar for reflectable spells targeting you. Only applies if you can cast Spell Reflection.",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "unused2",
							["Value"] = 0,
							["Name"] = "Blank 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Key"] = "unused3",
							["Value"] = "Interruptible Cast Settings",
							["Name"] = "Section 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 3,
							["Key"] = "stratas",
							["Value"] = "MEDIUM",
							["Name"] = "Casting Strata",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "When an enemy is casting a spell we can interrupt, change the strata of the unit frame to this configuration option. The strata will revert to the default after the cast ends.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castBarColorInterrupt",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.015686275437474, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color: Can interrupt, interrupt off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar for spells you can interrupt. This color is only applied if your interrupt is off cooldown.",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "castBarBorderColorInterrupt",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.047058828175068, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Border Color: Can interrupt, interrupt off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar border for spells you can interrupt. This color is only applied if your interrupt is off cooldown.",
						}, -- [7]
					},
					["Name"] = "War Interrupt + Spell Reflect",
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" | \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
					},
					["Hooks"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" | \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
					},
					["Time"] = 1677775283,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/UMY67A2bw/1",
					["Icon"] = 237031,
					["Enabled"] = true,
					["Revision"] = 98,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Health / Max Health (%)",
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        \n        -- Dungeons\n        [196642] = false, -- Hungry Lasher (Boss add)\n        [197398] = false, -- Hungry Lasher\n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["UID"] = "0x62f9521d664ad",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        \n        -- Dungeons\n        [196642] = false, -- Hungry Lasher (Boss add)\n        [197398] = false, -- Hungry Lasher\n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634238,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 458228,
					["Enabled"] = true,
					["Revision"] = 168,
					["semver"] = "",
					["Author"] = "Viashi-Argent Dawn",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "performance",
							["Value"] = true,
							["Name"] = "Performance",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "forceBlizz",
							["Value"] = false,
							["Name"] = "Force Blizzard",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
					},
					["Name"] = "Performance Units",
				}, -- [17]
				{
					["OptionsValues"] = {
						["kickReadyInTimeGraceTime"] = 0.099999994039536,
						["kickOutOfRangeColor"] = {
							1, -- [1]
							0.54901963472366, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["kickReadyInTimeColor"] = {
							1, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["specialColors"] = {
							{
								"116", -- [1]
								"yellow", -- [2]
							}, -- [1]
						},
						["noKickReadyColor"] = {
							1, -- [1]
							0.54901963472366, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["specialColorsForNonInterruptibleEnabled"] = true,
						["platerCastColorsEnabled"] = true,
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
						["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 or specId == 105 then\n                interruptIDs[106839] = true -- feral/guardian/resto\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            interruptIDs[116705] = true --WW/BM/MW\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            interruptIDs[96231] = true --prot/ret/holy\n            if specId == 66 then\n                interruptIDs[31935] = true --prot avenger's shield\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        elseif Plater.PlayerClass == \"EVOKER\" then\n            interruptIDs[351338] = true --quell talent\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 or specId == 105 then\n                interruptIDs[106839] = true -- feral/guardian/resto\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            interruptIDs[116705] = true --WW/BM/MW\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            interruptIDs[96231] = true --prot/ret/holy\n            if specId == 66 then\n                interruptIDs[31935] = true --prot avenger's shield\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        elseif Plater.PlayerClass == \"EVOKER\" then\n            interruptIDs[351338] = true --quell talent\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
					},
					["Time"] = 1677634103,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["SHAMAN"] = true,
							["MAGE"] = true,
							["DEATHKNIGHT"] = true,
							["PRIEST"] = true,
							["MONK"] = true,
							["HUNTER"] = true,
							["WARLOCK"] = true,
							["DEMONHUNTER"] = true,
							["PALADIN"] = true,
							["DRUID"] = true,
							["EVOKER"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/jHilJiXiY/40",
					["Icon"] = 132219,
					["Enabled"] = false,
					["Revision"] = 876,
					["semver"] = "1.3.0",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
					["Prio"] = 99,
					["version"] = 40,
					["PlaterCore"] = 1,
					["Name"] = "Interrupt not ready Cast Color",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option8",
							["Value"] = "General:",
							["Name"] = "General:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "noKickReadyColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick not Ready Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "kickReadyInTimeColor",
							["Value"] = {
								0.50196078431373, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick Ready in Time Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "kickOutOfRangeColor",
							["Value"] = {
								1, -- [1]
								0.54901960784314, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick out of Range Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "kickOutOfRangeEnabled",
							["Value"] = false,
							["Name"] = "Check 'Out Of Range'",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "kickReadyInTimeGraceTime",
							["Value"] = 0.5,
							["Name"] = "Reaction grace Time",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "specialColorsEnabled",
							["Value"] = false,
							["Name"] = "Enable special Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "platerCastColorsEnabled",
							["Value"] = false,
							["Name"] = "Enable Plater Cast Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "specialColorsForNonInterruptibleEnabled",
							["Value"] = false,
							["Name"] = "Use Cast Colors for not-interruptible",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Option 10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option7",
							["Value"] = "Spark:",
							["Name"] = "Spark:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showSpark",
							["Value"] = true,
							["Name"] = "Show Spark",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 4,
							["Key"] = "sparkWidth",
							["Value"] = 12,
							["Name"] = "Spark Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "sparkTexture",
							["Value"] = 5,
							["Name"] = "Spark Texure",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 7,
							["Key"] = "specialColors",
							["Value"] = {
								{
									"116", -- [1]
									"navy", -- [2]
								}, -- [1]
							},
							["Name"] = "Special Cast Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [16]
					},
				}, -- [18]
				{
					["OptionsValues"] = {
						["lowScale"] = 0.79971849918365,
						["midScale"] = 0.89680552482605,
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["UID"] = "0x6366dbeb1fda6285",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["Time"] = 1677634265,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/Ru_9FLVjI/15",
					["Icon"] = 1041231,
					["Enabled"] = true,
					["Revision"] = 1239,
					["semver"] = "1.0.14",
					["Author"] = "Causese-Valdrakken",
					["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
					["Prio"] = 99,
					["version"] = 15,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Initialization",
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "scale",
							["Value"] = true,
							["Name"] = "Enable Scaling",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to scale based on priority.",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for mid priority.",
							["Min"] = 0,
							["Key"] = "midScale",
							["Value"] = 0.75,
							["Name"] = "Mid prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for low priority.",
							["Min"] = 0,
							["Key"] = "lowScale",
							["Value"] = 0.5,
							["Name"] = "Low prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "color",
							["Value"] = false,
							["Name"] = "Enable Coloring",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to be colored based on priority.",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "midColor",
							["Value"] = {
								1, -- [1]
								0.92941182851791, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Mid prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for mid priority.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "lowColor",
							["Value"] = {
								0.49803924560547, -- [1]
								0.49803924560547, -- [2]
								0.49803924560547, -- [3]
								1, -- [4]
							},
							["Name"] = "Low prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for low priority.",
						}, -- [6]
					},
					["Name"] = "Priority based scaling",
				}, -- [19]
				{
					["OptionsValues"] = {
						["replaceName"] = false,
						["colorInterruptAvailable"] = {
							1, -- [1]
							0.95686280727386, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["castNameSize"] = 45,
						["colorInterruptSoon"] = {
							1, -- [1]
							0.95294123888016, -- [2]
							0.015686275437474, -- [3]
							1, -- [4]
						},
						["hideNameSolo"] = false,
						["colorNoInterrupt"] = {
							1, -- [1]
							0.50980395078659, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["colorProtected"] = {
							0.80784320831299, -- [1]
							0.29411765933037, -- [2]
							0.28627452254295, -- [3]
							1, -- [4]
						},
						["colorSecondaryInterrupt"] = {
							1, -- [1]
							0.0078431377187371, -- [2]
							0.78431379795074, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
						["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\",\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [8] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        }                                         \n    }   \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
					},
					["UID"] = "0x63cc19ce2df2342d",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
						["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\",\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [8] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        }                                         \n    }   \n    \nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1677634220,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/L6ZlsbPEC/9",
					["Icon"] = 429383,
					["Enabled"] = true,
					["Revision"] = 1237,
					["semver"] = "1.2.3",
					["Author"] = "Nimeshady-Zul'jin",
					["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
					["Prio"] = 99,
					["version"] = 9,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Feature - Custom cast bar coloring:",
							["Name"] = "CUSTOM CAST BAR COLORS",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showInterruptColor",
							["Value"] = true,
							["Name"] = "Enable custom colored enemy cast bars.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "showSecondaryInterrupts",
							["Value"] = true,
							["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "colorInterruptAvailable",
							["Value"] = {
								0.10980392992496, -- [1]
								0.63921570777893, -- [2]
								0.1843137294054, -- [3]
								1, -- [4]
							},
							["Name"] = "Color when my primary interrupt is available.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "colorInterruptSoon",
							["Value"] = {
								0.63921570777893, -- [1]
								0.61568629741669, -- [2]
								0.10980392992496, -- [3]
								1, -- [4]
							},
							["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "colorNoInterrupt",
							["Value"] = {
								0.61960786581039, -- [1]
								0.16862745583057, -- [2]
								0.28627452254295, -- [3]
								1, -- [4]
							},
							["Name"] = "Color when my primary interrupt is unavailable.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "colorSecondaryInterrupt",
							["Value"] = {
								0.10980392992496, -- [1]
								0.52156865596771, -- [2]
								0.63921570777893, -- [3]
								1, -- [4]
							},
							["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "colorProtected",
							["Value"] = {
								0.22352942824364, -- [1]
								0.22352942824364, -- [2]
								0.22352942824364, -- [3]
								1, -- [4]
							},
							["Name"] = "Color for casts that are protected/un-interruptable.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "colorTick",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.0078431377187371, -- [3]
								1, -- [4]
							},
							["Name"] = "Color of interrupt available tick. (Hover for more info)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Feature - Show name of target in the cast bar:",
							["Name"] = "Settings Target Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "showTargetName",
							["Value"] = true,
							["Name"] = "Show the name of cast targets in the cast bar.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "hideNameSolo",
							["Value"] = true,
							["Name"] = "Hide my name when not in a party.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "replaceName",
							["Value"] = true,
							["Name"] = "Show \"Me\" instead of my character name.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
							["Min"] = 30,
							["Key"] = "castNameSize",
							["Value"] = 60,
							["Name"] = "Maximum length of a cast name in %. Hover for more info.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option8",
							["Value"] = "Feature - Flash nameplates when a spell targets you:",
							["Name"] = "Settings Border Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Namplate Flash",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "nameplateFlash",
							["Value"] = false,
							["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
						}, -- [16]
						{
							["Type"] = 4,
							["Key"] = "hideNameplateFlashSolo",
							["Value"] = true,
							["Name"] = "Hide flash effect when not in a party.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing solo.",
						}, -- [17]
						{
							["Type"] = 4,
							["Key"] = "hideFlashAsTank",
							["Value"] = true,
							["Name"] = "Hide flash effect when I'm playing a tank specialization.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
						}, -- [18]
					},
					["Name"] = "Enhanced Enemy Castbar [Plater]",
				}, -- [20]
			},
			["last_news_time"] = 1675578720,
			["auras_per_row_auto"] = false,
			["cast_statusbar_fadeout_time"] = 0.4999999701976776,
			["aura_stack_size"] = 8,
			["auras_per_row_amount2"] = 2,
			["range_check_power_bar_alpha"] = 0.8999999761581421,
			["range_check_health_bar_alpha"] = 0.8499999642372131,
			["aura_height2"] = 17,
			["ghost_auras"] = {
				["enabled"] = true,
				["auras"] = {
					["DEATHKNIGHT"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["WARRIOR"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["SHAMAN"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["MAGE"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["PRIEST"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
							["589"] = true,
							["34914"] = true,
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["HUNTER"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["MONK"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["WARLOCK"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
							[980] = true,
							[172] = true,
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["DEMONHUNTER"] = {
						["19"] = {
						},
						["4"] = {
						},
						["9"] = {
						},
						["13"] = {
						},
						["15"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["12"] = {
						},
						["11"] = {
						},
						["10"] = {
						},
					},
					["PALADIN"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["DRUID"] = {
						["29"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["8"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["31"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
						["34"] = {
						},
						["28"] = {
						},
						["32"] = {
						},
						["9"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["15"] = {
						},
						["18"] = {
						},
						["33"] = {
						},
						["19"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["20"] = {
						},
						["30"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["EVOKER"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
					["ROGUE"] = {
						["10"] = {
						},
						["22"] = {
						},
						["12"] = {
						},
						["13"] = {
						},
						["26"] = {
						},
						["16"] = {
						},
						["8"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["18"] = {
						},
						["5"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["15"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["20"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
					},
				},
			},
			["aura_show_crowdcontrol"] = true,
			["health_cutoff"] = false,
			["aura_border_colors"] = {
				["enrage"] = {
					0.70196078431373, -- [1]
					0, -- [2]
					0.054901960784314, -- [3]
				},
				["steal_or_purge"] = {
					nil, -- [1]
					0.92549019607843, -- [2]
					1, -- [3]
				},
				["offensive"] = {
					nil, -- [1]
					0.65098039215686, -- [2]
					0.10196078431373, -- [3]
					0, -- [4]
				},
				["is_show_all"] = {
					0.70196078431373, -- [1]
					0.10196078431373, -- [2]
					0.10196078431373, -- [3]
				},
				["crowdcontrol"] = {
					1, -- [1]
					1, -- [2]
					1, -- [3]
				},
				["is_buff"] = {
					0.65098039215686, -- [1]
					0.011764705882353, -- [2]
					0.090196078431373, -- [3]
					0, -- [4]
				},
			},
			["castbar_target_anchor"] = {
				["y"] = -1.5,
				["x"] = -13,
			},
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["__TrashAt"] = 1677631998,
					["Time"] = 1673672847,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/-ny0jWQDT/2",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = true,
					["Revision"] = 205,
					["semver"] = "1.0.1",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Target Border Color",
					["LastHookEdited"] = "Nameplate Added",
					["Options"] = {
					},
				}, -- [1]
			},
			["extra_icon_timer_size"] = 11,
			["target_highlight_color"] = {
				0.9921568627451, -- [1]
				1, -- [2]
				0.97254901960784, -- [3]
			},
			["cast_statusbar_color_channeling"] = {
				1, -- [1]
				nil, -- [2]
				0.035294119268656, -- [3]
				0.96000000089407, -- [4]
			},
			["extra_icon_anchor"] = {
				["x"] = -0.5,
			},
			["extra_icon_wide_icon"] = false,
			["extra_icon_stack_outline"] = "OUTLINE",
			["range_check_alpha"] = 0.8999999761581421,
			["click_space"] = {
				nil, -- [1]
				21, -- [2]
			},
			["extra_icon_auras"] = {
				328501, -- [1]
				328986, -- [2]
				204490, -- [3]
			},
			["castbar_target_font"] = "Expressway",
			["semver"] = "3.7.1",
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["aura_frame2_anchor"] = {
				["y"] = 1.300003051757813,
				["x"] = -1.100006103515625,
				["side"] = 1,
			},
			["use_name_translit"] = true,
			["aura_alpha"] = 1,
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
			["auto_toggle_friendly"] = {
				["arena"] = true,
			},
			["indicator_faction"] = false,
			["extra_icon_height"] = 19,
			["aura_x_offset"] = 1.099990844726563,
			["first_run3"] = true,
			["transparency_behavior"] = 2,
			["spell_animations"] = false,
			["debuff_show_cc_border"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
			},
			["aura_stack_color"] = {
				nil, -- [1]
				0, -- [2]
				0.062745098039216, -- [3]
			},
			["aura_consolidate"] = true,
			["health_statusbar_bgtexture"] = "Details Flat",
			["indicator_raidmark_anchor"] = {
				["y"] = 7.819999694824219,
				["x"] = 0,
				["side"] = 12,
			},
			["extra_icon_width"] = 19,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						0.54117647058824, -- [1]
						0.43137254901961, -- [2]
					},
					["anothertank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["aggro"] = {
						0.74509805440903, -- [1]
						0.18823531270027, -- [2]
						0.11372549831867, -- [3]
					},
					["noaggro"] = {
						0.8666667342186, -- [1]
						0.43529415130615, -- [2]
					},
					["nocombat"] = {
						0.74509803921569, -- [1]
						0.18823529411765, -- [2]
						0.11372549019608, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.91372549019608, -- [2]
						0.22745098039216, -- [3]
					},
				},
			},
			["health_statusbar_texture"] = "Details Flat",
			["hook_auto_imported"] = {
				["Color Automation"] = 1,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Hide Neutral Units"] = 1,
				["Aura Reorder"] = 3,
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Bwonsamdi Reaping"] = 1,
				["Jaina Encounter"] = 6,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 2,
				["Extra Border"] = 2,
				["Targetting Alpha"] = 3,
				["Target Color"] = 3,
				["Combo Points"] = 6,
				["Monk Statue"] = 2,
			},
			["extra_icon_border_color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
			},
			["update_throttle"] = 0.33000001311302,
			["minor_width_scale"] = 0.99999994039536,
			["indicator_pet"] = false,
			["aura_frame1_anchor"] = {
				["y"] = 1.300003051757813,
				["x"] = 1.099990844726563,
				["side"] = 7,
			},
			["indicator_extra_raidmark"] = false,
			["cast_statusbar_bgcolor"] = {
				0.21176470588235, -- [1]
				0.21176470588235, -- [2]
				0.21176470588235, -- [3]
				0.90000000596046, -- [4]
			},
			["aura_timer_text_font"] = "Expressway",
			["aura_width"] = 20,
			["extra_icon_timer_font"] = "Expressway",
			["indicator_rare"] = false,
			["not_affecting_combat_alpha"] = 1,
			["auras_per_row_amount"] = 4,
			["cast_statusbar_color_finished"] = {
				0.27843137254902, -- [1]
				0.75294117647059, -- [2]
				0.23529411764706, -- [3]
			},
			["extra_icon_stack_font"] = "Expressway",
			["pet_width_scale"] = 0.99999994039536,
			["aura_height"] = 17,
			["non_targeted_alpha_enabled"] = true,
			["resources"] = {
				["scale"] = 0.79999995231628,
			},
			["cast_statusbar_bgtexture"] = "Details Flat",
			["aura2_x_offset"] = -1.100006103515625,
			["target_indicator"] = "Double Arrows",
			["target_shady_combat_only"] = false,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["health_statusbar_bgcolor"] = {
				0.21176472306252, -- [1]
				0.21176472306252, -- [2]
				0.21176472306252, -- [3]
				1, -- [4]
			},
			["pet_height_scale"] = 0.99999994039536,
			["range_check_cast_bar_alpha"] = 0.8999999761581421,
			["target_highlight_alpha"] = 0.3499999940395355,
			["cast_statusbar_use_fade_effects"] = false,
			["target_shady_alpha"] = 0,
			["hover_highlight_alpha"] = 0.5,
			["tap_denied_color"] = {
				0.46666666666667, -- [1]
				0.46666666666667, -- [2]
				0.46666666666667, -- [3]
			},
			["indicator_elite"] = false,
			["extra_icon_timer_outline"] = "OUTLINE",
			["aura_show_enrage"] = true,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateOverlapV"] = "1.5",
				["nameplateLargeTopInset"] = "0.03999999910593",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplatePersonalShowInCombat"] = "0",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateTargetBehindMaxDistance"] = "15",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.048449993133545",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "0.99656772613525",
				["nameplateOverlapH"] = "0.75",
				["nameplateShowFriends"] = "0",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateMotion"] = "1",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateMinScale"] = "1",
				["nameplateOccludedAlphaMult"] = "0.5",
				["nameplateOtherTopInset"] = "0.03999999910593",
				["nameplateOtherAtBase"] = "0",
				["nameplateSelfBottomInset"] = "0.19999998807907",
				["nameplateShowEnemyTotems"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateSelfAlpha"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "0",
				["ShowClassColorInNameplate"] = "1",
				["nameplateLargerScale"] = "1",
			},
			["aura_tracker"] = {
				["debuff"] = {
					315341, -- [1]
					207756, -- [2]
					280322, -- [3]
					340075, -- [4]
					316220, -- [5]
					280321, -- [6]
					319504, -- [7]
					256495, -- [8]
					190533, -- [9]
					345569, -- [10]
					347037, -- [11]
				},
				["buff_tracked"] = {
					["227931"] = true,
					["365338"] = true,
					["389808"] = true,
					["343502"] = false,
					["297133"] = true,
					["385528"] = true,
					["209859"] = true,
					["343503"] = true,
					["163689"] = true,
					["233210"] = true,
					["338510"] = false,
				},
				["buff"] = {
					273607, -- [1]
					283928, -- [2]
					311975, -- [3]
					343208, -- [4]
					197862, -- [5]
					66235, -- [6]
					344548, -- [7]
					189949, -- [8]
					343196, -- [9]
					317929, -- [10]
					259895, -- [11]
					290494, -- [12]
					327993, -- [13]
					322540, -- [14]
					332672, -- [15]
					321708, -- [16]
					305395, -- [17]
					41450, -- [18]
					200327, -- [19]
					290583, -- [20]
					320407, -- [21]
					236801, -- [22]
					194223, -- [23]
					333920, -- [24]
					74001, -- [25]
					212753, -- [26]
					175395, -- [27]
					197874, -- [28]
					200816, -- [29]
					196718, -- [30]
					173898, -- [31]
					315948, -- [32]
					122783, -- [33]
					322108, -- [34]
					343150, -- [35]
					296497, -- [36]
					344363, -- [37]
					205202, -- [38]
					255016, -- [39]
					289626, -- [40]
					337851, -- [41]
					228048, -- [42]
					341857, -- [43]
					23333, -- [44]
					198144, -- [45]
					292152, -- [46]
					321702, -- [47]
					29166, -- [48]
					197061, -- [49]
					215776, -- [50]
					209194, -- [51]
					272682, -- [52]
					212640, -- [53]
					216451, -- [54]
					79542, -- [55]
					187827, -- [56]
					124974, -- [57]
					207812, -- [58]
					212295, -- [59]
					34976, -- [60]
					196555, -- [61]
					129035, -- [62]
					316849, -- [63]
					265314, -- [64]
					69369, -- [65]
					321745, -- [66]
					316828, -- [67]
					278454, -- [68]
					285272, -- [69]
					279043, -- [70]
					203048, -- [71]
					198817, -- [72]
					316834, -- [73]
					344878, -- [74]
					320379, -- [75]
					335255, -- [76]
					231627, -- [77]
					328767, -- [78]
					198111, -- [79]
					125174, -- [80]
					317138, -- [81]
					322110, -- [82]
					284508, -- [83]
					236439, -- [84]
					328682, -- [85]
					325208, -- [86]
					185422, -- [87]
					317138, -- [88]
					213602, -- [89]
					323048, -- [90]
				},
				["debuff_tracked"] = {
					["335372"] = false,
					["323059"] = false,
				},
				["debuff_banned"] = {
					["331653"] = true,
					["294934"] = true,
					["255909"] = true,
					["360277"] = true,
					["353354"] = true,
					["324260"] = true,
					["356329"] = true,
					["5760"] = true,
					["356372"] = false,
					["394021"] = true,
					["256148"] = true,
					["294909"] = true,
					["204242"] = true,
					["391568"] = true,
					["279416"] = true,
					["273836"] = true,
					["358379"] = true,
					["345466"] = true,
					["314113"] = true,
					["169623"] = true,
					["286581"] = true,
					["281242"] = true,
					["206760"] = true,
					["394328"] = true,
					["354052"] = true,
					["6343"] = true,
					["352534"] = true,
					["389788"] = false,
					["392388"] = true,
					["331016"] = false,
					["295367"] = true,
					["321330"] = true,
				},
				["buff_banned"] = {
					["286145"] = true,
					["318486"] = true,
					["323961"] = true,
					["333553"] = true,
					["284471"] = true,
					["327416"] = false,
					["396113"] = true,
					["396106"] = true,
					["302564"] = true,
					["292664"] = true,
					["61574"] = true,
					["303380"] = true,
					["343613"] = false,
					["333575"] = true,
					["343553"] = true,
					["396109"] = true,
					["5760"] = true,
					["216777"] = true,
					["333579"] = true,
					["236502"] = true,
					["61573"] = true,
					["206150"] = true,
					["311571"] = true,
					["209746"] = true,
					["284882"] = true,
					["268710"] = true,
					["317602"] = true,
					["266499"] = true,
					["396098"] = true,
				},
			},
			["show_health_prediction"] = false,
			["login_counter"] = 45568,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				1, -- [1]
				1, -- [2]
			},
			["extra_icon_caster_font"] = "Expressway",
			["target_highlight"] = false,
			["cast_statusbar_color"] = {
				nil, -- [1]
				1, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["extra_icon_auras_mine"] = {
				["Plague Bomb"] = false,
				["209859"] = false,
				["Serrated Bone Spike"] = true,
				["Violent Detonation"] = false,
			},
			["bossmod_aura_height"] = 32.105155944824,
			["extra_icon_show_offensive_border"] = {
				nil, -- [1]
				0.65098039215686, -- [2]
				0.10196078431373, -- [3]
			},
			["aura_stack_font"] = "Expressway",
			["patch_version"] = 24,
			["range_check_buffs_alpha"] = 0.8999999761581421,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 9,
			["cast_statusbar_color_interrupted"] = {
				0.8, -- [1]
				0.30196078431373, -- [2]
				0.30196078431373, -- [3]
			},
			["aura_sort"] = true,
			["number_region_first_run"] = true,
			["target_shady_enabled"] = false,
			["target_highlight_height"] = 15,
			["version"] = 85,
			["aura_grow_direction"] = 1,
			["aura_width2"] = 20,
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.1000000238419,
				},
			},
			["range_check_enabled"] = false,
			["extra_icon_use_blizzard_border_color"] = false,
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Aura - Invalidate Unit"] = 1,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit Power"] = 1,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Fixate On You"] = 11,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Cast - Very Important"] = 15,
				["Aura - Buff Alert"] = 15,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Important"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Add - Explode on Die [P]"] = 1,
				["Color Change"] = 1,
				["Spiteful Affix"] = 3,
				["Countdown"] = 11,
				["Auto Set Skull"] = 11,
				["Cast - Quick Flash"] = 2,
				["Add - Non Elite Trash [P]"] = 4,
				["Unit - Health Markers"] = 12,
				["Aura Border Color"] = 1,
				["Cast - Stop Casting"] = 4,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Explosion Affix M+"] = 14,
				["Blink by Time Left"] = 1,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Show Energy"] = 11,
			},
			["dps"] = {
				["colors"] = {
					["notontank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["noaggro"] = {
						0.74509805440903, -- [1]
						0.18823531270027, -- [2]
						0.11372549831867, -- [3]
					},
					["aggro"] = {
						0.86666666666667, -- [1]
						0.43529411764706, -- [2]
					},
				},
			},
			["aura2_grow_direction"] = 3,
			["indicator_raidmark_scale"] = 0.8499999642372131,
			["color_override_colors"] = {
				[3] = {
					0.74509803921569, -- [1]
					0.18823529411765, -- [2]
					0.11372549019608, -- [3]
				},
				[4] = {
					1, -- [1]
					0.79607843137255, -- [2]
					0.2078431372549, -- [3]
				},
			},
			["range_check_alpha_friendlies"] = 1,
			["script_banned_user"] = {
				["Player-3674-08A5D7A3"] = true,
			},
			["castbar_target_text_size"] = 9,
			["extra_icon_show_purge_border"] = {
				nil, -- [1]
				0.92549019607843, -- [2]
			},
			["auto_toggle_friendly_enabled"] = true,
			["cast_statusbar_spark_width"] = 10,
			["npc_colors"] = {
				[134139] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198716] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196798] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134012] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136186] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196671] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180431] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115407] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195265] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184140] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168156] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165471] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173016] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180433] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161124] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131585] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131009] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197697] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132481] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176598] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164578] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135167] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197698] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175576] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199233] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[126918] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196548] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135552] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[130435] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135169] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[83761] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178008] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[142587] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168418] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[200387] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165222] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198214] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127879] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168420] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165479] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130437] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192333] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134150] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[83763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131849] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[128967] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75899] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199368] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134024] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168934] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190034] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[160495] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[157810] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196045] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194895] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[83765] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128969] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177889] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134284] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[194897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164463] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114584] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134158] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172265] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150143] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177892] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165872] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168942] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180323] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190426] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162038] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150146] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129548] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[134418] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[97068] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75713] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180070] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138255] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[162040] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195927] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81212] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150276] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[83578] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195928] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135699] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[97197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190686] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195929] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75459] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[118489] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[170483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98285] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168949] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[190688] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168310] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133912] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136470] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[75652] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[155908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129232] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179821] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83389] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157571] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173044] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[154758] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[193760] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[118491] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115486] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157572] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114783] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[105704] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166396] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83390] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129553] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[180335] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162049] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[77700] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196576] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180336] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[170490] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191206] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134174] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[115488] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163458] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162691] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122969] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[197985] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163459] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83392] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[178165] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197219] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165762] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131492] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[76104] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81283] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[86526] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135329] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81603] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[166275] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196198] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198500] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122971] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166276] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168578] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150292] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198501] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162057] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150165] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198502] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135204] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[122972] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[170882] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[99891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[139425] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180473] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196202] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[138019] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164873] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122973] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75979] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196203] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186741] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150169] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150297] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[174210] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[182778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165515] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134058] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163086] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173189] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173190] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187768] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[153882] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129370] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[151325] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[153755] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[189816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188026] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168717] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144293] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183423] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165137] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187771] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139946] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168718] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[144294] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165010] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[200943] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[132530] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191225] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183425] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154014] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144296] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179334] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132532] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139949] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[130012] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163862] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190588] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[191739] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179847] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144298] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137521] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176523] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133685] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[190206] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180104] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114796] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196856] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96574] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198263] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190207] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165911] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[188673] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104247] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[130909] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135989] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154020] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165529] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191232] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165913] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192767] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114542] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115757] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155812] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177807] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166299] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[56792] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199547] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164510] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171799] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167963] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180495] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[166301] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114544] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155432] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[199549] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167964] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122984] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[166302] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155433] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[167965] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104251] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163618] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167967] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189706] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[165410] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163620] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83025] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189707] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171805] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168992] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196102] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188302] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[83026] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114803] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81236] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177817] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135235] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[82579] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151476] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114804] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136643] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[194315] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130661] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[194316] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163882] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195851] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173729] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135239] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[150712] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[115765] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136391] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156212] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151353] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135241] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156213] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133835] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155830] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[183707] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[182045] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81432] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155831] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[187033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168747] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130025] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163121] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101637] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168109] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192789] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168365] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115640] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130026] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[135246] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[87252] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96587] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176551] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135759] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144071] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[130027] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[59547] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196117] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163126] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165556] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134994] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131670] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171184] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[188703] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168627] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192796] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135764] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[115388] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197145] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198424] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164921] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[156226] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188067] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168886] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134232] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[133593] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[157634] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192800] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166970] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[82590] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[152009] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[197149] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[141939] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[172981] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166971] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180348] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[152905] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136665] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[137591] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[197406] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168153] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164926] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134364] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[151657] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[136735] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199124] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166589] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114624] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197535] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[185032] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190174] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198047] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[76446] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[65317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178141] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189555] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[178171] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[76518] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176565] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177716] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81279] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[101326] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165824] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167998] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198503] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131586] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[104300] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180432] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135007] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135263] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[136139] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[164707] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131666] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[162039] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163524] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114626] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131587] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[174773] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179841] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195877] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[95842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131812] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164737] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180864] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191847] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[139800] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114317] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131685] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[198308] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114627] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129601] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[155434] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[183033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195930] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115020] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134990] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[196263] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167607] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190381] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150160] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178139] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115395] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135846] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[127799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[80805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[186740] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167876] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199717] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[138465] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198326] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134629] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167493] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170690] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130485] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[127480] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[104270] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168882] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155090] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176573] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155824] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190128] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114629] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169924] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178392] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167111] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136549] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[151127] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131818] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129527] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168007] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179388] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59553] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176575] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[191164] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176959] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169927] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[169159] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[133482] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[87329] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137830] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[96664] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[141283] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127482] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167612] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[132491] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[156245] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155094] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[116549] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164557] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[141284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[80936] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200137] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[156157] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150168] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115402] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[141285] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130488] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129529] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[95834] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155221] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[189878] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[154744] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164506] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114632] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129367] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[198702] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178630] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[191230] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168396] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180474] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133870] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[179010] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127484] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[59552] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[151773] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196115] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164929] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[187154] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114633] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[80938] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[88163] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162047] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157017] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127111] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164562] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198577] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168594] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[175861] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162133] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165919] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198868] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164563] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114634] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[197799] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[179269] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175550] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171341] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190690] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114266] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167113] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127486] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[151649] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[165076] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131445] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129788] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[59873] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168318] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176521] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175992] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[185537] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171343] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161241] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[115019] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168658] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194990] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[82597] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198709] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114316] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[75506] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[199325] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104278] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164567] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198311] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168443] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172021] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[105715] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[161243] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[187969] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197146] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163128] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127488] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134390] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[193373] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161244] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[179842] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180015] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171376] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115642] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[138254] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[183495] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150253] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[127497] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128434] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131677] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176974] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168425] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180429] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[162099] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[32666] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175517] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180091] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[170480] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134137] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[114334] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183497] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[152898] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[174197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[141938] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150250] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131850] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[187155] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129600] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[114319] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115406] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150251] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177808] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
			},
		},
	},
	["profileKeys"] = {
		["Atrocitys - Illidan"] = "AtrocityUI",
		["Atrocitysix - Illidan"] = "AtrocityUI",
		["Atrocityjr - Illidan"] = "AtrocityUI",
		["Atrocitymagi - Illidan"] = "AtrocityUI",
		["Atrocitydr - Illidan"] = "AtrocityUI",
		["Atrocityx - Illidan"] = "AtrocityUI",
		["Atrocityr - Illidan"] = "AtrocityUI",
		["Atrocityxe - US Mythic Dungeons"] = "AtrocityUI",
		["Atrocitydk - Illidan"] = "AtrocityUI",
		["Atrocitysp - Illidan"] = "AtrocityUI",
		["Atrocitywar - Illidan"] = "AtrocityUI",
		["Atrocitywarr - Illidan"] = "AtrocityUI",
		["Atrocitytres - Illidan"] = "AtrocityUI",
		["Atrocityskye - Mal'Ganis"] = "AtrocityUI",
		["Atrocityev - Illidan"] = "AtrocityUI",
		["Atrocityloki - Mal'Ganis"] = "AtrocityUI",
		["Atrocityhunt - Illidan"] = "AtrocityUI",
		["Atrocityw - Illidan"] = "AtrocityUI",
		["Atrocitysake - Mal'Ganis"] = "AtrocityUI",
		["Atrocityp - Illidan"] = "AtrocityUI",
		["Atrocitywl - Mal'Ganis"] = "Default",
		["Atrocityfour - Illidan"] = "AtrocityUI",
		["Atrocity - Illidan"] = "AtrocityUI",
		["Atrocitywl - Illidan"] = "AtrocityUI",
		["Padmaster - Illidan"] = "AtrocityUI",
		["Atrocitysoju - Mal'Ganis"] = "AtrocityUI",
		["Atrocitytwo - Illidan"] = "AtrocityUI",
		["Atrocitydh - Illidan"] = "AtrocityUI",
		["Atrocityxe - Mal'Ganis"] = "AtrocityUI",
		["Atrocityfive - Illidan"] = "AtrocityUI",
		["Atrocitykfk - Illidan"] = "AtrocityUI",
		["Atrocity - US Mythic Dungeons"] = "AtrocityUI",
	},
	["captured_casts"] = {
		[329172] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[413131] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[376272] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191225,
		},
		[396751] = {
			["source"] = "Luumak the Insatiable",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195971,
		},
		[339415] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[58053] = {
			["npcID"] = 30189,
		},
		[368085] = {
			["npcID"] = 183722,
		},
		[394706] = {
			["source"] = "Unstable Frost",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198702,
		},
		[404945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winglord Iyazael",
			["npcID"] = 199401,
		},
		[392659] = {
			["npcID"] = 194224,
		},
		[218871] = {
			["npcID"] = 152500,
		},
		[228086] = {
			["npcID"] = 114584,
		},
		[392660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Hornswog",
			["npcID"] = 187111,
		},
		[320989] = {
			["npcID"] = 156561,
		},
		[347610] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[390613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarglebone",
			["npcID"] = 197344,
		},
		[376279] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["encounterID"] = 2639,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190496,
		},
		[329181] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[384471] = {
			["npcID"] = 191672,
		},
		[320991] = {
			["npcID"] = 162038,
		},
		[300514] = {
			["npcID"] = 150146,
		},
		[170751] = {
			["npcID"] = 156158,
		},
		[392665] = {
			["npcID"] = 187258,
		},
		[355806] = {
			["npcID"] = 179891,
		},
		[349663] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176556,
			["encounterID"] = 2441,
		},
		[339425] = {
			["npcID"] = 173447,
		},
		[384476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Longbow",
			["npcID"] = 192789,
		},
		[218875] = {
			["npcID"] = 152500,
		},
		[318949] = {
			["npcID"] = 163894,
		},
		[386526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nullmagic Hornswog",
			["npcID"] = 187246,
		},
		[331237] = {
			["npcID"] = 162763,
		},
		[353763] = {
			["npcID"] = 179135,
		},
		[355811] = {
			["npcID"] = 180031,
		},
		[167683] = {
			["npcID"] = 83687,
		},
		[321000] = {
			["npcID"] = 177134,
		},
		[390624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarglebone",
			["npcID"] = 197344,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[347623] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[300525] = {
			["npcID"] = 150142,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[310765] = {
			["npcID"] = 159677,
		},
		[353769] = {
			["npcID"] = 179135,
		},
		[396774] = {
			["npcID"] = 187209,
		},
		[333294] = {
			["npcID"] = 169893,
		},
		[396775] = {
			["npcID"] = 187209,
		},
		[321009] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[323057] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[167688] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 82721,
			["encounterID"] = 1732,
		},
		[265721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terrorachna",
			["npcID"] = 200349,
		},
		[392682] = {
			["source"] = "Jadzigeth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188447,
		},
		[323059] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164804,
		},
		[366062] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[384492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Beastmaster",
			["npcID"] = 192794,
		},
		[394731] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Earth",
			["npcID"] = 198709,
		},
		[396779] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[333299] = {
			["npcID"] = 169893,
		},
		[384493] = {
			["npcID"] = 184657,
		},
		[396780] = {
			["source"] = "Rimebound Subjugator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191658,
		},
		[339444] = {
			["npcID"] = 173276,
		},
		[392686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gamgus",
			["npcID"] = 194240,
		},
		[172810] = {
			["npcID"] = 81603,
		},
		[323064] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[386546] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 186741,
		},
		[355830] = {
			["npcID"] = 179893,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[396786] = {
			["npcID"] = 191654,
		},
		[199433] = {
			["source"] = "Stormfang Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187931,
		},
		[296447] = {
			["npcID"] = 152644,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Strife",
			["encounterID"] = 1417,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59051,
		},
		[294401] = {
			["npcID"] = 168102,
		},
		[366074] = {
			["npcID"] = 183927,
		},
		[300547] = {
			["npcID"] = 150142,
		},
		[321025] = {
			["npcID"] = 157754,
		},
		[169744] = {
			["npcID"] = 84878,
		},
		[366077] = {
			["npcID"] = 183925,
		},
		[394746] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Liskron the Dazzling",
			["npcID"] = 193273,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1870,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[372223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonetender",
			["npcID"] = 189265,
		},
		[392701] = {
			["source"] = "Zerimek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188451,
		},
		[394749] = {
			["source"] = "Unstable Storm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198716,
		},
		[343556] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[386559] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["npcID"] = 189727,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2617,
		},
		[396798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ohn'ir Windcaster",
			["npcID"] = 199498,
		},
		[166675] = {
			["npcID"] = 80937,
		},
		[167699] = {
			["npcID"] = 83803,
		},
		[372226] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonetender",
			["npcID"] = 189265,
		},
		[329224] = {
			["npcID"] = 168022,
		},
		[275983] = {
			["npcID"] = 157571,
		},
		[361989] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[275984] = {
			["npcID"] = 166936,
		},
		[331274] = {
			["npcID"] = 167923,
		},
		[331275] = {
			["npcID"] = 167533,
		},
		[269843] = {
			["encounterName"] = "Unbound Abomination",
			["source"] = "Unbound Abomination",
			["encounterID"] = 2123,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133007,
		},
		[364040] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 184140,
			["encounterID"] = 2553,
		},
		[300560] = {
			["npcID"] = 150142,
		},
		[321038] = {
			["npcID"] = 162039,
		},
		[396805] = {
			["npcID"] = 192759,
		},
		[409093] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[396807] = {
			["npcID"] = 192759,
		},
		[366091] = {
			["npcID"] = 181011,
		},
		[382474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decay Speaker",
			["npcID"] = 186191,
		},
		[341520] = {
			["npcID"] = 173973,
		},
		[318995] = {
			["npcID"] = 155945,
		},
		[265754] = {
			["npcID"] = 125458,
		},
		[384524] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[394763] = {
			["source"] = "Private Shikzar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193127,
		},
		[396812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Scepter",
			["npcID"] = 196576,
		},
		[351762] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[394765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morgg",
			["npcID"] = 189244,
		},
		[260879] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[278044] = {
			["source"] = "Wrathful Orchid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186321,
		},
		[396814] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[325143] = {
			["npcID"] = 157212,
		},
		[329239] = {
			["npcID"] = 163882,
		},
		[331288] = {
			["npcID"] = 167532,
		},
		[175899] = {
			["npcID"] = 81272,
		},
		[345623] = {
			["npcID"] = 165824,
		},
		[384531] = {
			["encounterName"] = "Gutshot",
			["source"] = "Rotfang Hyena",
			["npcID"] = 194745,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2567,
		},
		[366102] = {
			["npcID"] = 181011,
		},
		[392724] = {
			["npcID"] = 188447,
		},
		[372247] = {
			["source"] = "Duskpaw Hidestitcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187941,
		},
		[345627] = {
			["npcID"] = 159174,
		},
		[357915] = {
			["npcID"] = 177903,
		},
		[368155] = {
			["npcID"] = 185505,
		},
		[319010] = {
			["npcID"] = 161917,
		},
		[396825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 195836,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Volatile Spark",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194999,
		},
		[378397] = {
			["npcID"] = 187322,
		},
		[357920] = {
			["npcID"] = 179684,
		},
		[321061] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[392733] = {
			["npcID"] = 192637,
		},
		[392734] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Pillager",
			["npcID"] = 199374,
		},
		[394782] = {
			["source"] = "Ty'foon the Ascended",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191354,
		},
		[407069] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[192288] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["npcID"] = 97202,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[405022] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[368163] = {
			["npcID"] = 178229,
		},
		[329256] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169271,
			["encounterID"] = 2405,
		},
		[364068] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183666,
			["encounterID"] = 2546,
		},
		[370212] = {
			["npcID"] = 190767,
		},
		[331305] = {
			["npcID"] = 161599,
		},
		[357926] = {
			["npcID"] = 177336,
		},
		[392738] = {
			["npcID"] = 186660,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[325163] = {
			["npcID"] = 171772,
		},
		[368166] = {
			["npcID"] = 183814,
		},
		[372262] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonesplitter",
			["npcID"] = 189467,
		},
		[396836] = {
			["npcID"] = 194798,
		},
		[319022] = {
			["npcID"] = 158259,
		},
		[364073] = {
			["npcID"] = 184735,
		},
		[351787] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 177594,
		},
		[353835] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[359979] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[353836] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[357932] = {
			["npcID"] = 178810,
		},
		[362028] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[355887] = {
			["npcID"] = 177293,
		},
		[325171] = {
			["npcID"] = 157212,
		},
		[394795] = {
			["npcID"] = 193443,
		},
		[355888] = {
			["npcID"] = 177807,
		},
		[284217] = {
			["npcID"] = 144564,
		},
		[205605] = {
			["npcID"] = 166137,
		},
		[331316] = {
			["npcID"] = 167538,
		},
		[284218] = {
			["npcID"] = 144564,
		},
		[335412] = {
			["npcID"] = 178660,
		},
		[314935] = {
			["npcID"] = 160409,
		},
		[357938] = {
			["npcID"] = 177336,
		},
		[400941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Bones",
			["npcID"] = 203472,
		},
		[402989] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[173866] = {
			["npcID"] = 79230,
		},
		[183081] = {
			["npcID"] = 165793,
		},
		[394800] = {
			["source"] = "Council Earthcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198500,
		},
		[284223] = {
			["npcID"] = 144564,
		},
		[394802] = {
			["source"] = "Council Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198502,
		},
		[357943] = {
			["npcID"] = 180013,
		},
		[327227] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
		},
		[405042] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[357944] = {
			["npcID"] = 179768,
		},
		[372279] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[392757] = {
			["npcID"] = 195094,
		},
		[396854] = {
			["source"] = "Sundered Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188173,
		},
		[325183] = {
			["npcID"] = 171622,
		},
		[355900] = {
			["npcID"] = 177807,
		},
		[316993] = {
			["npcID"] = 167443,
		},
		[396856] = {
			["npcID"] = 195915,
		},
		[308803] = {
			["npcID"] = 158259,
		},
		[327233] = {
			["encounterName"] = "Globgrog",
			["npcID"] = 168393,
			["encounterID"] = 2382,
		},
		[323138] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[378428] = {
			["npcID"] = 187082,
		},
		[366142] = {
			["npcID"] = 184651,
		},
		[351808] = {
			["npcID"] = 176577,
		},
		[394811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seeker Teryx",
			["npcID"] = 193188,
		},
		[153395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carrion Worm",
			["npcID"] = 76057,
		},
		[366143] = {
			["npcID"] = 184651,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[357953] = {
			["npcID"] = 180013,
		},
		[396861] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Golem",
			["npcID"] = 190779,
		},
		[347716] = {
			["npcID"] = 176394,
		},
		[296523] = {
			["npcID"] = 152708,
		},
		[298571] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153756,
			["encounterID"] = 2312,
		},
		[327240] = {
			["npcID"] = 165911,
		},
		[339527] = {
			["npcID"] = 173469,
		},
		[374339] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Refti Defender",
			["npcID"] = 190340,
		},
		[355910] = {
			["npcID"] = 178666,
		},
		[360006] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[339529] = {
			["npcID"] = 173448,
		},
		[366150] = {
			["npcID"] = 180906,
		},
		[347721] = {
			["npcID"] = 176396,
		},
		[333387] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[212784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[362056] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 181447,
			["encounterID"] = 2529,
		},
		[323149] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[374343] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[192307] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["npcID"] = 95833,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[380487] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["encounterID"] = 2639,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190496,
		},
		[327246] = {
			["npcID"] = 167524,
		},
		[355915] = {
			["npcID"] = 177816,
		},
		[191284] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["npcID"] = 94960,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[321105] = {
			["npcID"] = 168591,
		},
		[347726] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[162617] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77816,
			["encounterID"] = 1715,
		},
		[357967] = {
			["npcID"] = 178897,
		},
		[394827] = {
			["source"] = "Windseeker Avash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192045,
		},
		[325205] = {
			["npcID"] = 166936,
		},
		[376399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Drake",
			["npcID"] = 192188,
		},
		[396877] = {
			["npcID"] = 196155,
		},
		[335445] = {
			["npcID"] = 180032,
		},
		[364114] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[294491] = {
			["npcID"] = 186479,
		},
		[386640] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Looter",
			["npcID"] = 187242,
		},
		[396879] = {
			["npcID"] = 196155,
		},
		[370259] = {
			["npcID"] = 187322,
		},
		[294493] = {
			["npcID"] = 186464,
		},
		[394833] = {
			["npcID"] = 187937,
		},
		[172860] = {
			["npcID"] = 83025,
		},
		[396882] = {
			["npcID"] = 196155,
		},
		[191290] = {
			["npcID"] = 76642,
		},
		[372310] = {
			["npcID"] = 188447,
		},
		[384597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Warden",
			["npcID"] = 193293,
		},
		[378454] = {
			["npcID"] = 187082,
		},
		[355929] = {
			["npcID"] = 177803,
		},
		[319070] = {
			["npcID"] = 163891,
		},
		[323166] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[327262] = {
			["npcID"] = 167524,
		},
		[394838] = {
			["npcID"] = 193229,
		},
		[374361] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[347741] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[366171] = {
			["npcID"] = 184952,
		},
		[409174] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incarnation of Entropy",
			["npcID"] = 203811,
		},
		[372315] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187771,
		},
		[357981] = {
			["npcID"] = 177562,
		},
		[355934] = {
			["npcID"] = 177817,
		},
		[382555] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bracken Warscourge",
			["npcID"] = 185529,
		},
		[374365] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["npcID"] = 181861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[409177] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Entropic Hatred",
			["npcID"] = 203809,
		},
		[321124] = {
			["npcID"] = 156815,
		},
		[185152] = {
			["npcID"] = 157820,
		},
		[290411] = {
			["npcID"] = 144536,
		},
		[357987] = {
			["npcID"] = 178757,
		},
		[382561] = {
			["npcID"] = 189654,
		},
		[362084] = {
			["npcID"] = 181324,
		},
		[386658] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[388706] = {
			["npcID"] = 187819,
		},
		[252730] = {
			["npcID"] = 126493,
		},
		[327274] = {
			["npcID"] = 167524,
		},
		[329322] = {
			["npcID"] = 155830,
		},
		[366182] = {
			["npcID"] = 183498,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[366183] = {
			["npcID"] = 183498,
		},
		[355945] = {
			["npcID"] = 179940,
		},
		[183108] = {
			["npcID"] = 193292,
		},
		[329325] = {
			["npcID"] = 155831,
		},
		[366185] = {
			["npcID"] = 183499,
		},
		[329326] = {
			["npcID"] = 155831,
		},
		[355947] = {
			["npcID"] = 179802,
		},
		[366187] = {
			["npcID"] = 183499,
		},
		[400999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonesifter Marwak",
			["npcID"] = 200681,
		},
		[294517] = {
			["npcID"] = 151816,
		},
		[337520] = {
			["npcID"] = 159412,
		},
		[355950] = {
			["npcID"] = 178029,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["source"] = "Ner'zhul",
			["npcID"] = 76407,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1682,
		},
		[343664] = {
			["npcID"] = 162452,
		},
		[290423] = {
			["npcID"] = 144536,
		},
		[366190] = {
			["npcID"] = 183495,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[396907] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Yu'lon",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56762,
		},
		[321141] = {
			["npcID"] = 156562,
		},
		[394861] = {
			["npcID"] = 193229,
		},
		[323190] = {
			["npcID"] = 163121,
		},
		[384623] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Blacksmith",
			["npcID"] = 189471,
		},
		[339573] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[341621] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[382578] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Guardian",
			["npcID"] = 184131,
		},
		[366197] = {
			["npcID"] = 183500,
		},
		[294526] = {
			["npcID"] = 151817,
		},
		[403057] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[341625] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[337530] = {
			["npcID"] = 158259,
		},
		[366199] = {
			["npcID"] = 183495,
		},
		[329340] = {
			["npcID"] = 165410,
		},
		[394869] = {
			["source"] = "Boneshaper Jardak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188693,
		},
		[335485] = {
			["npcID"] = 179029,
		},
		[355963] = {
			["npcID"] = 152594,
		},
		[358011] = {
			["npcID"] = 178789,
		},
		[384633] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["npcID"] = 186116,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2567,
		},
		[294533] = {
			["npcID"] = 151817,
		},
		[347775] = {
			["npcID"] = 176395,
		},
		[163665] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80805,
			["encounterID"] = 1748,
		},
		[360064] = {
			["npcID"] = 184216,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Image of Advisor Melandrus",
			["npcID"] = 105754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1870,
		},
		[396925] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197149,
		},
		[325254] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["encounterID"] = 2362,
			["npcID"] = 162102,
		},
		[171858] = {
			["npcID"] = 177877,
		},
		[331398] = {
			["npcID"] = 170147,
		},
		[401022] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[382593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cruel Bonecrusher",
			["npcID"] = 186206,
		},
		[335495] = {
			["npcID"] = 180032,
		},
		[370307] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[272016] = {
			["npcID"] = 154014,
		},
		[325258] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[409216] = {
			["source"] = "Sundered Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198872,
		},
		[331402] = {
			["npcID"] = 180028,
		},
		[358023] = {
			["npcID"] = 180474,
		},
		[409217] = {
			["source"] = "Sundered Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198872,
		},
		[390788] = {
			["source"] = "Chief Grrlgllmesh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186678,
		},
		[388741] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Gravestirrer",
			["npcID"] = 189928,
		},
		[386694] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormsurge Totem",
			["npcID"] = 194897,
		},
		[398981] = {
			["source"] = "Stalwart Broodwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198263,
		},
		[355979] = {
			["npcID"] = 177804,
		},
		[384648] = {
			["source"] = "Gnarls",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197354,
		},
		[360076] = {
			["npcID"] = 184061,
		},
		[388745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Icy Blue Crab",
			["npcID"] = 197862,
		},
		[337552] = {
			["npcID"] = 162853,
		},
		[398985] = {
			["source"] = "Broodguardian Ziruss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198214,
		},
		[335505] = {
			["npcID"] = 179108,
		},
		[353935] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[388747] = {
			["source"] = "Boggy Bullfrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193699,
		},
		[257870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Buccaneer",
			["npcID"] = 130011,
		},
		[394891] = {
			["source"] = "Braekkas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196855,
		},
		[331412] = {
			["npcID"] = 177130,
		},
		[337556] = {
			["npcID"] = 162853,
		},
		[319127] = {
			["npcID"] = 170335,
		},
		[331414] = {
			["npcID"] = 157754,
		},
		[298651] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153756,
			["encounterID"] = 2312,
		},
		[366227] = {
			["npcID"] = 183496,
		},
		[364180] = {
			["npcID"] = 183596,
		},
		[351894] = {
			["npcID"] = 178180,
		},
		[321178] = {
			["npcID"] = 162047,
		},
		[358038] = {
			["npcID"] = 179802,
		},
		[331418] = {
			["npcID"] = 170160,
		},
		[358039] = {
			["npcID"] = 178002,
		},
		[337562] = {
			["npcID"] = 162875,
		},
		[323229] = {
			["npcID"] = 164875,
		},
		[358041] = {
			["npcID"] = 180160,
		},
		[345755] = {
			["npcID"] = 165663,
		},
		[384663] = {
			["source"] = "Forgewrought Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194816,
		},
		[394903] = {
			["source"] = "Lookout Mordren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193668,
		},
		[388760] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[329376] = {
			["npcID"] = 165060,
		},
		[205660] = {
			["source"] = "Observant Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107449,
		},
		[382620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonebolt Hunter",
			["npcID"] = 185534,
		},
		[353952] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
		},
		[323236] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[374430] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Tectonic Crusher",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190588,
		},
		[368287] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonebolt Hunter",
			["npcID"] = 185534,
		},
		[356001] = {
			["npcID"] = 177808,
		},
		[333477] = {
			["npcID"] = 163621,
		},
		[403101] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[329383] = {
			["npcID"] = 153882,
		},
		[356004] = {
			["npcID"] = 177514,
		},
		[333479] = {
			["npcID"] = 163620,
		},
		[394912] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[347814] = {
			["npcID"] = 176396,
		},
		[358053] = {
			["npcID"] = 180160,
		},
		[376483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Charred Cinderling",
			["npcID"] = 187404,
		},
		[386722] = {
			["npcID"] = 192236,
		},
		[298669] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[407200] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[358055] = {
			["npcID"] = 179254,
		},
		[368294] = {
			["npcID"] = 185752,
		},
		[343722] = {
			["npcID"] = 162965,
		},
		[388773] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[394917] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["npcID"] = 199233,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[356010] = {
			["npcID"] = 178041,
		},
		[358058] = {
			["npcID"] = 178002,
		},
		[362154] = {
			["npcID"] = 182879,
		},
		[339629] = {
			["npcID"] = 173145,
		},
		[372394] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[407207] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[362157] = {
			["npcID"] = 182879,
		},
		[356014] = {
			["npcID"] = 177356,
		},
		[163689] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80816,
			["encounterID"] = 1748,
		},
		[372397] = {
			["npcID"] = 190188,
		},
		[329395] = {
			["npcID"] = 170044,
		},
		[353969] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[407212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Dragonhunter",
			["npcID"] = 202108,
		},
		[353971] = {
			["npcID"] = 178949,
		},
		[358067] = {
			["npcID"] = 178877,
		},
		[360115] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[396975] = {
			["npcID"] = 195915,
		},
		[356021] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[374451] = {
			["source"] = "Burning Chain Caster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195919,
		},
		[399025] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Revenant",
			["npcID"] = 200720,
		},
		[356023] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 179963,
			["encounterID"] = 2435,
		},
		[329404] = {
			["npcID"] = 185123,
		},
		[166766] = {
			["npcID"] = 171172,
		},
		[351931] = {
			["npcID"] = 176598,
		},
		[321216] = {
			["npcID"] = 172601,
		},
		[366267] = {
			["npcID"] = 185008,
		},
		[386745] = {
			["npcID"] = 194884,
		},
		[409271] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["npcID"] = 199703,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[356031] = {
			["npcID"] = 177816,
		},
		[135029] = {
			["npcID"] = 78116,
		},
		[366272] = {
			["npcID"] = 185032,
		},
		[315079] = {
			["npcID"] = 161388,
		},
		[358082] = {
			["npcID"] = 179608,
		},
		[351939] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[356035] = {
			["npcID"] = 179608,
		},
		[396991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakonid Breaker",
			["npcID"] = 187240,
		},
		[122301] = {
			["npcID"] = 62930,
		},
		[315082] = {
			["npcID"] = 158259,
		},
		[358085] = {
			["npcID"] = 179859,
		},
		[366278] = {
			["npcID"] = 185032,
		},
		[388804] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[394948] = {
			["npcID"] = 192344,
		},
		[257899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Ravager",
			["npcID"] = 130012,
		},
		[329422] = {
			["npcID"] = 157571,
		},
		[341709] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[337616] = {
			["npcID"] = 158989,
		},
		[256878] = {
			["npcID"] = 171303,
		},
		[358096] = {
			["npcID"] = 177425,
		},
		[364240] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[360145] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[364241] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181546,
			["encounterID"] = 2544,
		},
		[267997] = {
			["npcID"] = 135816,
		},
		[257904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ludwig Von Tortollan",
			["npcID"] = 129699,
		},
		[331479] = {
			["npcID"] = 167923,
		},
		[329432] = {
			["npcID"] = 177861,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["npcID"] = 186616,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[300764] = {
			["npcID"] = 150165,
		},
		[331481] = {
			["npcID"] = 167948,
		},
		[397010] = {
			["source"] = "Qalashi Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197147,
		},
		[397011] = {
			["source"] = "Qalashi Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197147,
		},
		[399059] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Electrified Colossal Stormfiend",
			["npcID"] = 200943,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[329437] = {
			["npcID"] = 182791,
		},
		[388822] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[399061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 200858,
		},
		[354011] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[372441] = {
			["npcID"] = 186515,
		},
		[399062] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 200858,
		},
		[257908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Officer",
			["npcID"] = 127106,
		},
		[321249] = {
			["npcID"] = 162051,
		},
		[41448] = {
			["npcID"] = 177637,
		},
		[327393] = {
			["npcID"] = 163618,
		},
		[399065] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 200858,
		},
		[366303] = {
			["npcID"] = 183927,
		},
		[392924] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Channeler Ryvati",
			["npcID"] = 197535,
		},
		[394972] = {
			["source"] = "Qalashi Lavabearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197148,
		},
		[409307] = {
			["source"] = "Blazing Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202262,
		},
		[300777] = {
			["npcID"] = 150165,
		},
		[360162] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 180773,
			["encounterID"] = 2512,
		},
		[362210] = {
			["npcID"] = 181963,
		},
		[372449] = {
			["source"] = "Stormfang Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187931,
		},
		[358115] = {
			["npcID"] = 178467,
		},
		[358116] = {
			["npcID"] = 180627,
		},
		[341735] = {
			["npcID"] = 174336,
		},
		[366309] = {
			["npcID"] = 180917,
		},
		[409313] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[356072] = {
			["npcID"] = 177394,
		},
		[323309] = {
			["npcID"] = 177859,
		},
		[284402] = {
			["npcID"] = 144566,
		},
		[372456] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[394982] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalized Steelshard",
			["npcID"] = 188048,
		},
		[382696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Guardian",
			["npcID"] = 184131,
		},
		[167815] = {
			["npcID"] = 83390,
		},
		[329455] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[341742] = {
			["npcID"] = 174336,
		},
		[349934] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176555,
			["encounterID"] = 2441,
		},
		[372460] = {
			["source"] = "Duskpaw Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187523,
		},
		[284409] = {
			["npcID"] = 144566,
		},
		[360176] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 181856,
			["encounterID"] = 2512,
		},
		[356081] = {
			["npcID"] = 177390,
		},
		[341747] = {
			["npcID"] = 174158,
		},
		[327413] = {
			["npcID"] = 168318,
		},
		[331510] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 170838,
		},
		[153485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carrion Worm",
			["npcID"] = 76057,
		},
		[386801] = {
			["source"] = "Cragsworn Stoneshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191661,
		},
		[390897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalepiercer",
			["npcID"] = 186632,
		},
		[178059] = {
			["npcID"] = 80491,
		},
		[368373] = {
			["npcID"] = 183516,
		},
		[382708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Warden",
			["npcID"] = 193293,
		},
		[339706] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 173549,
		},
		[360185] = {
			["npcID"] = 181879,
		},
		[356090] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[382712] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[372474] = {
			["npcID"] = 180393,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[397048] = {
			["source"] = "Frostbreath Arachnid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199333,
		},
		[347903] = {
			["npcID"] = 176395,
		},
		[79825] = {
			["npcID"] = 41424,
		},
		[397051] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[366336] = {
			["npcID"] = 183927,
		},
		[392957] = {
			["npcID"] = 190216,
		},
		[388862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupted Manafiend",
			["npcID"] = 196045,
		},
		[388863] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupted Manafiend",
			["npcID"] = 196045,
		},
		[356100] = {
			["npcID"] = 177395,
		},
		[390912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Lasher",
			["npcID"] = 197219,
		},
		[325386] = {
			["npcID"] = 167115,
		},
		[374533] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[372486] = {
			["source"] = "Waste Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187497,
		},
		[390916] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Melkhop",
			["npcID"] = 193311,
		},
		[403203] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[341771] = {
			["npcID"] = 170882,
		},
		[228239] = {
			["npcID"] = 114627,
		},
		[300818] = {
			["npcID"] = 150195,
		},
		[341775] = {
			["npcID"] = 167528,
		},
		[161689] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lost Icehoof Calf",
			["npcID"] = 80136,
		},
		[409352] = {
			["source"] = "Blazing Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202262,
		},
		[172952] = {
			["npcID"] = 83026,
		},
		[323347] = {
			["npcID"] = 165137,
		},
		[325395] = {
			["encounterName"] = "Domina Venomblade",
			["npcID"] = 166813,
			["encounterID"] = 2385,
		},
		[352016] = {
			["npcID"] = 176578,
		},
		[170905] = {
			["npcID"] = 82201,
		},
		[372495] = {
			["source"] = "Muck Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187498,
		},
		[176025] = {
			["npcID"] = 88163,
		},
		[374544] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fetid Rotsinger",
			["npcID"] = 186226,
		},
		[325399] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[354068] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[331543] = {
			["npcID"] = 170196,
		},
		[360213] = {
			["npcID"] = 181839,
		},
		[388882] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infuser Sariya",
			["npcID"] = 190405,
		},
		[341786] = {
			["npcID"] = 167528,
		},
		[331548] = {
			["npcID"] = 167964,
		},
		[288546] = {
			["npcID"] = 170495,
		},
		[388886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Scepter",
			["npcID"] = 196576,
		},
		[356123] = {
			["npcID"] = 177395,
		},
		[183197] = {
			["npcID"] = 155221,
		},
		[288548] = {
			["npcID"] = 170495,
		},
		[341790] = {
			["npcID"] = 167528,
		},
		[196508] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99657,
		},
		[272167] = {
			["npcID"] = 136404,
		},
		[319266] = {
			["npcID"] = 165747,
		},
		[390938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aggravated Skitterfly",
			["npcID"] = 197406,
		},
		[333602] = {
			["npcID"] = 163126,
		},
		[176032] = {
			["npcID"] = 88163,
		},
		[354080] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[390940] = {
			["source"] = "Gnarls",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197354,
		},
		[327461] = {
			["npcID"] = 153165,
		},
		[349987] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176555,
			["encounterID"] = 2441,
		},
		[362275] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[360228] = {
			["npcID"] = 184061,
		},
		[386849] = {
			["npcID"] = 195846,
		},
		[388897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Pincher",
			["npcID"] = 200949,
		},
		[374563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dazzling Dragonfly",
			["npcID"] = 190362,
		},
		[360229] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[325418] = {
			["npcID"] = 167113,
		},
		[319275] = {
			["npcID"] = 159601,
		},
		[366374] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[327467] = {
			["npcID"] = 153165,
		},
		[228254] = {
			["npcID"] = 114626,
		},
		[149416] = {
			["npcID"] = 183257,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[272180] = {
			["source"] = "Grotesque Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138187,
		},
		[317231] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[329518] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[364330] = {
			["npcID"] = 184737,
		},
		[374569] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186227,
		},
		[160680] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79548,
			["encounterID"] = 1732,
		},
		[390952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grand Flame",
			["npcID"] = 188009,
		},
		[401192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quicksmack Magk",
			["npcID"] = 204651,
		},
		[401193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quicksmack Magk",
			["npcID"] = 204651,
		},
		[202661] = {
			["npcID"] = 102583,
		},
		[397100] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[350002] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[319286] = {
			["npcID"] = 164084,
		},
		[331573] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 170199,
			["encounterID"] = 2406,
		},
		[388911] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellbound Battleaxe",
			["npcID"] = 196577,
		},
		[411437] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[191401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Marksman",
			["npcID"] = 96640,
		},
		[327481] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[386866] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorging Stagbeetle",
			["npcID"] = 195709,
		},
		[178091] = {
			["npcID"] = 80491,
		},
		[339770] = {
			["npcID"] = 173568,
		},
		[395061] = {
			["npcID"] = 193443,
		},
		[397109] = {
			["npcID"] = 187843,
		},
		[333629] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 168246,
		},
		[384823] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["npcID"] = 189886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[397110] = {
			["npcID"] = 187843,
		},
		[372538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Flare",
			["npcID"] = 189470,
		},
		[325440] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165764,
			["encounterID"] = 2402,
		},
		[409398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Guardian",
			["npcID"] = 203831,
		},
		[323393] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[358205] = {
			["npcID"] = 178862,
		},
		[335680] = {
			["npcID"] = 157807,
		},
		[339776] = {
			["npcID"] = 173568,
		},
		[384827] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["npcID"] = 186116,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2567,
		},
		[388923] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[321349] = {
			["npcID"] = 164857,
		},
		[354114] = {
			["npcID"] = 179234,
		},
		[153524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plagued Bat",
			["npcID"] = 75459,
		},
		[341828] = {
			["npcID"] = 172637,
		},
		[401214] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Honeypelt",
			["npcID"] = 202451,
		},
		[362308] = {
			["npcID"] = 185755,
		},
		[327497] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[382787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disease Slasher",
			["npcID"] = 187315,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[358215] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[356169] = {
			["npcID"] = 177567,
		},
		[382791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 193944,
		},
		[172982] = {
			["npcID"] = 83026,
		},
		[372553] = {
			["source"] = "Hyena Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187566,
		},
		[390983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodial Protector",
			["npcID"] = 192694,
		},
		[335694] = {
			["npcID"] = 177360,
		},
		[390984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodial Protector",
			["npcID"] = 192694,
		},
		[362316] = {
			["npcID"] = 184425,
		},
		[366412] = {
			["npcID"] = 183746,
		},
		[403272] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[228273] = {
			["npcID"] = 114637,
		},
		[360270] = {
			["npcID"] = 181625,
		},
		[345936] = {
			["encounterName"] = "Shriekwing",
			["encounterID"] = 2398,
			["npcID"] = 164406,
		},
		[372557] = {
			["source"] = "Hyena Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187566,
		},
		[354128] = {
			["npcID"] = 178949,
		},
		[390988] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[197558] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 95674,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[388941] = {
			["npcID"] = 186962,
		},
		[358225] = {
			["npcID"] = 178732,
		},
		[393037] = {
			["npcID"] = 186672,
		},
		[388942] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Ravager",
			["npcID"] = 196671,
		},
		[358226] = {
			["npcID"] = 176949,
		},
		[321367] = {
			["npcID"] = 156562,
		},
		[372561] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Hunter",
			["npcID"] = 189227,
		},
		[358227] = {
			["npcID"] = 176959,
		},
		[343893] = {
			["npcID"] = 162829,
		},
		[388944] = {
			["npcID"] = 186962,
		},
		[298844] = {
			["npcID"] = 153885,
		},
		[382802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Rothexer",
			["npcID"] = 194241,
		},
		[329561] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165778,
			["encounterID"] = 2402,
		},
		[228277] = {
			["npcID"] = 114634,
		},
		[339801] = {
			["npcID"] = 166046,
		},
		[327515] = {
			["npcID"] = 168361,
		},
		[329563] = {
			["npcID"] = 152508,
		},
		[372566] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Hunter",
			["npcID"] = 189227,
		},
		[358232] = {
			["npcID"] = 180104,
		},
		[337755] = {
			["npcID"] = 163213,
		},
		[325469] = {
			["npcID"] = 166928,
		},
		[393045] = {
			["npcID"] = 186672,
		},
		[298849] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[228279] = {
			["npcID"] = 114632,
		},
		[87527] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dustbelcher Initiate",
			["npcID"] = 46694,
		},
		[388952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Riversnapper",
			["npcID"] = 192684,
		},
		[228280] = {
			["npcID"] = 114629,
		},
		[360284] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[362333] = {
			["npcID"] = 182374,
		},
		[210875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormforged Sentinel",
			["npcID"] = 96574,
		},
		[358238] = {
			["npcID"] = 178851,
		},
		[59638] = {
			["npcID"] = 31216,
		},
		[317284] = {
			["npcID"] = 162880,
		},
		[374622] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Thundering Ravager",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190690,
		},
		[374623] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frozen Destroyer",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190686,
		},
		[391006] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blisterhide",
			["npcID"] = 197353,
		},
		[196543] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 95674,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[354147] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
		},
		[364386] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182823,
			["encounterID"] = 2549,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[176066] = {
			["npcID"] = 88178,
		},
		[335720] = {
			["npcID"] = 155812,
		},
		[341864] = {
			["npcID"] = 173189,
		},
		[348008] = {
			["npcID"] = 176394,
		},
		[341865] = {
			["npcID"] = 174194,
		},
		[384868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Longbow",
			["npcID"] = 192789,
		},
		[323437] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[341867] = {
			["npcID"] = 165469,
		},
		[323438] = {
			["npcID"] = 166073,
		},
		[162759] = {
			["npcID"] = 85131,
		},
		[343916] = {
			["npcID"] = 169102,
		},
		[198595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Thundercaller",
			["npcID"] = 95842,
		},
		[176070] = {
			["npcID"] = 173114,
		},
		[356204] = {
			["npcID"] = 177372,
		},
		[360300] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[395112] = {
			["source"] = "Enkine the Voracious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193134,
		},
		[364396] = {
			["npcID"] = 184272,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[378731] = {
			["npcID"] = 189217,
		},
		[356206] = {
			["npcID"] = 177372,
		},
		[358254] = {
			["npcID"] = 178002,
		},
		[356207] = {
			["npcID"] = 177372,
		},
		[391019] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[352112] = {
			["npcID"] = 178372,
		},
		[360304] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[321399] = {
			["npcID"] = 173414,
		},
		[388976] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Ravager",
			["npcID"] = 196671,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[325498] = {
			["npcID"] = 157212,
		},
		[337785] = {
			["npcID"] = 171160,
		},
		[348024] = {
			["npcID"] = 176520,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["npcID"] = 186338,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[321406] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 169498,
			["encounterID"] = 2384,
		},
		[372600] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[393079] = {
			["npcID"] = 188180,
		},
		[327552] = {
			["npcID"] = 168573,
		},
		[325506] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165764,
			["encounterID"] = 2402,
		},
		[358271] = {
			["npcID"] = 179914,
		},
		[296839] = {
			["npcID"] = 152898,
		},
		[360320] = {
			["npcID"] = 181942,
		},
		[214988] = {
			["npcID"] = 100364,
		},
		[164819] = {
			["npcID"] = 81726,
		},
		[214989] = {
			["npcID"] = 100364,
		},
		[368514] = {
			["npcID"] = 183764,
		},
		[403326] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[339846] = {
			["npcID"] = 166052,
		},
		[376706] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[329608] = {
			["npcID"] = 155828,
		},
		[405375] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[350086] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176705,
			["encounterID"] = 2441,
		},
		[329609] = {
			["npcID"] = 155828,
		},
		[384899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotbow Stalker",
			["npcID"] = 186208,
		},
		[409473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voracious Magma Worm",
			["npcID"] = 203825,
		},
		[372615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tamed Phoenix",
			["npcID"] = 189247,
		},
		[298897] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[298898] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153755,
			["encounterID"] = 2312,
		},
		[368522] = {
			["npcID"] = 183764,
		},
		[341902] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 174197,
		},
		[352141] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176974,
			["encounterID"] = 2422,
		},
		[364429] = {
			["npcID"] = 180085,
		},
		[391050] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Channeler Ryvati",
			["npcID"] = 197535,
		},
		[360334] = {
			["npcID"] = 183953,
		},
		[325523] = {
			["npcID"] = 165515,
		},
		[329619] = {
			["npcID"] = 185123,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[368528] = {
			["npcID"] = 183764,
		},
		[368529] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[255952] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[391055] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[350101] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176705,
			["encounterID"] = 2441,
		},
		[360340] = {
			["npcID"] = 182425,
		},
		[346006] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[405391] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["npcID"] = 190294,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[354198] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[270241] = {
			["npcID"] = 154129,
		},
		[362390] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["npcID"] = 190294,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[256979] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Eudora",
			["npcID"] = 126848,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[327581] = {
			["encounterName"] = "Globgrog",
			["npcID"] = 168396,
			["encounterID"] = 2382,
		},
		[244693] = {
			["encounterName"] = "Aggramar",
			["npcID"] = 121975,
			["encounterID"] = 2063,
		},
		[364442] = {
			["npcID"] = 180089,
		},
		[325535] = {
			["npcID"] = 164562,
		},
		[270246] = {
			["npcID"] = 154128,
		},
		[327584] = {
			["npcID"] = 168393,
		},
		[270248] = {
			["npcID"] = 154129,
		},
		[358302] = {
			["npcID"] = 179911,
		},
		[183263] = {
			["npcID"] = 155219,
		},
		[193502] = {
			["npcID"] = 98177,
		},
		[372638] = {
			["npcID"] = 189706,
		},
		[368544] = {
			["npcID"] = 184597,
		},
		[364449] = {
			["npcID"] = 179939,
		},
		[368545] = {
			["npcID"] = 184599,
		},
		[358307] = {
			["npcID"] = 179913,
		},
		[356260] = {
			["npcID"] = 179388,
		},
		[335783] = {
			["npcID"] = 155812,
		},
		[374691] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[368548] = {
			["npcID"] = 185145,
		},
		[362405] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[331689] = {
			["npcID"] = 165181,
		},
		[382883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Rothexer",
			["npcID"] = 194241,
		},
		[368551] = {
			["npcID"] = 184605,
		},
		[348074] = {
			["npcID"] = 178041,
		},
		[325549] = {
			["npcID"] = 168960,
		},
		[401316] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[358314] = {
			["npcID"] = 180162,
		},
		[362410] = {
			["npcID"] = 181349,
		},
		[352172] = {
			["npcID"] = 178102,
		},
		[358316] = {
			["npcID"] = 180681,
		},
		[401319] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[199652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Haldor",
			["npcID"] = 95843,
		},
		[270264] = {
			["npcID"] = 154131,
		},
		[362413] = {
			["npcID"] = 179939,
		},
		[354223] = {
			["npcID"] = 177514,
		},
		[358320] = {
			["npcID"] = 180162,
		},
		[203750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Chronomaton",
			["npcID"] = 111622,
		},
		[401325] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[386991] = {
			["npcID"] = 184869,
		},
		[358323] = {
			["npcID"] = 180246,
		},
		[389040] = {
			["source"] = "Thondrozus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192769,
		},
		[374706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamecaller Aymi",
			["npcID"] = 190368,
		},
		[395184] = {
			["npcID"] = 185883,
		},
		[298940] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153755,
			["encounterID"] = 2312,
		},
		[360373] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[202728] = {
			["npcID"] = 99649,
		},
		[323515] = {
			["encounterName"] = "Gorechop",
			["encounterID"] = 2365,
			["npcID"] = 162317,
		},
		[358327] = {
			["npcID"] = 179760,
		},
		[358328] = {
			["npcID"] = 179760,
		},
		[370615] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[360378] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[321471] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[298946] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153755,
			["encounterID"] = 2312,
		},
		[79872] = {
			["npcID"] = 177586,
		},
		[348094] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[405433] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[354240] = {
			["npcID"] = 179433,
		},
		[393148] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maneet",
			["npcID"] = 188704,
		},
		[395196] = {
			["npcID"] = 185883,
		},
		[374719] = {
			["source"] = "Stonejaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188128,
		},
		[344003] = {
			["encounterName"] = "Globgrog",
			["npcID"] = 168580,
			["encounterID"] = 2382,
		},
		[387006] = {
			["npcID"] = 186361,
		},
		[389054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Forager",
			["npcID"] = 196694,
		},
		[331718] = {
			["npcID"] = 171772,
		},
		[389056] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[384961] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotbow Stalker",
			["npcID"] = 186208,
		},
		[378818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Thaumaturge",
			["npcID"] = 192788,
		},
		[274383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vermin Trapper",
			["npcID"] = 130404,
		},
		[374724] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamecaller Aymi",
			["npcID"] = 190368,
		},
		[335817] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[337865] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165759,
			["encounterID"] = 2402,
		},
		[356295] = {
			["npcID"] = 170257,
		},
		[228334] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[164854] = {
			["npcID"] = 80858,
		},
		[364488] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[354250] = {
			["npcID"] = 179434,
		},
		[188404] = {
			["encounterName"] = "Hymdall",
			["source"] = "Storm Drake",
			["npcID"] = 97788,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[329679] = {
			["npcID"] = 158256,
		},
		[358348] = {
			["npcID"] = 179472,
		},
		[372683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infused Whelp",
			["npcID"] = 187894,
		},
		[378827] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Plunderer",
			["npcID"] = 192786,
		},
		[356302] = {
			["npcID"] = 178671,
		},
		[350159] = {
			["npcID"] = 177267,
		},
		[376780] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[356303] = {
			["npcID"] = 180162,
		},
		[15043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Yu'lon Adept",
			["npcID"] = 57316,
		},
		[354256] = {
			["npcID"] = 177413,
		},
		[364495] = {
			["npcID"] = 181625,
		},
		[387021] = {
			["npcID"] = 192238,
		},
		[166906] = {
			["npcID"] = 178645,
		},
		[356306] = {
			["npcID"] = 177331,
		},
		[391118] = {
			["encounterName"] = "Azureblade",
			["source"] = "Scalebane Lieutenant",
			["npcID"] = 191739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[319447] = {
			["npcID"] = 157016,
		},
		[378832] = {
			["source"] = "Skulking Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196384,
		},
		[325591] = {
			["npcID"] = 157212,
		},
		[356308] = {
			["npcID"] = 152594,
		},
		[339927] = {
			["npcID"] = 173553,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[378835] = {
			["npcID"] = 186362,
		},
		[266209] = {
			["source"] = "Fallen Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134284,
		},
		[366549] = {
			["npcID"] = 185154,
		},
		[352215] = {
			["npcID"] = 176578,
		},
		[341977] = {
			["npcID"] = 170690,
		},
		[176124] = {
			["npcID"] = 173114,
		},
		[333787] = {
			["npcID"] = 168934,
		},
		[354265] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[199674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Bjorn",
			["npcID"] = 97081,
		},
		[372696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Juggernaut",
			["npcID"] = 188244,
		},
		[327646] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[177150] = {
			["npcID"] = 81726,
		},
		[331743] = {
			["npcID"] = 166276,
		},
		[360412] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 180773,
			["encounterID"] = 2512,
		},
		[176127] = {
			["npcID"] = 80935,
		},
		[360414] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 180773,
			["encounterID"] = 2512,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[366559] = {
			["npcID"] = 185154,
		},
		[387037] = {
			["npcID"] = 195917,
		},
		[325605] = {
			["npcID"] = 169630,
		},
		[378847] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Spinecrusher",
			["npcID"] = 192787,
		},
		[387039] = {
			["npcID"] = 187299,
		},
		[350180] = {
			["npcID"] = 177286,
		},
		[327655] = {
			["npcID"] = 168420,
		},
		[329703] = {
			["npcID"] = 159106,
		},
		[391136] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakonid Breaker",
			["npcID"] = 187240,
		},
		[319465] = {
			["npcID"] = 164184,
		},
		[378850] = {
			["npcID"] = 181536,
		},
		[329706] = {
			["npcID"] = 177397,
		},
		[358375] = {
			["npcID"] = 179472,
		},
		[387045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezrigeth",
			["npcID"] = 187666,
		},
		[305136] = {
			["npcID"] = 156212,
		},
		[79884] = {
			["npcID"] = 82901,
		},
		[329711] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169196,
		},
		[327664] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[387049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hypoxicron",
			["npcID"] = 186334,
		},
		[376811] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["npcID"] = 186120,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2568,
		},
		[395241] = {
			["source"] = "Primalist Voltweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198868,
		},
		[366573] = {
			["npcID"] = 185154,
		},
		[313332] = {
			["npcID"] = 166046,
		},
		[374765] = {
			["npcID"] = 190960,
		},
		[385005] = {
			["npcID"] = 189372,
		},
		[362480] = {
			["npcID"] = 182322,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[387054] = {
			["source"] = "Brinetooth Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187281,
		},
		[166923] = {
			["npcID"] = 81603,
		},
		[79886] = {
			["npcID"] = 82901,
		},
		[272382] = {
			["npcID"] = 155250,
		},
		[296956] = {
			["npcID"] = 152995,
		},
		[262145] = {
			["npcID"] = 175670,
		},
		[354297] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 179334,
			["encounterID"] = 2425,
		},
		[350202] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[405492] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[395254] = {
			["source"] = "Primalist Tempestmaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198878,
		},
		[372730] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Juggernaut",
			["npcID"] = 188244,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[348159] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[407544] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[387067] = {
			["npcID"] = 193214,
		},
		[348160] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 164967,
			["encounterID"] = 2384,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[333827] = {
			["npcID"] = 167533,
		},
		[372735] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flashfrost Earthshaper",
			["npcID"] = 187969,
		},
		[270348] = {
			["npcID"] = 154131,
		},
		[331781] = {
			["npcID"] = 170164,
		},
		[352259] = {
			["npcID"] = 179433,
		},
		[385024] = {
			["npcID"] = 188027,
		},
		[339975] = {
			["npcID"] = 173609,
		},
		[407552] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[272402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cutwater Knife Juggler",
			["npcID"] = 129599,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[385029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fleshripper Vulture",
			["npcID"] = 186246,
		},
		[403459] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[358410] = {
			["npcID"] = 178151,
		},
		[296978] = {
			["npcID"] = 153003,
		},
		[191508] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Aspirant",
			["npcID"] = 101637,
		},
		[362507] = {
			["npcID"] = 182690,
		},
		[333839] = {
			["npcID"] = 167534,
		},
		[319506] = {
			["npcID"] = 164232,
		},
		[395273] = {
			["source"] = "Primal Stormsentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196856,
		},
		[352271] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[387083] = {
			["npcID"] = 187264,
		},
		[366606] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[385036] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Galesinger",
			["npcID"] = 190373,
		},
		[333845] = {
			["npcID"] = 167534,
		},
		[409612] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whisper in the Dark",
			["npcID"] = 203806,
		},
		[323608] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[376851] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[329753] = {
			["npcID"] = 156134,
		},
		[339992] = {
			["npcID"] = 173609,
		},
		[284703] = {
			["npcID"] = 144572,
		},
		[368661] = {
			["npcID"] = 179386,
		},
		[387091] = {
			["npcID"] = 187239,
		},
		[391187] = {
			["source"] = "Bisquius",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197557,
		},
		[368662] = {
			["npcID"] = 180015,
		},
		[321564] = {
			["npcID"] = 165829,
		},
		[360472] = {
			["npcID"] = 178963,
		},
		[321565] = {
			["npcID"] = 165829,
		},
		[301088] = {
			["npcID"] = 151657,
		},
		[385046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skulking Gutstabber",
			["npcID"] = 186242,
		},
		[79896] = {
			["npcID"] = 83001,
		},
		[259092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
		},
		[189469] = {
			["npcID"] = 100364,
		},
		[397338] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Tectonic Crusher",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190588,
		},
		[391195] = {
			["source"] = "Bisquius",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197557,
		},
		[356384] = {
			["npcID"] = 177385,
		},
		[397341] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[333861] = {
			["npcID"] = 167533,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[352293] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[366629] = {
			["npcID"] = 185155,
		},
		[329770] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[393251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frenzied Grovetalon",
			["npcID"] = 187507,
		},
		[395299] = {
			["source"] = "Spellforged Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194402,
		},
		[340011] = {
			["npcID"] = 173613,
		},
		[374823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Squallbringer Cyraz",
			["npcID"] = 190370,
		},
		[176165] = {
			["npcID"] = 88224,
		},
		[366633] = {
			["npcID"] = 185155,
		},
		[385063] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Cinderweaver",
			["npcID"] = 190207,
		},
		[329774] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[346157] = {
			["npcID"] = 180252,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[340016] = {
			["npcID"] = 171184,
		},
		[385068] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197145,
		},
		[340018] = {
			["npcID"] = 172523,
		},
		[333875] = {
			["npcID"] = 168942,
		},
		[340019] = {
			["npcID"] = 173604,
		},
		[297017] = {
			["npcID"] = 152995,
		},
		[227363] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
		},
		[118297] = {
			["npcID"] = 61029,
		},
		[173098] = {
			["npcID"] = 78638,
		},
		[397358] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[329783] = {
			["npcID"] = 156226,
		},
		[323640] = {
			["npcID"] = 165473,
		},
		[297020] = {
			["npcID"] = 153011,
		},
		[393265] = {
			["source"] = "Tombcaller Ganzaya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188509,
		},
		[387122] = {
			["npcID"] = 193214,
		},
		[227365] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
		},
		[292926] = {
			["npcID"] = 151127,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[156718] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Corpse Spider",
			["npcID"] = 76104,
		},
		[356407] = {
			["npcID"] = 180091,
		},
		[358455] = {
			["npcID"] = 177972,
		},
		[340026] = {
			["npcID"] = 171184,
		},
		[387125] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Thunderbeast",
			["npcID"] = 195696,
		},
		[315454] = {
			["npcID"] = 157212,
		},
		[374839] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[325694] = {
			["npcID"] = 160359,
		},
		[387127] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "Primalist Thunderbeast",
			["npcID"] = 195696,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[337982] = {
			["npcID"] = 162872,
		},
		[325696] = {
			["npcID"] = 168960,
		},
		[356414] = {
			["npcID"] = 179892,
		},
		[29579] = {
			["npcID"] = 114625,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[156722] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Exhumer",
			["npcID"] = 77700,
		},
		[389179] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[325700] = {
			["npcID"] = 165529,
		},
		[274507] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Bilge Rat Swabby",
			["npcID"] = 129526,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[325701] = {
			["npcID"] = 165529,
		},
		[372800] = {
			["npcID"] = 187125,
		},
		[391230] = {
			["source"] = "Bisquius",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197557,
		},
		[387135] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Arcblade",
			["npcID"] = 194898,
		},
		[331846] = {
			["npcID"] = 167964,
		},
		[183345] = {
			["npcID"] = 153011,
		},
		[319560] = {
			["npcID"] = 158054,
		},
		[358468] = {
			["npcID"] = 177979,
		},
		[362565] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[292942] = {
			["npcID"] = 177331,
		},
		[362566] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[350280] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[184371] = {
			["npcID"] = 185125,
		},
		[362568] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[364616] = {
			["npcID"] = 183596,
		},
		[192563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Purifier",
			["npcID"] = 97197,
		},
		[362569] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[194611] = {
			["npcID"] = 98926,
		},
		[350283] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[272469] = {
			["source"] = "Abyssal Reach",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138538,
		},
		[397382] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Frostforged Zealot",
			["npcID"] = 199547,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[397383] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["npcID"] = 199703,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[329808] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[374859] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[370764] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Fury",
			["npcID"] = 187160,
		},
		[356430] = {
			["npcID"] = 178958,
		},
		[29580] = {
			["npcID"] = 114625,
		},
		[173112] = {
			["npcID"] = 83697,
		},
		[356431] = {
			["npcID"] = 180113,
		},
		[370766] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Thrasher",
			["npcID"] = 187139,
		},
		[338003] = {
			["npcID"] = 165414,
		},
		[295001] = {
			["npcID"] = 151128,
		},
		[338005] = {
			["npcID"] = 165415,
		},
		[374865] = {
			["npcID"] = 194544,
		},
		[393295] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[393296] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198308,
		},
		[364628] = {
			["npcID"] = 183596,
		},
		[176187] = {
			["npcID"] = 84876,
		},
		[393298] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[397394] = {
			["source"] = "Nokhud Thunderfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193373,
		},
		[366678] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[385108] = {
			["source"] = "Restless Podling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187317,
		},
		[352345] = {
			["encounterName"] = "Timecap'n Hooktail",
			["encounterID"] = 2419,
			["npcID"] = 176178,
		},
		[338011] = {
			["npcID"] = 166318,
		},
		[383062] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayed Elder",
			["npcID"] = 189531,
		},
		[393302] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Colossus",
			["npcID"] = 188673,
		},
		[346204] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[198715] = {
			["npcID"] = 100876,
		},
		[352348] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[346205] = {
			["npcID"] = 173717,
		},
		[321633] = {
			["npcID"] = 171562,
		},
		[393305] = {
			["source"] = "Primalist Earthwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193709,
		},
		[372828] = {
			["npcID"] = 186679,
		},
		[366685] = {
			["npcID"] = 185271,
		},
		[393306] = {
			["source"] = "Primalist Earthwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193709,
		},
		[346208] = {
			["npcID"] = 167323,
		},
		[323683] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[393307] = {
			["source"] = "Primalist Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193558,
		},
		[358496] = {
			["npcID"] = 179805,
		},
		[393308] = {
			["source"] = "Primalist Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193558,
		},
		[411738] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rashok",
			["npcID"] = 201320,
		},
		[389213] = {
			["source"] = "Flame Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192764,
		},
		[393309] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198311,
		},
		[413787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Entropic Hatred",
			["npcID"] = 203809,
		},
		[366689] = {
			["npcID"] = 185268,
		},
		[352355] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
			["encounterID"] = 2422,
		},
		[364643] = {
			["npcID"] = 181057,
		},
		[383073] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["encounterID"] = 2639,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190496,
		},
		[354405] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[323689] = {
			["npcID"] = 158642,
		},
		[333929] = {
			["npcID"] = 177443,
		},
		[393314] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[329834] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169267,
			["encounterID"] = 2405,
		},
		[340073] = {
			["npcID"] = 168697,
		},
		[374885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astral Attendant",
			["npcID"] = 189555,
		},
		[364647] = {
			["npcID"] = 181057,
		},
		[391268] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Earthwrought Smasher",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197595,
		},
		[376934] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["npcID"] = 186120,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2568,
		},
		[372839] = {
			["npcID"] = 191570,
		},
		[333932] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169813,
			["encounterID"] = 2407,
		},
		[362601] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[329838] = {
			["npcID"] = 159027,
		},
		[342125] = {
			["npcID"] = 167538,
		},
		[364652] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[374892] = {
			["npcID"] = 187939,
		},
		[383084] = {
			["npcID"] = 190066,
		},
		[393323] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iskaaran Apprentice",
			["npcID"] = 198298,
		},
		[321652] = {
			["npcID"] = 170228,
		},
		[411754] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conduit Guardian",
			["npcID"] = 205478,
		},
		[376943] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[411755] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conduit Guardian",
			["npcID"] = 205478,
		},
		[301177] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[360562] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[393327] = {
			["source"] = "Keen Skywatcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190778,
		},
		[374898] = {
			["npcID"] = 191496,
		},
		[372851] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[342135] = {
			["npcID"] = 167532,
		},
		[395377] = {
			["source"] = "Thondrozus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192769,
		},
		[385141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Galesinger",
			["npcID"] = 190373,
		},
		[387189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rendvith",
			["npcID"] = 196971,
		},
		[342139] = {
			["npcID"] = 167536,
		},
		[360569] = {
			["npcID"] = 179007,
		},
		[362617] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[153680] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["npcID"] = 75452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1679,
		},
		[352379] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
			["encounterID"] = 2422,
		},
		[387191] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[364666] = {
			["npcID"] = 178563,
		},
		[387192] = {
			["npcID"] = 187127,
		},
		[397431] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[385145] = {
			["npcID"] = 187256,
		},
		[173135] = {
			["npcID"] = 83578,
		},
		[358525] = {
			["npcID"] = 178949,
		},
		[389242] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormed Blackpaw",
			["npcID"] = 193827,
		},
		[358526] = {
			["npcID"] = 179342,
		},
		[409721] = {
			["source"] = "Winglord Dezran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202610,
		},
		[372862] = {
			["source"] = "Churning Splash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187318,
		},
		[321669] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 165108,
		},
		[372863] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["npcID"] = 189232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[360577] = {
			["npcID"] = 179007,
		},
		[346243] = {
			["npcID"] = 168233,
		},
		[331909] = {
			["npcID"] = 165473,
		},
		[350339] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177407,
			["encounterID"] = 2429,
		},
		[409724] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[329862] = {
			["npcID"] = 153885,
		},
		[389247] = {
			["npcID"] = 187187,
		},
		[185425] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steeljaw Grizzly",
			["npcID"] = 96677,
		},
		[323720] = {
			["npcID"] = 181203,
		},
		[350342] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[352390] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 179334,
			["encounterID"] = 2425,
		},
		[172116] = {
			["npcID"] = 86071,
		},
		[319628] = {
			["npcID"] = 156564,
		},
		[393348] = {
			["source"] = "Stalwart Broodwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198263,
		},
		[346251] = {
			["npcID"] = 178490,
		},
		[299153] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[268440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[360589] = {
			["npcID"] = 182114,
		},
		[360590] = {
			["npcID"] = 182114,
		},
		[405641] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[360591] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182045,
			["encounterID"] = 2544,
		},
		[379023] = {
			["npcID"] = 190731,
		},
		[325782] = {
			["npcID"] = 163991,
		},
		[331927] = {
			["npcID"] = 167962,
		},
		[358548] = {
			["npcID"] = 180664,
		},
		[299164] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153756,
			["encounterID"] = 2312,
		},
		[393361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nightrot",
			["npcID"] = 188707,
		},
		[342168] = {
			["npcID"] = 156331,
		},
		[173148] = {
			["npcID"] = 81279,
		},
		[389267] = {
			["source"] = "Clearwater Snapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192678,
		},
		[385172] = {
			["npcID"] = 191645,
		},
		[348313] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[389269] = {
			["npcID"] = 187061,
		},
		[389270] = {
			["npcID"] = 187061,
		},
		[325790] = {
			["npcID"] = 172909,
		},
		[389271] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[379033] = {
			["npcID"] = 184656,
		},
		[331935] = {
			["npcID"] = 170385,
		},
		[350365] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[338079] = {
			["npcID"] = 164737,
		},
		[389273] = {
			["source"] = "Wyrmeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186612,
		},
		[199772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Champion",
			["npcID"] = 97087,
		},
		[319650] = {
			["encounterName"] = "Kryxis the Voracious",
			["encounterID"] = 2360,
			["npcID"] = 162100,
		},
		[389274] = {
			["npcID"] = 186679,
		},
		[284840] = {
			["npcID"] = 144572,
		},
		[340130] = {
			["npcID"] = 165663,
		},
		[317605] = {
			["npcID"] = 162744,
		},
		[385181] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["npcID"] = 189722,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2616,
		},
		[297128] = {
			["npcID"] = 144298,
		},
		[397468] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Flamesworn Herald",
			["npcID"] = 199549,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[338084] = {
			["npcID"] = 172982,
		},
		[336037] = {
			["npcID"] = 181186,
		},
		[358563] = {
			["npcID"] = 175616,
		},
		[409757] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[227420] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114266,
			["encounterID"] = 1957,
		},
		[344230] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[167012] = {
			["npcID"] = 155945,
		},
		[325802] = {
			["npcID"] = 166936,
		},
		[78907] = {
			["npcID"] = 183994,
		},
		[376997] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["npcID"] = 191736,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2564,
		},
		[395427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Lahar",
			["npcID"] = 189235,
		},
		[366759] = {
			["npcID"] = 183498,
		},
		[131178] = {
			["npcID"] = 66768,
		},
		[411811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbling Slime",
			["npcID"] = 205651,
		},
		[405668] = {
			["source"] = "Drazos Blackwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205623,
		},
		[383143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Shaman Rotknuckle",
			["npcID"] = 197356,
		},
		[342189] = {
			["npcID"] = 174175,
		},
		[79932] = {
			["npcID"] = 155282,
		},
		[329903] = {
			["npcID"] = 157099,
		},
		[161896] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Driftwatcher Rylak",
			["npcID"] = 72849,
		},
		[346286] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 175646,
			["encounterID"] = 2424,
		},
		[358573] = {
			["npcID"] = 179423,
		},
		[393385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chalsec of the Earth",
			["npcID"] = 193847,
		},
		[329905] = {
			["npcID"] = 157122,
		},
		[377004] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["npcID"] = 191736,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2564,
		},
		[387243] = {
			["npcID"] = 195095,
		},
		[334002] = {
			["npcID"] = 172590,
		},
		[350385] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[319669] = {
			["encounterName"] = "Kul'tharok",
			["npcID"] = 162309,
			["encounterID"] = 2364,
		},
		[329908] = {
			["npcID"] = 157017,
		},
		[329909] = {
			["npcID"] = 157017,
		},
		[172138] = {
			["npcID"] = 86185,
		},
		[334009] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[329916] = {
			["npcID"] = 171173,
		},
		[356537] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 179334,
			["encounterID"] = 2425,
		},
		[358585] = {
			["npcID"] = 176669,
		},
		[329917] = {
			["npcID"] = 168578,
		},
		[374969] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[377017] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[360636] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[348350] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[207979] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[303300] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Infuser",
			["npcID"] = 186112,
		},
		[340160] = {
			["npcID"] = 173655,
		},
		[207980] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[336066] = {
			["npcID"] = 179911,
		},
		[383165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Shaman Rotknuckle",
			["npcID"] = 197356,
		},
		[319685] = {
			["encounterName"] = "Kryxis the Voracious",
			["encounterID"] = 2360,
			["npcID"] = 162100,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[336068] = {
			["npcID"] = 182686,
		},
		[321734] = {
			["npcID"] = 156564,
		},
		[411837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fragment of Fire",
			["npcID"] = 205971,
		},
		[356548] = {
			["npcID"] = 179334,
		},
		[334023] = {
			["npcID"] = 167536,
		},
		[360644] = {
			["npcID"] = 181339,
		},
		[303308] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Infuser",
			["npcID"] = 186112,
		},
		[329929] = {
			["npcID"] = 157083,
		},
		[323786] = {
			["npcID"] = 163524,
		},
		[358598] = {
			["npcID"] = 178897,
		},
		[327882] = {
			["npcID"] = 168153,
		},
		[329930] = {
			["npcID"] = 157083,
		},
		[256106] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[393411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chalsec of the Earth",
			["npcID"] = 193847,
		},
		[327885] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[194675] = {
			["npcID"] = 98963,
		},
		[350411] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 175728,
		},
		[358603] = {
			["npcID"] = 181212,
		},
		[327887] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[377034] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["npcID"] = 191736,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2564,
		},
		[323793] = {
			["npcID"] = 170146,
		},
		[397514] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[393419] = {
			["npcID"] = 189289,
		},
		[325844] = {
			["npcID"] = 163991,
		},
		[387277] = {
			["npcID"] = 195917,
		},
		[39207] = {
			["npcID"] = 45618,
		},
		[389327] = {
			["npcID"] = 188141,
		},
		[358611] = {
			["npcID"] = 179760,
		},
		[329943] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168156,
			["encounterID"] = 2407,
		},
		[178298] = {
			["npcID"] = 83763,
		},
		[350421] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[350422] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 175727,
		},
		[362710] = {
			["npcID"] = 183229,
		},
		[224374] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["npcID"] = 112668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[323804] = {
			["npcID"] = 163524,
		},
		[391380] = {
			["npcID"] = 195352,
		},
		[224375] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["npcID"] = 112668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[278755] = {
			["source"] = "Befouled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133685,
		},
		[193659] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[391382] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197671,
		},
		[393430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Custodian",
			["npcID"] = 192703,
		},
		[340189] = {
			["npcID"] = 173655,
		},
		[305378] = {
			["npcID"] = 176170,
		},
		[393432] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Refti Defender",
			["npcID"] = 190340,
		},
		[411862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Animation Fluid",
			["npcID"] = 203939,
		},
		[391385] = {
			["npcID"] = 182815,
		},
		[323810] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 166085,
		},
		[393434] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Mercenary",
			["npcID"] = 193791,
		},
		[332002] = {
			["npcID"] = 170417,
		},
		[358623] = {
			["npcID"] = 179552,
		},
		[241784] = {
			["npcID"] = 114629,
		},
		[321764] = {
			["npcID"] = 164861,
		},
		[358624] = {
			["npcID"] = 178997,
		},
		[338147] = {
			["npcID"] = 169885,
		},
		[364769] = {
			["npcID"] = 181360,
		},
		[334053] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[366818] = {
			["npcID"] = 185275,
		},
		[393439] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Mercenary",
			["npcID"] = 193791,
		},
		[387297] = {
			["npcID"] = 186354,
		},
		[407775] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200913,
		},
		[368868] = {
			["npcID"] = 184738,
		},
		[393443] = {
			["source"] = "Veshrak of the North",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188713,
		},
		[387300] = {
			["npcID"] = 192739,
		},
		[366823] = {
			["npcID"] = 185275,
		},
		[346346] = {
			["npcID"] = 164713,
		},
		[323821] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 162099,
		},
		[338157] = {
			["npcID"] = 165047,
		},
		[364778] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[193668] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[372971] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Blacksmith",
			["npcID"] = 189471,
		},
		[385258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coastal Eel",
			["npcID"] = 198782,
		},
		[340208] = {
			["npcID"] = 173655,
		},
		[358638] = {
			["npcID"] = 178997,
		},
		[401642] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[325876] = {
			["npcID"] = 165414,
		},
		[319733] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[325877] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[393453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Defender",
			["npcID"] = 199941,
		},
		[395501] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[393454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battlehorn Pyrhus",
			["npcID"] = 190986,
		},
		[329975] = {
			["npcID"] = 168004,
		},
		[389360] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Timekeeper",
			["npcID"] = 192516,
		},
		[407790] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[176267] = {
			["npcID"] = 88224,
		},
		[393458] = {
			["npcID"] = 190278,
		},
		[329978] = {
			["npcID"] = 185100,
		},
		[393459] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[389364] = {
			["source"] = "Cracktooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187528,
		},
		[387317] = {
			["npcID"] = 190093,
		},
		[334076] = {
			["npcID"] = 168942,
		},
		[209033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Guard",
			["npcID"] = 111563,
		},
		[356602] = {
			["npcID"] = 180164,
		},
		[407796] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[368890] = {
			["npcID"] = 181408,
		},
		[299268] = {
			["npcID"] = 144566,
		},
		[258181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[340224] = {
			["npcID"] = 161529,
		},
		[366847] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182144,
			["encounterID"] = 2544,
		},
		[385277] = {
			["npcID"] = 188226,
		},
		[379134] = {
			["npcID"] = 187172,
		},
		[329989] = {
			["npcID"] = 158978,
		},
		[350467] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[329990] = {
			["npcID"] = 158978,
		},
		[350469] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[391425] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198308,
		},
		[411903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Chemist",
			["npcID"] = 205656,
		},
		[342280] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[342281] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[352520] = {
			["npcID"] = 178601,
		},
		[342282] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[163990] = {
			["encounterName"] = "Imperator Mar'gok",
			["npcID"] = 77428,
			["encounterID"] = 1705,
		},
		[411906] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Chemist",
			["npcID"] = 205656,
		},
		[364808] = {
			["npcID"] = 181145,
		},
		[260235] = {
			["npcID"] = 126788,
		},
		[350475] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[393478] = {
			["npcID"] = 189289,
		},
		[321807] = {
			["npcID"] = 163619,
		},
		[348428] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176605,
			["encounterID"] = 2422,
		},
		[95826] = {
			["npcID"] = 51346,
		},
		[354572] = {
			["npcID"] = 176561,
		},
		[387337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molded Boulder",
			["npcID"] = 190213,
		},
		[360717] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[368909] = {
			["npcID"] = 185861,
		},
		[411912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Devourer",
			["npcID"] = 205673,
		},
		[313621] = {
			["npcID"] = 177637,
		},
		[350482] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[375056] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[387343] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molded Boulder",
			["npcID"] = 190213,
		},
		[366866] = {
			["npcID"] = 184651,
		},
		[377105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vault Guard",
			["npcID"] = 190510,
		},
		[362771] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183463,
			["encounterID"] = 2546,
		},
		[375058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Old Arbhog",
			["npcID"] = 196897,
		},
		[366869] = {
			["npcID"] = 184651,
		},
		[352538] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[354586] = {
			["npcID"] = 179526,
		},
		[154784] = {
			["npcID"] = 84110,
		},
		[360730] = {
			["npcID"] = 181114,
		},
		[373017] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["npcID"] = 189886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[375065] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fetid Rotsinger",
			["npcID"] = 186226,
		},
		[336158] = {
			["npcID"] = 172217,
		},
		[389401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Beguiled Aquamancer",
			["npcID"] = 195960,
		},
		[375068] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Lava Tentacles",
			["npcID"] = 190023,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[297254] = {
			["encounterName"] = "King Gobbamak",
			["npcID"] = 150159,
			["encounterID"] = 2290,
		},
		[284968] = {
			["npcID"] = 144572,
		},
		[321828] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[301351] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[172193] = {
			["npcID"] = 172589,
		},
		[385310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Shockcaster",
			["npcID"] = 195119,
		},
		[403740] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[373024] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[403741] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[342310] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[373027] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[321834] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[358695] = {
			["npcID"] = 180426,
		},
		[389412] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nezascar the Sightless",
			["npcID"] = 196535,
		},
		[325932] = {
			["npcID"] = 179524,
		},
		[375079] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[342317] = {
			["npcID"] = 177476,
		},
		[393511] = {
			["source"] = "Cauldronbearer Blakor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186783,
		},
		[373034] = {
			["npcID"] = 186690,
		},
		[358700] = {
			["npcID"] = 180417,
		},
		[342320] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[342321] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[169129] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 84464,
			["encounterID"] = 1754,
		},
		[332084] = {
			["npcID"] = 167965,
		},
		[362801] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 183501,
			["encounterID"] = 2553,
		},
		[391470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clove",
			["npcID"] = 194457,
		},
		[389423] = {
			["source"] = "Thieving Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196388,
		},
		[350517] = {
			["encounterName"] = "Timecap'n Hooktail",
			["encounterID"] = 2419,
			["npcID"] = 175546,
		},
		[393520] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ceeqa the Peacetaker",
			["npcID"] = 188708,
		},
		[340279] = {
			["npcID"] = 173714,
		},
		[227493] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114262,
			["encounterID"] = 1960,
		},
		[385331] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Detonating Crystal",
			["npcID"] = 195138,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[362806] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[241828] = {
			["npcID"] = 114804,
		},
		[373046] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[375094] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swift Hornstrider",
			["npcID"] = 190029,
		},
		[368951] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[393525] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ceeqa the Peacetaker",
			["npcID"] = 188708,
		},
		[160943] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 77483,
			["encounterID"] = 1732,
		},
		[389430] = {
			["npcID"] = 195846,
		},
		[393527] = {
			["source"] = "Cracktooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187528,
		},
		[229544] = {
			["npcID"] = 115401,
		},
		[373051] = {
			["npcID"] = 186669,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["npcID"] = 186338,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[371005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Thrasher",
			["npcID"] = 187139,
		},
		[340289] = {
			["npcID"] = 173714,
		},
		[360767] = {
			["npcID"] = 181879,
		},
		[387388] = {
			["npcID"] = 185595,
		},
		[385341] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195335,
		},
		[403771] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[217260] = {
			["npcID"] = 186679,
		},
		[364865] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181548,
			["encounterID"] = 2544,
		},
		[405821] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[385344] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195335,
		},
		[340294] = {
			["npcID"] = 162727,
		},
		[377154] = {
			["source"] = "Scythid Gloomhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197665,
		},
		[297292] = {
			["npcID"] = 153165,
		},
		[373059] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187771,
		},
		[383298] = {
			["npcID"] = 182815,
		},
		[395586] = {
			["source"] = "Spellforged Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194402,
		},
		[389443] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["npcID"] = 196712,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[391491] = {
			["npcID"] = 190307,
		},
		[360775] = {
			["npcID"] = 185511,
		},
		[356680] = {
			["npcID"] = 177133,
		},
		[358728] = {
			["npcID"] = 176940,
		},
		[319821] = {
			["npcID"] = 161529,
		},
		[387398] = {
			["npcID"] = 190765,
		},
		[389446] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["npcID"] = 196712,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[385351] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195335,
		},
		[167095] = {
			["npcID"] = 83390,
		},
		[350541] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[352589] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 176583,
		},
		[340304] = {
			["npcID"] = 173720,
		},
		[340305] = {
			["npcID"] = 173720,
		},
		[334162] = {
			["npcID"] = 166908,
		},
		[377166] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["encounterID"] = 2639,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190496,
		},
		[344403] = {
			["npcID"] = 175012,
		},
		[356690] = {
			["npcID"] = 177135,
		},
		[385359] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["npcID"] = 186116,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2567,
		},
		[285020] = {
			["encounterName"] = "Tussle Tonks",
			["npcID"] = 144244,
			["encounterID"] = 2257,
		},
		[227508] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[387410] = {
			["npcID"] = 186219,
		},
		[385363] = {
			["source"] = "Lounging Mudstomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192594,
		},
		[297310] = {
			["npcID"] = 153174,
		},
		[368983] = {
			["npcID"] = 194095,
		},
		[315742] = {
			["npcID"] = 166012,
		},
		[350554] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[368984] = {
			["npcID"] = 191136,
		},
		[362841] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 183663,
		},
		[399701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swooping Flayer",
			["npcID"] = 199809,
		},
		[358747] = {
			["npcID"] = 178824,
		},
		[393559] = {
			["source"] = "Gethrel the South Wind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193848,
		},
		[358748] = {
			["npcID"] = 178824,
		},
		[196796] = {
			["npcID"] = 99956,
		},
		[354653] = {
			["npcID"] = 179560,
		},
		[358749] = {
			["npcID"] = 178824,
		},
		[373084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontorch Commander",
			["npcID"] = 189466,
		},
		[319843] = {
			["npcID"] = 165747,
		},
		[321891] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 165251,
		},
		[191678] = {
			["npcID"] = 96480,
		},
		[368990] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["npcID"] = 184422,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[348513] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 176523,
		},
		[229562] = {
			["npcID"] = 115406,
		},
		[373087] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["npcID"] = 189886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[321894] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[323943] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[350564] = {
			["npcID"] = 177114,
		},
		[389473] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Lurking Lunker",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196946,
		},
		[387427] = {
			["npcID"] = 181775,
		},
		[358760] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 176521,
			["encounterID"] = 2433,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 96015,
		},
		[354666] = {
			["npcID"] = 179580,
		},
		[358762] = {
			["npcID"] = 180389,
		},
		[385383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Overseer",
			["npcID"] = 192699,
		},
		[354667] = {
			["npcID"] = 179580,
		},
		[323951] = {
			["npcID"] = 177380,
		},
		[295283] = {
			["npcID"] = 154033,
		},
		[387433] = {
			["source"] = "Zaphil the Defiant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192223,
		},
		[385386] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Menial Attendant",
			["npcID"] = 192702,
		},
		[200901] = {
			["encounterName"] = "Hyrja",
			["source"] = "Solsten",
			["npcID"] = 97219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[358769] = {
			["npcID"] = 180782,
		},
		[385390] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Overseer",
			["npcID"] = 192699,
		},
		[346483] = {
			["npcID"] = 173580,
		},
		[358770] = {
			["npcID"] = 176880,
		},
		[393582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cindershard Igniter",
			["npcID"] = 198382,
		},
		[346484] = {
			["npcID"] = 173580,
		},
		[389487] = {
			["source"] = "Lookout Mordren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193668,
		},
		[407917] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[295291] = {
			["npcID"] = 154033,
		},
		[387440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Beastcaller",
			["npcID"] = 195878,
		},
		[389488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kerzanthi",
			["npcID"] = 196973,
		},
		[393584] = {
			["npcID"] = 196555,
		},
		[358773] = {
			["npcID"] = 179891,
		},
		[377204] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[332156] = {
			["npcID"] = 167963,
		},
		[260291] = {
			["npcID"] = 130958,
		},
		[389495] = {
			["source"] = "Terillod the Devout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193171,
		},
		[257220] = {
			["npcID"] = 166029,
		},
		[395639] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellforged Horror",
			["npcID"] = 194401,
		},
		[137427] = {
			["npcID"] = 170031,
		},
		[393592] = {
			["source"] = "Gethrel the South Wind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193848,
		},
		[389497] = {
			["npcID"] = 187475,
		},
		[167120] = {
			["npcID"] = 81279,
		},
		[278919] = {
			["npcID"] = 170737,
		},
		[227529] = {
			["npcID"] = 114334,
		},
		[336257] = {
			["npcID"] = 164351,
		},
		[358784] = {
			["npcID"] = 179891,
		},
		[295304] = {
			["npcID"] = 154033,
		},
		[387453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Maxdormu",
			["npcID"] = 189668,
		},
		[326021] = {
			["npcID"] = 172312,
		},
		[328069] = {
			["npcID"] = 172072,
		},
		[332165] = {
			["npcID"] = 170414,
		},
		[330118] = {
			["npcID"] = 159755,
		},
		[360835] = {
			["npcID"] = 180722,
		},
		[389505] = {
			["source"] = "Korvelnor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196972,
		},
		[391553] = {
			["npcID"] = 199609,
		},
		[332169] = {
			["npcID"] = 170400,
		},
		[407936] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[395650] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conjured Nightmare",
			["npcID"] = 199014,
		},
		[295311] = {
			["npcID"] = 154033,
		},
		[154839] = {
			["npcID"] = 84110,
		},
		[346506] = {
			["npcID"] = 178193,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[321935] = {
			["npcID"] = 164707,
		},
		[393607] = {
			["source"] = "Bloodclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187553,
		},
		[360845] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181551,
			["encounterID"] = 2544,
		},
		[385419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Custodian",
			["npcID"] = 192703,
		},
		[364942] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[358799] = {
			["npcID"] = 178519,
		},
		[346513] = {
			["npcID"] = 171581,
		},
		[295320] = {
			["npcID"] = 154033,
		},
		[257231] = {
			["npcID"] = 166057,
		},
		[332181] = {
			["npcID"] = 170418,
		},
		[336277] = {
			["npcID"] = 172265,
		},
		[326039] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["encounterID"] = 2362,
			["npcID"] = 162102,
		},
		[393615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Amaa",
			["npcID"] = 188715,
		},
		[295324] = {
			["npcID"] = 144562,
		},
		[387473] = {
			["source"] = "Brinetooth Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187285,
		},
		[348566] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176562,
			["encounterID"] = 2440,
		},
		[319898] = {
			["npcID"] = 168022,
		},
		[350615] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 175727,
		},
		[352663] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[356759] = {
			["npcID"] = 177129,
		},
		[342425] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[401810] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[313757] = {
			["npcID"] = 160974,
		},
		[389524] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Lurking Lunker",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196946,
		},
		[360856] = {
			["npcID"] = 182392,
		},
		[326046] = {
			["npcID"] = 167111,
		},
		[328094] = {
			["npcID"] = 168627,
		},
		[395670] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellforged Horror",
			["npcID"] = 194401,
		},
		[360859] = {
			["npcID"] = 181047,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[356764] = {
			["npcID"] = 175697,
		},
		[383385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Filth Caller",
			["npcID"] = 185656,
		},
		[387481] = {
			["source"] = "Brinetooth Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187285,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[227545] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114316,
			["encounterID"] = 1961,
		},
		[297382] = {
			["encounterName"] = "King Gobbamak",
			["npcID"] = 153172,
			["encounterID"] = 2290,
		},
		[360863] = {
			["npcID"] = 183249,
		},
		[395675] = {
			["source"] = "Embar Firepath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187767,
		},
		[389532] = {
			["source"] = "Laden Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193541,
		},
		[369055] = {
			["npcID"] = 186638,
		},
		[332196] = {
			["npcID"] = 167963,
		},
		[389534] = {
			["npcID"] = 183422,
		},
		[228571] = {
			["npcID"] = 114794,
		},
		[395678] = {
			["npcID"] = 184456,
		},
		[397726] = {
			["source"] = "Shrieking Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187159,
		},
		[375201] = {
			["npcID"] = 191245,
		},
		[385442] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["npcID"] = 189722,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2616,
		},
		[393634] = {
			["source"] = "Rakkesh of the Flow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193849,
		},
		[299438] = {
			["npcID"] = 150249,
		},
		[319916] = {
			["npcID"] = 161410,
		},
		[395685] = {
			["npcID"] = 184456,
		},
		[405924] = {
			["source"] = "Krono Sandtongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205622,
		},
		[360875] = {
			["npcID"] = 180722,
		},
		[321968] = {
			["npcID"] = 164929,
		},
		[360876] = {
			["npcID"] = 182357,
		},
		[387497] = {
			["source"] = "Time-Lost Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187244,
		},
		[344496] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[338353] = {
			["npcID"] = 173016,
		},
		[381356] = {
			["npcID"] = 193292,
		},
		[381357] = {
			["npcID"] = 192854,
		},
		[196838] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 99868,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[395692] = {
			["npcID"] = 184456,
		},
		[369072] = {
			["npcID"] = 181875,
		},
		[118905] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 61245,
		},
		[338357] = {
			["npcID"] = 172981,
		},
		[364978] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 181047,
			["encounterID"] = 2529,
		},
		[358835] = {
			["npcID"] = 177444,
		},
		[338358] = {
			["npcID"] = 165290,
		},
		[364979] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[358836] = {
			["npcID"] = 180664,
		},
		[198888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Storm Drake",
			["npcID"] = 97068,
		},
		[152814] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Bone-Mender",
			["npcID"] = 75713,
		},
		[362934] = {
			["npcID"] = 182326,
		},
		[334266] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[338362] = {
			["npcID"] = 165290,
		},
		[178412] = {
			["npcID"] = 83578,
		},
		[313790] = {
			["npcID"] = 160974,
		},
		[385462] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rellen, The Learned",
			["npcID"] = 190949,
		},
		[199915] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99651,
		},
		[350653] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 177613,
			["encounterID"] = 2430,
		},
		[229608] = {
			["npcID"] = 115486,
		},
		[299460] = {
			["npcID"] = 150250,
		},
		[358845] = {
			["npcID"] = 181133,
		},
		[152818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Bone-Mender",
			["npcID"] = 75713,
		},
		[391610] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gusting Proto-Dragon",
			["npcID"] = 190401,
		},
		[257254] = {
			["npcID"] = 171302,
		},
		[377277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volethi",
			["npcID"] = 200727,
		},
		[395707] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[319941] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[391613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Subterranean Proto-Dragon",
			["npcID"] = 190404,
		},
		[373184] = {
			["npcID"] = 189769,
		},
		[229611] = {
			["npcID"] = 115486,
		},
		[356804] = {
			["npcID"] = 178578,
		},
		[332234] = {
			["npcID"] = 167967,
		},
		[334282] = {
			["npcID"] = 154330,
		},
		[389572] = {
			["npcID"] = 187262,
		},
		[342474] = {
			["npcID"] = 165759,
		},
		[324046] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[321999] = {
			["npcID"] = 164705,
		},
		[299474] = {
			["npcID"] = 150154,
		},
		[387528] = {
			["npcID"] = 186329,
		},
		[332239] = {
			["npcID"] = 170418,
		},
		[317905] = {
			["npcID"] = 159601,
		},
		[328146] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[319956] = {
			["npcID"] = 172217,
		},
		[319957] = {
			["npcID"] = 177134,
		},
		[365008] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183033,
			["encounterID"] = 2546,
		},
		[191735] = {
			["npcID"] = 98954,
		},
		[125056] = {
			["npcID"] = 165189,
		},
		[365009] = {
			["npcID"] = 184409,
		},
		[389583] = {
			["source"] = "Arcane Manipulator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188172,
		},
		[375249] = {
			["npcID"] = 190708,
		},
		[369107] = {
			["npcID"] = 185272,
		},
		[173307] = {
			["npcID"] = 83390,
		},
		[375251] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["npcID"] = 181861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[391634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacial Proto-Dragon",
			["npcID"] = 190403,
		},
		[317916] = {
			["npcID"] = 159112,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["npcID"] = 184422,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[358872] = {
			["npcID"] = 178592,
		},
		[319966] = {
			["npcID"] = 167078,
		},
		[227575] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114316,
			["encounterID"] = 1961,
		},
		[393686] = {
			["npcID"] = 187886,
		},
		[255220] = {
			["npcID"] = 166032,
		},
		[412117] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[397783] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[173311] = {
			["npcID"] = 83390,
		},
		[10452] = {
			["npcID"] = 45569,
		},
		[389594] = {
			["npcID"] = 186430,
		},
		[350687] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[383452] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowscruff Bakar",
			["npcID"] = 193401,
		},
		[80009] = {
			["npcID"] = 82991,
		},
		[344546] = {
			["npcID"] = 162880,
		},
		[362976] = {
			["npcID"] = 183721,
		},
		[228603] = {
			["npcID"] = 114804,
		},
		[381408] = {
			["source"] = "Shiverweb Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192591,
		},
		[338406] = {
			["npcID"] = 173051,
		},
		[260344] = {
			["npcID"] = 166027,
		},
		[285165] = {
			["npcID"] = 144578,
		},
		[393696] = {
			["source"] = "Vadne Bleakheart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195764,
		},
		[189697] = {
			["npcID"] = 161785,
		},
		[346599] = {
			["npcID"] = 168975,
		},
		[328170] = {
			["npcID"] = 162057,
		},
		[299502] = {
			["npcID"] = 155094,
		},
		[352744] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[367079] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[164102] = {
			["npcID"] = 81235,
		},
		[182532] = {
			["npcID"] = 174183,
		},
		[362985] = {
			["npcID"] = 183714,
		},
		[365033] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[369129] = {
			["npcID"] = 186509,
		},
		[387559] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[356843] = {
			["npcID"] = 179388,
		},
		[317936] = {
			["npcID"] = 163459,
		},
		[80012] = {
			["npcID"] = 82991,
		},
		[346605] = {
			["npcID"] = 175801,
		},
		[332272] = {
			["npcID"] = 180028,
		},
		[268792] = {
			["npcID"] = 130242,
		},
		[328177] = {
			["npcID"] = 168572,
		},
		[346607] = {
			["npcID"] = 175857,
		},
		[397801] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[358894] = {
			["npcID"] = 179892,
		},
		[309749] = {
			["npcID"] = 172556,
		},
		[352752] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 178736,
		},
		[387564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conjured Lasher",
			["npcID"] = 196102,
		},
		[162058] = {
			["encounterName"] = "Skylord Tovra",
			["npcID"] = 80005,
			["encounterID"] = 1736,
		},
		[328180] = {
			["npcID"] = 168627,
		},
		[395756] = {
			["npcID"] = 196336,
		},
		[340467] = {
			["npcID"] = 173756,
		},
		[334324] = {
			["npcID"] = 171376,
		},
		[340468] = {
			["npcID"] = 159105,
		},
		[317943] = {
			["npcID"] = 163457,
		},
		[334326] = {
			["npcID"] = 171376,
		},
		[352756] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 178738,
		},
		[295420] = {
			["npcID"] = 144580,
		},
		[356853] = {
			["npcID"] = 178577,
		},
		[360949] = {
			["npcID"] = 184268,
		},
		[268801] = {
			["npcID"] = 125460,
		},
		[387571] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[200969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Tor",
			["npcID"] = 97084,
		},
		[395763] = {
			["npcID"] = 196336,
		},
		[340474] = {
			["npcID"] = 169874,
		},
		[319997] = {
			["npcID"] = 164510,
		},
		[381430] = {
			["npcID"] = 186849,
		},
		[295425] = {
			["npcID"] = 154039,
		},
		[393718] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Amaa",
			["npcID"] = 188715,
		},
		[227592] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[336383] = {
			["npcID"] = 179755,
		},
		[299525] = {
			["npcID"] = 150250,
		},
		[326146] = {
			["npcID"] = 157558,
		},
		[385531] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["npcID"] = 189722,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2616,
		},
		[377341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqua Rager",
			["npcID"] = 190407,
		},
		[338434] = {
			["npcID"] = 162875,
		},
		[162066] = {
			["encounterName"] = "Skylord Tovra",
			["npcID"] = 80005,
			["encounterID"] = 1736,
		},
		[360960] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181224,
			["encounterID"] = 2540,
		},
		[381438] = {
			["source"] = "Subdued Steamdrop",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182455,
		},
		[375296] = {
			["source"] = "Skulking Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196384,
		},
		[377344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Territorial Eagle",
			["npcID"] = 192329,
		},
		[324103] = {
			["npcID"] = 162133,
		},
		[320008] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[387585] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[367108] = {
			["npcID"] = 184413,
		},
		[346631] = {
			["npcID"] = 175930,
		},
		[317963] = {
			["npcID"] = 163458,
		},
		[369157] = {
			["npcID"] = 188372,
		},
		[381444] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["npcID"] = 186122,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[393731] = {
			["source"] = "Flayfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187505,
		},
		[358921] = {
			["npcID"] = 178615,
		},
		[328206] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[383496] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[365067] = {
			["npcID"] = 182318,
		},
		[395784] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[363021] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183463,
			["encounterID"] = 2546,
		},
		[274968] = {
			["npcID"] = 170414,
		},
		[342544] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[320019] = {
			["npcID"] = 167022,
		},
		[387596] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Mystic",
			["npcID"] = 195877,
		},
		[379406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavabearer",
			["npcID"] = 189472,
		},
		[198934] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Mystic",
			["npcID"] = 95834,
		},
		[360977] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[385551] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["npcID"] = 189722,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2616,
		},
		[391696] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Thundering Ravager",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190690,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Stormseeker Acolyte",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194990,
		},
		[356885] = {
			["npcID"] = 179851,
		},
		[338456] = {
			["npcID"] = 172981,
		},
		[332313] = {
			["encounterName"] = "Domina Venomblade",
			["npcID"] = 164266,
			["encounterID"] = 2385,
		},
		[326171] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[320028] = {
			["npcID"] = 177252,
		},
		[356888] = {
			["npcID"] = 177813,
		},
		[328221] = {
			["npcID"] = 166723,
		},
		[395797] = {
			["source"] = "Primalist Frostsculptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198424,
		},
		[358938] = {
			["npcID"] = 180840,
		},
		[393750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taresh",
			["npcID"] = 188711,
		},
		[332318] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 164407,
			["encounterID"] = 2399,
		},
		[317985] = {
			["npcID"] = 163520,
		},
		[393752] = {
			["source"] = "Vadne Bleakheart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195764,
		},
		[346654] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[326177] = {
			["npcID"] = 167437,
		},
		[340512] = {
			["npcID"] = 167078,
		},
		[336418] = {
			["npcID"] = 175857,
		},
		[387613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Corruptor",
			["npcID"] = 195842,
		},
		[356897] = {
			["npcID"] = 177294,
		},
		[375327] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Subterranean Proto-Dragon",
			["npcID"] = 190404,
		},
		[387614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Deathspeaker",
			["npcID"] = 195851,
		},
		[363042] = {
			["npcID"] = 185759,
		},
		[285228] = {
			["npcID"] = 150734,
		},
		[168227] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 83612,
			["encounterID"] = 1754,
		},
		[385569] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[338471] = {
			["npcID"] = 162100,
		},
		[356901] = {
			["npcID"] = 177004,
		},
		[375331] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[387618] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primalist Infuser",
			["npcID"] = 196043,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[332329] = {
			["npcID"] = 170486,
		},
		[228637] = {
			["npcID"] = 114802,
		},
		[277041] = {
			["npcID"] = 154020,
		},
		[395811] = {
			["npcID"] = 187599,
		},
		[277043] = {
			["npcID"] = 154018,
		},
		[377383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alpha Eagle",
			["npcID"] = 192333,
		},
		[264757] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[227615] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[334381] = {
			["npcID"] = 171384,
		},
		[377384] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqua Rager",
			["npcID"] = 190407,
		},
		[332335] = {
			["npcID"] = 170488,
		},
		[395816] = {
			["npcID"] = 191524,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[324146] = {
			["encounterName"] = "Ventunax",
			["encounterID"] = 2356,
			["npcID"] = 162058,
		},
		[369197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Firebinder",
			["npcID"] = 186605,
		},
		[391723] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamegullet",
			["npcID"] = 197697,
		},
		[377389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alpha Eagle",
			["npcID"] = 192333,
		},
		[395819] = {
			["npcID"] = 187602,
		},
		[393772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hihveer",
			["npcID"] = 188717,
		},
		[222499] = {
			["npcID"] = 162829,
		},
		[356913] = {
			["npcID"] = 179851,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[391726] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderhead",
			["npcID"] = 197698,
		},
		[387631] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gamgus",
			["npcID"] = 194240,
		},
		[358963] = {
			["npcID"] = 180864,
		},
		[328248] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165763,
			["encounterID"] = 2402,
		},
		[338488] = {
			["npcID"] = 173066,
		},
		[340536] = {
			["npcID"] = 173783,
		},
		[375348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gusting Proto-Dragon",
			["npcID"] = 190401,
		},
		[365110] = {
			["npcID"] = 183746,
		},
		[358967] = {
			["npcID"] = 179446,
		},
		[303678] = {
			["npcID"] = 155793,
		},
		[338490] = {
			["npcID"] = 162875,
		},
		[393780] = {
			["source"] = "Flame Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192764,
		},
		[375351] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacial Proto-Dragon",
			["npcID"] = 190403,
		},
		[393781] = {
			["source"] = "Flame Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192764,
		},
		[389686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystal Fury",
			["npcID"] = 187160,
		},
		[358970] = {
			["npcID"] = 179891,
		},
		[328254] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 168700,
			["encounterID"] = 2402,
		},
		[356923] = {
			["npcID"] = 179890,
		},
		[358971] = {
			["npcID"] = 179890,
		},
		[393783] = {
			["source"] = "Iskakx",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192761,
		},
		[356924] = {
			["npcID"] = 179890,
		},
		[377402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infuser Sariya",
			["npcID"] = 190405,
		},
		[299588] = {
			["npcID"] = 150251,
		},
		[395833] = {
			["npcID"] = 196913,
		},
		[397881] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59873,
		},
		[320067] = {
			["npcID"] = 177217,
		},
		[395834] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonebolt Hunter",
			["npcID"] = 197121,
		},
		[361023] = {
			["npcID"] = 181005,
		},
		[356928] = {
			["npcID"] = 177131,
		},
		[336451] = {
			["npcID"] = 163862,
		},
		[346690] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[365120] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[334404] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[352834] = {
			["npcID"] = 176959,
		},
		[399933] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tukkaraq's Boat",
			["npcID"] = 201121,
		},
		[336453] = {
			["npcID"] = 176002,
		},
		[397886] = {
			["source"] = "Corrupt Droplet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 62358,
		},
		[361027] = {
			["npcID"] = 181093,
		},
		[358980] = {
			["npcID"] = 180864,
		},
		[397888] = {
			["source"] = "Fallen Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200126,
		},
		[377411] = {
			["npcID"] = 192938,
		},
		[395841] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bracken Warscourge",
			["npcID"] = 197120,
		},
		[397889] = {
			["source"] = "Fallen Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200126,
		},
		[358982] = {
			["npcID"] = 180865,
		},
		[365126] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181548,
			["encounterID"] = 2544,
		},
		[159030] = {
			["npcID"] = 81396,
		},
		[387652] = {
			["npcID"] = 187203,
		},
		[346698] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[397892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[367176] = {
			["npcID"] = 184409,
		},
		[352842] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[352843] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[371273] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 188302,
			["encounterID"] = 2418,
		},
		[381512] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["npcID"] = 190485,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[350796] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[320081] = {
			["npcID"] = 177217,
		},
		[387657] = {
			["npcID"] = 186329,
		},
		[356941] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[356942] = {
			["npcID"] = 179837,
		},
		[381516] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["npcID"] = 190485,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[326227] = {
			["npcID"] = 157558,
		},
		[377421] = {
			["npcID"] = 192938,
		},
		[397899] = {
			["source"] = "Sha-Touched Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200131,
		},
		[363088] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[373327] = {
			["encounterName"] = "Eranog",
			["source"] = "Primal Flame",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187593,
		},
		[354898] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[340564] = {
			["npcID"] = 169206,
		},
		[326230] = {
			["npcID"] = 165829,
		},
		[393806] = {
			["source"] = "Stoneheart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187387,
		},
		[373329] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[395855] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Blue Gulper",
			["npcID"] = 195976,
		},
		[381521] = {
			["source"] = "Summoned Downpour",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192462,
		},
		[361044] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182305,
			["encounterID"] = 2544,
		},
		[397904] = {
			["source"] = "Sha-Touched Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200131,
		},
		[395857] = {
			["npcID"] = 189834,
		},
		[332377] = {
			["npcID"] = 170513,
		},
		[356951] = {
			["npcID"] = 177004,
		},
		[358999] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
		},
		[354904] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[381525] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["npcID"] = 190484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[395860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gargantuan Hornswog",
			["npcID"] = 191606,
		},
		[387670] = {
			["source"] = "Time-Lost Chieftain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187266,
		},
		[375384] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthshaker",
			["npcID"] = 190371,
		},
		[322143] = {
			["npcID"] = 156559,
		},
		[356955] = {
			["npcID"] = 176880,
		},
		[375385] = {
			["npcID"] = 190739,
		},
		[328287] = {
			["npcID"] = 167550,
		},
		[356956] = {
			["npcID"] = 177551,
		},
		[301667] = {
			["npcID"] = 150292,
		},
		[361052] = {
			["npcID"] = 180722,
		},
		[381530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Thunderfist",
			["npcID"] = 193373,
		},
		[377435] = {
			["npcID"] = 187265,
		},
		[375388] = {
			["npcID"] = 190995,
		},
		[397914] = {
			["source"] = "Depraved Mistweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200137,
		},
		[350816] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 176531,
			["encounterID"] = 2433,
		},
		[161090] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77816,
			["encounterID"] = 1715,
		},
		[387677] = {
			["npcID"] = 190214,
		},
		[177473] = {
			["npcID"] = 82876,
		},
		[381535] = {
			["npcID"] = 187079,
		},
		[340581] = {
			["npcID"] = 166279,
		},
		[328295] = {
			["npcID"] = 168718,
		},
		[395871] = {
			["npcID"] = 189834,
		},
		[365155] = {
			["npcID"] = 183746,
		},
		[395872] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59546,
		},
		[174403] = {
			["npcID"] = 86330,
		},
		[354918] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[387683] = {
			["npcID"] = 187203,
		},
		[356967] = {
			["npcID"] = 180348,
		},
		[330347] = {
			["npcID"] = 157583,
		},
		[227646] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114318,
			["encounterID"] = 1961,
		},
		[295536] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[324205] = {
			["encounterName"] = "Ventunax",
			["encounterID"] = 2356,
			["npcID"] = 162058,
		},
		[377447] = {
			["npcID"] = 192220,
		},
		[340588] = {
			["npcID"] = 166467,
		},
		[301681] = {
			["npcID"] = 150292,
		},
		[361066] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181551,
			["encounterID"] = 2544,
		},
		[395878] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59546,
		},
		[356971] = {
			["npcID"] = 180087,
		},
		[350828] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[371306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 186741,
		},
		[164168] = {
			["npcID"] = 81212,
		},
		[158025] = {
			["encounterName"] = "Imperator Mar'gok",
			["npcID"] = 77428,
			["encounterID"] = 1705,
		},
		[167240] = {
			["npcID"] = 83028,
		},
		[320114] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[165193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stele",
			["npcID"] = 72627,
		},
		[397931] = {
			["source"] = "Minion of Doubt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 57109,
		},
		[367215] = {
			["npcID"] = 184395,
		},
		[336499] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[365168] = {
			["npcID"] = 184530,
		},
		[395885] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[365169] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[371313] = {
			["npcID"] = 186336,
		},
		[391791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Furious Deluge",
			["npcID"] = 197220,
		},
		[320120] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164463,
		},
		[354932] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[359028] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176563,
			["encounterID"] = 2440,
		},
		[354933] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[356981] = {
			["npcID"] = 177529,
		},
		[391793] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Furious Deluge",
			["npcID"] = 197220,
		},
		[373364] = {
			["npcID"] = 189878,
		},
		[320123] = {
			["npcID"] = 168966,
		},
		[363126] = {
			["npcID"] = 181027,
		},
		[356984] = {
			["npcID"] = 178402,
		},
		[354938] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[328318] = {
			["npcID"] = 177912,
		},
		[363130] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[391799] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wilted Oak",
			["npcID"] = 197131,
		},
		[373370] = {
			["npcID"] = 189878,
		},
		[367228] = {
			["npcID"] = 184767,
		},
		[375420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tenacious Timbertooth",
			["npcID"] = 196185,
		},
		[328322] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164363,
			["encounterID"] = 2380,
		},
		[291463] = {
			["npcID"] = 150738,
		},
		[320132] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[395899] = {
			["source"] = "Primalist Chillblaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199124,
		},
		[375422] = {
			["source"] = "Riverbend Gnasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189337,
		},
		[361088] = {
			["npcID"] = 181027,
		},
		[191823] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[365185] = {
			["npcID"] = 184659,
		},
		[320135] = {
			["npcID"] = 167470,
		},
		[377473] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[381570] = {
			["npcID"] = 186849,
		},
		[340617] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 173112,
			["encounterID"] = 2418,
		},
		[408193] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[393859] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skittering Woodborer",
			["npcID"] = 189762,
		},
		[320141] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[395908] = {
			["source"] = "Primal Icebulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192767,
		},
		[334476] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[381575] = {
			["source"] = "Rustpine Immolator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187396,
		},
		[332430] = {
			["npcID"] = 177132,
		},
		[320144] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[340622] = {
			["npcID"] = 173798,
		},
		[393864] = {
			["npcID"] = 186516,
		},
		[322193] = {
			["npcID"] = 171255,
		},
		[340623] = {
			["npcID"] = 173798,
		},
		[377483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadeslash Trakken",
			["npcID"] = 193271,
		},
		[285335] = {
			["npcID"] = 177131,
		},
		[328338] = {
			["npcID"] = 167493,
		},
		[330386] = {
			["npcID"] = 158976,
		},
		[330387] = {
			["npcID"] = 159178,
		},
		[350865] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177154,
		},
		[377486] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Agent",
			["npcID"] = 184335,
		},
		[330388] = {
			["npcID"] = 159178,
		},
		[340627] = {
			["npcID"] = 173798,
		},
		[391821] = {
			["npcID"] = 189654,
		},
		[352914] = {
			["npcID"] = 177397,
		},
		[210261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Sentry",
			["npcID"] = 104251,
		},
		[373392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Hornsounder",
			["npcID"] = 192796,
		},
		[334485] = {
			["encounterName"] = "Ventunax",
			["encounterID"] = 2356,
			["npcID"] = 162058,
		},
		[377488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Seal Keeper",
			["npcID"] = 187155,
		},
		[357011] = {
			["npcID"] = 177514,
		},
		[330391] = {
			["npcID"] = 159178,
		},
		[377490] = {
			["npcID"] = 191057,
		},
		[373395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Defender",
			["npcID"] = 199717,
		},
		[391825] = {
			["npcID"] = 190995,
		},
		[387732] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190780,
		},
		[375446] = {
			["npcID"] = 187960,
		},
		[330397] = {
			["npcID"] = 178281,
		},
		[334493] = {
			["npcID"] = 164862,
		},
		[381592] = {
			["source"] = "Sundered Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188173,
		},
		[381593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebonstone Golem",
			["npcID"] = 184300,
		},
		[164192] = {
			["npcID"] = 81236,
		},
		[330400] = {
			["npcID"] = 161553,
		},
		[365212] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[391833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sherath",
			["npcID"] = 188710,
		},
		[393881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nezascar the Sightless",
			["npcID"] = 196535,
		},
		[275112] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blisterhide",
			["npcID"] = 197353,
		},
		[377500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Agent",
			["npcID"] = 184335,
		},
		[373405] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[334498] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[371358] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Curator",
			["npcID"] = 187154,
		},
		[340642] = {
			["npcID"] = 170872,
		},
		[377502] = {
			["npcID"] = 187271,
		},
		[391837] = {
			["npcID"] = 191252,
		},
		[377503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Seal Keeper",
			["npcID"] = 187155,
		},
		[393886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aizir the Inflamed",
			["npcID"] = 191306,
		},
		[395934] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Trickclaw Mystic",
			["npcID"] = 197119,
		},
		[316072] = {
			["npcID"] = 159174,
		},
		[375457] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191222,
		},
		[320168] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[340646] = {
			["npcID"] = 173802,
		},
		[391840] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taresh",
			["npcID"] = 188711,
		},
		[395936] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clearwater Bull",
			["npcID"] = 192652,
		},
		[381602] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["npcID"] = 190484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[375459] = {
			["npcID"] = 191827,
		},
		[320170] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 162692,
		},
		[330409] = {
			["npcID"] = 158420,
		},
		[391842] = {
			["source"] = "Stormfang Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187552,
		},
		[328362] = {
			["npcID"] = 167834,
		},
		[340649] = {
			["npcID"] = 180096,
		},
		[17843] = {
			["npcID"] = 189583,
		},
		[387748] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Zambul",
			["npcID"] = 191145,
		},
		[381605] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["npcID"] = 190484,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[328365] = {
			["npcID"] = 167493,
		},
		[395941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clearwater Bull",
			["npcID"] = 192652,
		},
		[334509] = {
			["npcID"] = 177294,
		},
		[393894] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nezascar the Sightless",
			["npcID"] = 196535,
		},
		[326319] = {
			["npcID"] = 164921,
		},
		[338606] = {
			["npcID"] = 167731,
		},
		[406183] = {
			["source"] = "Krono Sandtongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205622,
		},
		[391849] = {
			["npcID"] = 186438,
		},
		[336560] = {
			["npcID"] = 180627,
		},
		[330417] = {
			["npcID"] = 169696,
		},
		[211299] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[85692] = {
			["npcID"] = 11859,
		},
		[395946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Filth Caller",
			["npcID"] = 197122,
		},
		[395947] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decay Speaker",
			["npcID"] = 197124,
		},
		[389804] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Curator",
			["npcID"] = 187154,
		},
		[250208] = {
			["npcID"] = 170122,
		},
		[373424] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[174442] = {
			["npcID"] = 86256,
		},
		[391855] = {
			["npcID"] = 183422,
		},
		[330423] = {
			["npcID"] = 168572,
		},
		[340662] = {
			["npcID"] = 172078,
		},
		[336567] = {
			["npcID"] = 165976,
		},
		[395952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonecrusher",
			["npcID"] = 197125,
		},
		[375475] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191222,
		},
		[346807] = {
			["npcID"] = 175700,
		},
		[373429] = {
			["npcID"] = 189878,
		},
		[334522] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[322236] = {
			["encounterName"] = "Stradama Margrave",
			["npcID"] = 165430,
			["encounterID"] = 2386,
		},
		[369335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runic Protector",
			["npcID"] = 184107,
		},
		[371383] = {
			["npcID"] = 189378,
		},
		[400052] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swooping Flayer",
			["npcID"] = 199809,
		},
		[346811] = {
			["npcID"] = 177735,
		},
		[367290] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[250213] = {
			["npcID"] = 161527,
		},
		[346813] = {
			["npcID"] = 152905,
		},
		[400055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Slicer",
			["npcID"] = 203384,
		},
		[391866] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brackenhide Putrifier",
			["npcID"] = 192057,
		},
		[377532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Crasher",
			["npcID"] = 191057,
		},
		[375485] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191230,
		},
		[320196] = {
			["npcID"] = 175605,
		},
		[340674] = {
			["npcID"] = 165053,
		},
		[412346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Corsair",
			["npcID"] = 126928,
		},
		[324293] = {
			["npcID"] = 165919,
		},
		[330438] = {
			["npcID"] = 165976,
		},
		[285388] = {
			["encounterName"] = "Tussle Tonks",
			["npcID"] = 145185,
			["encounterID"] = 2257,
		},
		[320200] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[395967] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Hyena",
			["npcID"] = 197123,
		},
		[340678] = {
			["npcID"] = 172079,
		},
		[336584] = {
			["npcID"] = 164476,
		},
		[350919] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176563,
			["encounterID"] = 2440,
		},
		[344776] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 175205,
			["encounterID"] = 2407,
		},
		[334538] = {
			["npcID"] = 171422,
		},
		[328395] = {
			["npcID"] = 171656,
		},
		[406210] = {
			["source"] = "Thorak Greenscale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205618,
		},
		[340683] = {
			["npcID"] = 162708,
		},
		[350922] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 179269,
			["encounterID"] = 2440,
		},
		[338636] = {
			["npcID"] = 167731,
		},
		[365257] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182071,
			["encounterID"] = 2539,
		},
		[387783] = {
			["source"] = "Windseeker Avash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192045,
		},
		[334542] = {
			["npcID"] = 171422,
		},
		[176502] = {
			["npcID"] = 83689,
		},
		[328400] = {
			["npcID"] = 164737,
		},
		[29492] = {
			["npcID"] = 114625,
		},
		[346832] = {
			["npcID"] = 176262,
		},
		[383693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Beastmaster",
			["npcID"] = 192794,
		},
		[369359] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infused Proto-Drake",
			["npcID"] = 189515,
		},
		[332500] = {
			["npcID"] = 173582,
		},
		[361169] = {
			["npcID"] = 182466,
		},
		[162171] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77803,
			["encounterID"] = 1715,
		},
		[342741] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 172858,
			["encounterID"] = 2417,
		},
		[369365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Warder",
			["npcID"] = 184132,
		},
		[330458] = {
			["npcID"] = 151331,
		},
		[328411] = {
			["npcID"] = 159106,
		},
		[161150] = {
			["npcID"] = 80936,
		},
		[365272] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181551,
			["encounterID"] = 2544,
		},
		[377559] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["npcID"] = 186120,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2568,
		},
		[332509] = {
			["npcID"] = 164555,
		},
		[171390] = {
			["npcID"] = 80380,
		},
		[328414] = {
			["npcID"] = 159106,
		},
		[338653] = {
			["npcID"] = 173044,
		},
		[357083] = {
			["npcID"] = 180417,
		},
		[334558] = {
			["npcID"] = 171448,
		},
		[395991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Torrent",
			["npcID"] = 197221,
		},
		[357084] = {
			["npcID"] = 180379,
		},
		[391896] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Lifeguardian",
			["npcID"] = 187101,
		},
		[357085] = {
			["npcID"] = 176959,
		},
		[342751] = {
			["npcID"] = 171596,
		},
		[322274] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 164815,
		},
		[381659] = {
			["npcID"] = 186962,
		},
		[342752] = {
			["npcID"] = 173633,
		},
		[324323] = {
			["npcID"] = 165919,
		},
		[176512] = {
			["npcID"] = 83692,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["encounterID"] = 1817,
			["npcID"] = 95887,
		},
		[318181] = {
			["npcID"] = 157274,
		},
		[385757] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mender Eskros",
			["npcID"] = 195303,
		},
		[340707] = {
			["npcID"] = 172084,
		},
		[320230] = {
			["encounterName"] = "Dealer Xy'exa",
			["encounterID"] = 2400,
			["npcID"] = 164450,
		},
		[152964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Spawn",
			["npcID"] = 75652,
		},
		[381663] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Blazewing",
			["npcID"] = 193291,
		},
		[171394] = {
			["npcID"] = 80379,
		},
		[357091] = {
			["npcID"] = 178731,
		},
		[391903] = {
			["npcID"] = 186582,
		},
		[176514] = {
			["npcID"] = 83694,
		},
		[330471] = {
			["npcID"] = 153174,
		},
		[334567] = {
			["npcID"] = 171448,
		},
		[279278] = {
			["npcID"] = 152500,
		},
		[322281] = {
			["npcID"] = 156559,
		},
		[396001] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59553,
		},
		[340712] = {
			["npcID"] = 162697,
		},
		[257402] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[355048] = {
			["npcID"] = 178139,
		},
		[355049] = {
			["npcID"] = 176535,
		},
		[328429] = {
			["npcID"] = 168022,
		},
		[355050] = {
			["npcID"] = 176535,
		},
		[332525] = {
			["npcID"] = 171396,
		},
		[391910] = {
			["source"] = "Mordigan Ironjaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187353,
		},
		[332526] = {
			["npcID"] = 171396,
		},
		[330479] = {
			["npcID"] = 153382,
		},
		[391913] = {
			["source"] = "Gnawbone Splintershield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197847,
		},
		[357102] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[320243] = {
			["npcID"] = 160905,
		},
		[355055] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
			["encounterID"] = 2422,
		},
		[256382] = {
			["npcID"] = 127807,
		},
		[391915] = {
			["source"] = "Cragsworn Stoneshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191661,
		},
		[365295] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[342770] = {
			["npcID"] = 173604,
		},
		[355057] = {
			["npcID"] = 178139,
		},
		[326389] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[328437] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[389870] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197145,
		},
		[338677] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173161,
			["encounterID"] = 2407,
		},
		[365298] = {
			["npcID"] = 184539,
		},
		[381681] = {
			["source"] = "Rustpine Immolator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187396,
		},
		[326392] = {
			["npcID"] = 157212,
		},
		[410351] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[387826] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Beastcaller",
			["npcID"] = 195878,
		},
		[381683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Warspear",
			["npcID"] = 192791,
		},
		[355063] = {
			["npcID"] = 178623,
		},
		[285440] = {
			["encounterName"] = "Machinist's Garden",
			["npcID"] = 144248,
			["encounterID"] = 2259,
		},
		[9053] = {
			["npcID"] = 41272,
		},
		[357112] = {
			["npcID"] = 177831,
		},
		[369399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Weaver",
			["npcID"] = 186420,
		},
		[396020] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59545,
		},
		[199050] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Shieldmaiden",
			["npcID"] = 95832,
		},
		[369400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Warder",
			["npcID"] = 184132,
		},
		[338684] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173162,
			["encounterID"] = 2407,
		},
		[215433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Mystic",
			["npcID"] = 95834,
		},
		[326399] = {
			["npcID"] = 155251,
		},
		[396023] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[355069] = {
			["npcID"] = 178625,
		},
		[375547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Eruption",
			["npcID"] = 191286,
		},
		[338688] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173164,
			["encounterID"] = 2407,
		},
		[355072] = {
			["npcID"] = 178628,
		},
		[340738] = {
			["npcID"] = 167848,
		},
		[330500] = {
			["npcID"] = 155250,
		},
		[381694] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["npcID"] = 186124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[355074] = {
			["npcID"] = 178628,
		},
		[369409] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Earthen Custodian",
			["npcID"] = 184130,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[332550] = {
			["npcID"] = 169875,
		},
		[357124] = {
			["npcID"] = 180780,
		},
		[310026] = {
			["npcID"] = 166159,
		},
		[369411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cavern Seeker",
			["npcID"] = 184301,
		},
		[357125] = {
			["npcID"] = 176879,
		},
		[326409] = {
			["npcID"] = 164557,
		},
		[328458] = {
			["npcID"] = 168844,
		},
		[387843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Invoker",
			["npcID"] = 196202,
		},
		[381701] = {
			["source"] = "Augmented Flood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192457,
		},
		[342794] = {
			["npcID"] = 174336,
		},
		[377608] = {
			["npcID"] = 189217,
		},
		[340749] = {
			["npcID"] = 167548,
		},
		[377609] = {
			["npcID"] = 185594,
		},
		[340750] = {
			["npcID"] = 167548,
		},
		[391944] = {
			["source"] = "Gnawbone Splintershield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197847,
		},
		[396040] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["npcID"] = 199233,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[344847] = {
			["npcID"] = 178226,
		},
		[396041] = {
			["source"] = "Cracked Concretion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197074,
		},
		[389898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 196992,
		},
		[361230] = {
			["npcID"] = 182561,
		},
		[357135] = {
			["npcID"] = 180387,
		},
		[310037] = {
			["npcID"] = 166159,
		},
		[344849] = {
			["npcID"] = 175240,
		},
		[406282] = {
			["source"] = "Thorak Greenscale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205618,
		},
		[391948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steam Coalescence",
			["npcID"] = 190110,
		},
		[369423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skittering Crawler",
			["npcID"] = 184303,
		},
		[396044] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[361233] = {
			["npcID"] = 182158,
		},
		[355090] = {
			["npcID"] = 178628,
		},
		[357139] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[310041] = {
			["npcID"] = 166159,
		},
		[332567] = {
			["npcID"] = 170228,
		},
		[283422] = {
			["encounterName"] = "Tussle Tonks",
			["npcID"] = 145185,
			["encounterID"] = 2257,
		},
		[259473] = {
			["npcID"] = 131331,
		},
		[340760] = {
			["npcID"] = 166140,
		},
		[273185] = {
			["npcID"] = 150251,
		},
		[340761] = {
			["npcID"] = 166140,
		},
		[257426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[328475] = {
			["npcID"] = 164737,
		},
		[60781] = {
			["npcID"] = 30205,
		},
		[373526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shimmering Swallowtail",
			["npcID"] = 189744,
		},
		[375575] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191230,
		},
		[340764] = {
			["npcID"] = 173864,
		},
		[391958] = {
			["npcID"] = 194159,
		},
		[391959] = {
			["npcID"] = 195846,
		},
		[227736] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114312,
			["encounterID"] = 1961,
		},
		[256405] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[375580] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[324387] = {
			["npcID"] = 165197,
		},
		[320293] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[330532] = {
			["npcID"] = 164510,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[193951] = {
			["npcID"] = 97677,
		},
		[359203] = {
			["npcID"] = 184059,
		},
		[385824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rageclaw",
			["npcID"] = 187192,
		},
		[326441] = {
			["npcID"] = 164557,
		},
		[324394] = {
			["npcID"] = 165197,
		},
		[385827] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rageclaw",
			["npcID"] = 187192,
		},
		[412448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deepflayer Broodmatron",
			["npcID"] = 200115,
		},
		[320300] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[375591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbling Sapling",
			["npcID"] = 191313,
		},
		[344875] = {
			["npcID"] = 171317,
		},
		[396069] = {
			["npcID"] = 187090,
		},
		[318255] = {
			["npcID"] = 163575,
		},
		[385832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rageclaw",
			["npcID"] = 187192,
		},
		[396071] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayed Elder",
			["npcID"] = 197142,
		},
		[265016] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[348974] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[303924] = {
			["npcID"] = 155911,
		},
		[396073] = {
			["source"] = "The Nodding Tiger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59544,
		},
		[326450] = {
			["npcID"] = 164562,
		},
		[173480] = {
			["npcID"] = 83389,
		},
		[373549] = {
			["source"] = "Grimy Skimmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189614,
		},
		[396075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Torrent",
			["npcID"] = 197221,
		},
		[322358] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 164967,
			["encounterID"] = 2384,
		},
		[340788] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[391982] = {
			["npcID"] = 189538,
		},
		[355123] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[326455] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[357172] = {
			["npcID"] = 178575,
		},
		[316218] = {
			["npcID"] = 178056,
		},
		[330553] = {
			["npcID"] = 178979,
		},
		[365365] = {
			["npcID"] = 184603,
		},
		[359222] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 180158,
			["encounterID"] = 2440,
		},
		[355127] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
			["encounterID"] = 2422,
		},
		[340793] = {
			["npcID"] = 166140,
		},
		[375605] = {
			["npcID"] = 185272,
		},
		[130265] = {
			["npcID"] = 66291,
		},
		[396084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Force of the Springs",
			["npcID"] = 197008,
		},
		[394037] = {
			["npcID"] = 187036,
		},
		[332605] = {
			["npcID"] = 170572,
		},
		[334653] = {
			["npcID"] = 165076,
		},
		[369465] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Weaver",
			["npcID"] = 186420,
		},
		[322367] = {
			["npcID"] = 165485,
		},
		[326463] = {
			["npcID"] = 164036,
		},
		[355132] = {
			["npcID"] = 178141,
		},
		[130266] = {
			["npcID"] = 66200,
		},
		[326464] = {
			["npcID"] = 164036,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[340799] = {
			["npcID"] = 166139,
		},
		[322370] = {
			["npcID"] = 157054,
		},
		[330562] = {
			["npcID"] = 164506,
		},
		[389947] = {
			["npcID"] = 190932,
		},
		[377661] = {
			["npcID"] = 190216,
		},
		[389948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Zambul",
			["npcID"] = 191145,
		},
		[389949] = {
			["npcID"] = 187299,
		},
		[359233] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 181047,
			["encounterID"] = 2529,
		},
		[394045] = {
			["source"] = "Vadne Bleakheart",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195764,
		},
		[346947] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 175646,
			["encounterID"] = 2424,
		},
		[391998] = {
			["npcID"] = 192274,
		},
		[281420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[389951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[391999] = {
			["npcID"] = 185445,
		},
		[357188] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[359236] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[205231] = {
			["npcID"] = 103673,
		},
		[324425] = {
			["npcID"] = 177211,
		},
		[367428] = {
			["npcID"] = 184962,
		},
		[351047] = {
			["npcID"] = 178392,
		},
		[324427] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[357192] = {
			["npcID"] = 178576,
		},
		[303952] = {
			["npcID"] = 155910,
		},
		[387910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Algeth'ar Echoknight",
			["npcID"] = 196200,
		},
		[365385] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 184622,
		},
		[392006] = {
			["npcID"] = 186668,
		},
		[330574] = {
			["npcID"] = 179755,
		},
		[398150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Dominator",
			["npcID"] = 76446,
		},
		[392007] = {
			["npcID"] = 183343,
		},
		[320336] = {
			["npcID"] = 163126,
		},
		[346957] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 175667,
		},
		[357196] = {
			["npcID"] = 180336,
		},
		[357197] = {
			["npcID"] = 180336,
		},
		[342863] = {
			["encounterName"] = "Shriekwing",
			["encounterID"] = 2398,
			["npcID"] = 164406,
		},
		[412488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crawling Goo",
			["npcID"] = 205820,
		},
		[398154] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defiled Spirit",
			["npcID"] = 75451,
		},
		[396107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadeslash Trakken",
			["npcID"] = 193271,
		},
		[375630] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191232,
		},
		[73958] = {
			["npcID"] = 39464,
		},
		[392013] = {
			["npcID"] = 187036,
		},
		[328533] = {
			["npcID"] = 163862,
		},
		[383823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Hornsounder",
			["npcID"] = 192796,
		},
		[357203] = {
			["npcID"] = 178056,
		},
		[342869] = {
			["npcID"] = 168934,
		},
		[361300] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[168380] = {
			["npcID"] = 84201,
		},
		[330586] = {
			["npcID"] = 169927,
		},
		[342873] = {
			["npcID"] = 177589,
		},
		[168381] = {
			["npcID"] = 84201,
		},
		[344922] = {
			["npcID"] = 168148,
		},
		[365400] = {
			["npcID"] = 184413,
		},
		[351066] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[68841] = {
			["npcID"] = 36272,
		},
		[351067] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[346972] = {
			["npcID"] = 169605,
		},
		[324447] = {
			["npcID"] = 177211,
		},
		[406358] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[342878] = {
			["npcID"] = 171189,
		},
		[180670] = {
			["npcID"] = 90215,
		},
		[355166] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177289,
		},
		[385883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Custodian",
			["npcID"] = 192703,
		},
		[198077] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["npcID"] = 95676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[351073] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[371551] = {
			["source"] = "Stormfang Dustcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187551,
		},
		[357217] = {
			["npcID"] = 180415,
		},
		[359265] = {
			["npcID"] = 185415,
		},
		[320358] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[330597] = {
			["npcID"] = 177418,
		},
		[357218] = {
			["npcID"] = 176957,
		},
		[351075] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177154,
		},
		[297834] = {
			["encounterName"] = "Gunker",
			["npcID"] = 150222,
			["encounterID"] = 2292,
		},
		[332646] = {
			["npcID"] = 162872,
		},
		[318312] = {
			["npcID"] = 166426,
		},
		[353124] = {
			["npcID"] = 178957,
		},
		[297835] = {
			["encounterName"] = "Gunker",
			["npcID"] = 150222,
			["encounterID"] = 2292,
		},
		[349030] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[375652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Tender",
			["npcID"] = 196115,
		},
		[344936] = {
			["npcID"] = 168975,
		},
		[166341] = {
			["npcID"] = 82579,
		},
		[375653] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191232,
		},
		[346985] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[330604] = {
			["npcID"] = 168724,
		},
		[383846] = {
			["npcID"] = 188667,
		},
		[357226] = {
			["npcID"] = 180429,
		},
		[328558] = {
			["npcID"] = 159027,
		},
		[344941] = {
			["npcID"] = 162845,
		},
		[408422] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[361324] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[357229] = {
			["npcID"] = 180348,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[338800] = {
			["npcID"] = 173202,
		},
		[227777] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114260,
			["encounterID"] = 1957,
		},
		[371565] = {
			["npcID"] = 191244,
		},
		[338802] = {
			["npcID"] = 173202,
		},
		[373614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazebound Destroyer",
			["npcID"] = 190034,
		},
		[342898] = {
			["npcID"] = 162123,
		},
		[338803] = {
			["npcID"] = 173202,
		},
		[334708] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 171557,
			["encounterID"] = 2418,
		},
		[387950] = {
			["npcID"] = 195160,
		},
		[227779] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[359282] = {
			["npcID"] = 185415,
		},
		[330614] = {
			["npcID"] = 163086,
		},
		[365426] = {
			["npcID"] = 184413,
		},
		[320376] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[373618] = {
			["npcID"] = 190174,
		},
		[265088] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[265089] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[357238] = {
			["npcID"] = 180429,
		},
		[212423] = {
			["npcID"] = 99541,
		},
		[387955] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Ethereal Restorer",
			["npcID"] = 196203,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2565,
		},
		[357239] = {
			["npcID"] = 180407,
		},
		[351096] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[265091] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[336763] = {
			["npcID"] = 169780,
		},
		[322429] = {
			["npcID"] = 162057,
		},
		[375671] = {
			["npcID"] = 189312,
		},
		[168398] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 84215,
			["encounterID"] = 1754,
		},
		[227783] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114260,
			["encounterID"] = 1957,
		},
		[367481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Claw Fighter",
			["npcID"] = 185508,
		},
		[394102] = {
			["source"] = "Terillod the Devout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193171,
		},
		[357243] = {
			["npcID"] = 180433,
		},
		[383864] = {
			["npcID"] = 192274,
		},
		[387960] = {
			["npcID"] = 195160,
		},
		[332671] = {
			["npcID"] = 170480,
		},
		[322433] = {
			["npcID"] = 162057,
		},
		[357245] = {
			["npcID"] = 180407,
		},
		[383866] = {
			["npcID"] = 194526,
		},
		[324483] = {
			["npcID"] = 177211,
		},
		[257478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Mastiff",
			["npcID"] = 128551,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["npcID"] = 186616,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[387965] = {
			["npcID"] = 187232,
		},
		[320390] = {
			["npcID"] = 168697,
		},
		[371584] = {
			["npcID"] = 191318,
		},
		[398206] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Exhumed Spirit",
			["npcID"] = 75979,
		},
		[383872] = {
			["npcID"] = 188667,
		},
		[396159] = {
			["source"] = "Lava Burster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186836,
		},
		[211406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[351109] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[363396] = {
			["npcID"] = 181572,
		},
		[406399] = {
			["source"] = "Malgosa Spellbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205620,
		},
		[324490] = {
			["encounterName"] = "Globgrog",
			["npcID"] = 164255,
			["encounterID"] = 2382,
		},
		[377732] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Refti Custodian",
			["npcID"] = 184319,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[332683] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 169835,
			["encounterID"] = 2417,
		},
		[363400] = {
			["npcID"] = 178158,
		},
		[375687] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decay Totem",
			["npcID"] = 190426,
		},
		[357259] = {
			["npcID"] = 180392,
		},
		[355212] = {
			["npcID"] = 178630,
		},
		[357260] = {
			["npcID"] = 180431,
		},
		[351117] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177889,
		},
		[381834] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["npcID"] = 186122,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[367500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bracken Warscourge",
			["npcID"] = 185529,
		},
		[355214] = {
			["npcID"] = 178630,
		},
		[351119] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177716,
		},
		[367502] = {
			["npcID"] = 181059,
		},
		[367503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decay Speaker",
			["npcID"] = 186191,
		},
		[342931] = {
			["npcID"] = 169410,
		},
		[367505] = {
			["npcID"] = 181059,
		},
		[365458] = {
			["npcID"] = 184651,
		},
		[351124] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[392080] = {
			["source"] = "Mirror Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194663,
		},
		[283551] = {
			["encounterName"] = "King Mechagon",
			["npcID"] = 144249,
			["encounterID"] = 2260,
		},
		[342936] = {
			["npcID"] = 173387,
		},
		[387987] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keen Skywatcher",
			["npcID"] = 190778,
		},
		[355224] = {
			["npcID"] = 151818,
		},
		[334747] = {
			["npcID"] = 166302,
		},
		[344986] = {
			["npcID"] = 158314,
		},
		[396180] = {
			["source"] = "Lava Burster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186836,
		},
		[342939] = {
			["npcID"] = 169410,
		},
		[355226] = {
			["npcID"] = 152656,
		},
		[410516] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[392087] = {
			["npcID"] = 186834,
		},
		[355228] = {
			["npcID"] = 178631,
		},
		[227800] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["npcID"] = 184581,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[338847] = {
			["npcID"] = 167525,
		},
		[324513] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Experimental Misstep",
			["npcID"] = 199859,
		},
		[338848] = {
			["npcID"] = 167525,
		},
		[349087] = {
			["npcID"] = 176705,
		},
		[332706] = {
			["npcID"] = 170490,
		},
		[357280] = {
			["npcID"] = 180387,
		},
		[336803] = {
			["npcID"] = 160785,
		},
		[338851] = {
			["npcID"] = 167525,
		},
		[332708] = {
			["npcID"] = 167532,
		},
		[385950] = {
			["npcID"] = 195314,
		},
		[396189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fetid Rotsinger",
			["npcID"] = 197129,
		},
		[367521] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonebolt Hunter",
			["npcID"] = 185534,
		},
		[338853] = {
			["npcID"] = 167527,
		},
		[367522] = {
			["npcID"] = 181059,
		},
		[371618] = {
			["source"] = "Cindershard Igniter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198382,
		},
		[357284] = {
			["npcID"] = 180432,
		},
		[388001] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[388002] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[365477] = {
			["npcID"] = 182649,
		},
		[375716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Primalist Mage",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191206,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["npcID"] = 184581,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[338857] = {
			["npcID"] = 167527,
		},
		[377765] = {
			["npcID"] = 187175,
		},
		[338858] = {
			["npcID"] = 167526,
		},
		[345002] = {
			["npcID"] = 168977,
		},
		[375719] = {
			["npcID"] = 190739,
		},
		[385958] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["npcID"] = 194181,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[332717] = {
			["npcID"] = 162614,
		},
		[326574] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[385959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Titan Defense Matrix",
			["npcID"] = 193244,
		},
		[324527] = {
			["encounterName"] = "Globgrog",
			["npcID"] = 164255,
			["encounterID"] = 2382,
		},
		[209378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[338863] = {
			["npcID"] = 167526,
		},
		[57984] = {
			["npcID"] = 95061,
		},
		[338864] = {
			["npcID"] = 167526,
		},
		[227809] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[338865] = {
			["npcID"] = 173191,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[373678] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[330676] = {
			["npcID"] = 168862,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[345011] = {
			["npcID"] = 173580,
		},
		[338868] = {
			["npcID"] = 167526,
		},
		[396206] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Apprentice",
			["npcID"] = 200948,
		},
		[392111] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shiverweb Crusher",
			["npcID"] = 185814,
		},
		[396208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotbow Stalker",
			["npcID"] = 197126,
		},
		[166380] = {
			["npcID"] = 82597,
		},
		[338872] = {
			["npcID"] = 167526,
		},
		[355256] = {
			["npcID"] = 178631,
		},
		[304063] = {
			["npcID"] = 155909,
		},
		[404403] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[385974] = {
			["encounterName"] = "Vexamus",
			["source"] = "Professor Maxdormu",
			["npcID"] = 189668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[174574] = {
			["npcID"] = 87229,
		},
		[293827] = {
			["npcID"] = 144294,
		},
		[373692] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazebound Destroyer",
			["npcID"] = 190034,
		},
		[173552] = {
			["npcID"] = 85768,
		},
		[373693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazebound Destroyer",
			["npcID"] = 190034,
		},
		[385980] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[347073] = {
			["npcID"] = 177187,
		},
		[318406] = {
			["encounterName"] = "Gorechop",
			["encounterID"] = 2365,
			["npcID"] = 162317,
		},
		[408509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portalkeeper Cimbra",
			["npcID"] = 202613,
		},
		[336838] = {
			["npcID"] = 164345,
		},
		[373698] = {
			["source"] = "Brackenhide Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186220,
		},
		[304075] = {
			["npcID"] = 155812,
		},
		[265168] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[256489] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[334792] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[330697] = {
			["npcID"] = 170690,
		},
		[308172] = {
			["npcID"] = 158177,
		},
		[392130] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Maxdormu",
			["npcID"] = 189668,
		},
		[328651] = {
			["npcID"] = 167493,
		},
		[330699] = {
			["npcID"] = 170932,
		},
		[320462] = {
			["npcID"] = 163128,
		},
		[227823] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[334797] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 169457,
			["encounterID"] = 2418,
		},
		[320463] = {
			["npcID"] = 177252,
		},
		[326607] = {
			["npcID"] = 167612,
		},
		[330703] = {
			["npcID"] = 174210,
		},
		[320465] = {
			["npcID"] = 177252,
		},
		[175607] = {
			["npcID"] = 82733,
		},
		[359374] = {
			["npcID"] = 181028,
		},
		[256494] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[347090] = {
			["npcID"] = 178263,
		},
		[392141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gamgus",
			["npcID"] = 194240,
		},
		[388046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stinkbreath",
			["npcID"] = 187033,
		},
		[400333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cliffkeeper Bouldani",
			["npcID"] = 202612,
		},
		[345044] = {
			["npcID"] = 170028,
		},
		[330711] = {
			["encounterName"] = "Shriekwing",
			["encounterID"] = 2398,
			["npcID"] = 164406,
		},
		[228852] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114262,
			["encounterID"] = 1960,
		},
		[347094] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 175663,
		},
		[347095] = {
			["npcID"] = 178263,
		},
		[293854] = {
			["npcID"] = 144294,
		},
		[304093] = {
			["npcID"] = 155908,
		},
		[166397] = {
			["npcID"] = 82590,
		},
		[326619] = {
			["npcID"] = 166873,
		},
		[328667] = {
			["npcID"] = 163126,
		},
		[336859] = {
			["npcID"] = 162873,
		},
		[330716] = {
			["npcID"] = 167998,
		},
		[320478] = {
			["npcID"] = 180379,
		},
		[343005] = {
			["encounterName"] = "Shriekwing",
			["encounterID"] = 2398,
			["npcID"] = 164406,
		},
		[398296] = {
			["source"] = "Shambling Infester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200387,
		},
		[293861] = {
			["npcID"] = 151613,
		},
		[355294] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[357343] = {
			["npcID"] = 180427,
		},
		[277481] = {
			["npcID"] = 154011,
		},
		[386012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormcaller Arynga",
			["npcID"] = 195265,
		},
		[388060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stinkbreath",
			["npcID"] = 187033,
		},
		[398300] = {
			["source"] = "Shambling Infester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200387,
		},
		[336868] = {
			["npcID"] = 184606,
		},
		[386015] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormspeaker",
			["npcID"] = 194894,
		},
		[355299] = {
			["npcID"] = 178661,
		},
		[390111] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["npcID"] = 189727,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2617,
		},
		[351206] = {
			["npcID"] = 176575,
		},
		[338921] = {
			["npcID"] = 163186,
		},
		[373733] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[361447] = {
			["npcID"] = 182425,
		},
		[163334] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80808,
			["encounterID"] = 1748,
		},
		[164358] = {
			["npcID"] = 87222,
		},
		[324589] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 166524,
		},
		[355306] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 179778,
			["encounterID"] = 2425,
		},
		[357354] = {
			["npcID"] = 180427,
		},
		[328687] = {
			["npcID"] = 166079,
		},
		[357356] = {
			["npcID"] = 178369,
		},
		[340975] = {
			["npcID"] = 163363,
		},
		[386026] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Squall",
			["npcID"] = 194895,
		},
		[404456] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[343025] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[386028] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "Primalist Thunderbeast",
			["npcID"] = 195696,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[373742] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[295929] = {
			["npcID"] = 154030,
		},
		[322550] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[345076] = {
			["npcID"] = 170037,
		},
		[269310] = {
			["encounterName"] = "Unbound Abomination",
			["source"] = "Titan Keeper Hezrel",
			["encounterID"] = 2123,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134419,
		},
		[345077] = {
			["npcID"] = 170044,
		},
		[88845] = {
			["npcID"] = 47724,
		},
		[357364] = {
			["npcID"] = 178294,
		},
		[295932] = {
			["npcID"] = 151329,
		},
		[345079] = {
			["npcID"] = 170031,
		},
		[322554] = {
			["encounterName"] = "Executor Tarvold",
			["encounterID"] = 2361,
			["npcID"] = 162103,
		},
		[377844] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["npcID"] = 186122,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[211464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felbound Enforcer",
			["npcID"] = 104278,
		},
		[347130] = {
			["npcID"] = 176173,
		},
		[357369] = {
			["npcID"] = 178294,
		},
		[351226] = {
			["npcID"] = 178071,
		},
		[357370] = {
			["npcID"] = 178294,
		},
		[336893] = {
			["npcID"] = 162873,
		},
		[320512] = {
			["npcID"] = 163892,
		},
		[324608] = {
			["encounterName"] = "Oryphrion",
			["encounterID"] = 2358,
			["npcID"] = 162060,
		},
		[324609] = {
			["npcID"] = 166396,
		},
		[361469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Past Self",
			["npcID"] = 185800,
		},
		[404472] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[343040] = {
			["npcID"] = 165869,
		},
		[295942] = {
			["npcID"] = 151329,
		},
		[200205] = {
			["npcID"] = 101462,
		},
		[328707] = {
			["npcID"] = 168992,
		},
		[330755] = {
			["npcID"] = 169859,
		},
		[377854] = {
			["npcID"] = 190761,
		},
		[334852] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 169458,
			["encounterID"] = 2418,
		},
		[227851] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114312,
			["encounterID"] = 1961,
		},
		[279564] = {
			["npcID"] = 167826,
		},
		[277517] = {
			["npcID"] = 176170,
		},
		[211470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Mistress",
			["npcID"] = 104300,
		},
		[392192] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Blazing Fiend",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190688,
		},
		[363524] = {
			["npcID"] = 181572,
		},
		[365572] = {
			["npcID"] = 184733,
		},
		[279567] = {
			["npcID"] = 167826,
		},
		[363525] = {
			["npcID"] = 183652,
		},
		[392194] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[192018] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["npcID"] = 95833,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[338955] = {
			["npcID"] = 163660,
		},
		[390150] = {
			["source"] = "Wyrmeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186612,
		},
		[302098] = {
			["npcID"] = 150190,
		},
		[369674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonevault Geomancer",
			["npcID"] = 184022,
		},
		[347149] = {
			["encounterName"] = "Timecap'n Hooktail",
			["encounterID"] = 2419,
			["npcID"] = 175546,
		},
		[369675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonevault Geomancer",
			["npcID"] = 184022,
		},
		[338959] = {
			["npcID"] = 168697,
		},
		[343055] = {
			["npcID"] = 161355,
		},
		[347151] = {
			["encounterName"] = "Timecap'n Hooktail",
			["encounterID"] = 2419,
			["npcID"] = 175546,
		},
		[357390] = {
			["npcID"] = 178055,
		},
		[343056] = {
			["npcID"] = 172025,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["npcID"] = 184580,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[343057] = {
			["npcID"] = 161355,
		},
		[338962] = {
			["npcID"] = 166499,
		},
		[343058] = {
			["npcID"] = 161355,
		},
		[291865] = {
			["encounterName"] = "King Mechagon",
			["npcID"] = 150396,
			["encounterID"] = 2260,
		},
		[384014] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[211477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[343060] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["npcID"] = 186338,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[357396] = {
			["npcID"] = 180070,
		},
		[396304] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Rothexer",
			["npcID"] = 197135,
		},
		[355352] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[200218] = {
			["npcID"] = 101462,
		},
		[347163] = {
			["npcID"] = 170157,
		},
		[357402] = {
			["npcID"] = 180070,
		},
		[330782] = {
			["npcID"] = 174386,
		},
		[343069] = {
			["npcID"] = 178478,
		},
		[386072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[375834] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[394264] = {
			["source"] = "Hyenamaster Durgun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186515,
		},
		[330784] = {
			["npcID"] = 160495,
		},
		[390169] = {
			["npcID"] = 187218,
		},
		[396313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Entropic Diruption",
			["npcID"] = 201598,
		},
		[291878] = {
			["encounterName"] = "King Mechagon",
			["npcID"] = 150396,
			["encounterID"] = 2260,
		},
		[343072] = {
			["npcID"] = 172025,
		},
		[396314] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Filth Caller",
			["npcID"] = 197122,
		},
		[353312] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 175663,
		},
		[328740] = {
			["npcID"] = 168992,
		},
		[396316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[332836] = {
			["npcID"] = 169927,
		},
		[386078] = {
			["source"] = "Echo of Loss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190259,
		},
		[396317] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[359458] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176973,
			["encounterID"] = 2422,
		},
		[408605] = {
			["source"] = "Sundered Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198869,
		},
		[330793] = {
			["npcID"] = 179911,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["npcID"] = 184018,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2556,
		},
		[367656] = {
			["npcID"] = 185037,
		},
		[361513] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181224,
			["encounterID"] = 2540,
		},
		[357418] = {
			["npcID"] = 178443,
		},
		[396327] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[406566] = {
			["source"] = "Primal Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202264,
		},
		[343086] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[324657] = {
			["npcID"] = 166551,
		},
		[377900] = {
			["npcID"] = 191833,
		},
		[396330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[357423] = {
			["npcID"] = 177972,
		},
		[326707] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[353328] = {
			["npcID"] = 178964,
		},
		[300087] = {
			["npcID"] = 150251,
		},
		[334899] = {
			["npcID"] = 174802,
		},
		[336947] = {
			["npcID"] = 162853,
		},
		[322614] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[408620] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["npcID"] = 200836,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[392239] = {
			["npcID"] = 187960,
		},
		[386096] = {
			["npcID"] = 183954,
		},
		[351285] = {
			["npcID"] = 178006,
		},
		[355381] = {
			["npcID"] = 177646,
		},
		[382002] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Blazewing",
			["npcID"] = 193291,
		},
		[324666] = {
			["npcID"] = 166551,
		},
		[320571] = {
			["npcID"] = 163128,
		},
		[324667] = {
			["encounterName"] = "Globgrog",
			["npcID"] = 164255,
			["encounterID"] = 2382,
		},
		[199210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Marksman",
			["npcID"] = 96640,
		},
		[377912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Sentry",
			["npcID"] = 192680,
		},
		[406581] = {
			["source"] = "Primal Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202264,
		},
		[359483] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181224,
			["encounterID"] = 2540,
		},
		[320576] = {
			["npcID"] = 168886,
		},
		[339006] = {
			["npcID"] = 173238,
		},
		[365627] = {
			["npcID"] = 184954,
		},
		[330816] = {
			["npcID"] = 169861,
		},
		[193069] = {
			["npcID"] = 96587,
		},
		[339008] = {
			["npcID"] = 161704,
		},
		[343104] = {
			["npcID"] = 170208,
		},
		[386107] = {
			["npcID"] = 183995,
		},
		[396346] = {
			["npcID"] = 190932,
		},
		[357439] = {
			["npcID"] = 178653,
		},
		[343105] = {
			["npcID"] = 170208,
		},
		[339010] = {
			["npcID"] = 173238,
		},
		[375870] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[328772] = {
			["npcID"] = 159460,
		},
		[396348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gutchewer Bear",
			["npcID"] = 197134,
		},
		[365632] = {
			["npcID"] = 184742,
		},
		[375871] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[328773] = {
			["npcID"] = 159460,
		},
		[396349] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fleshripper Vulture",
			["npcID"] = 197133,
		},
		[163379] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80875,
			["encounterID"] = 1748,
		},
		[330822] = {
			["npcID"] = 169859,
		},
		[334918] = {
			["npcID"] = 162047,
		},
		[396351] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["encounterID"] = 2639,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190496,
		},
		[392257] = {
			["source"] = "Plains Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195261,
		},
		[377923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Elemental",
			["npcID"] = 186570,
		},
		[390210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Decay",
			["npcID"] = 197130,
		},
		[343112] = {
			["npcID"] = 166156,
		},
		[272609] = {
			["source"] = "Faceless Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138281,
		},
		[272592] = {
			["source"] = "Faceless Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138281,
		},
		[396355] = {
			["npcID"] = 186787,
		},
		[274213] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[345553] = {
			["npcID"] = 174843,
		},
		[336971] = {
			["npcID"] = 168118,
		},
		[354801] = {
			["npcID"] = 179580,
		},
		[358983] = {
			["npcID"] = 180865,
		},
		[338360] = {
			["npcID"] = 165290,
		},
		[377927] = {
			["source"] = "Smoldering Feather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192690,
		},
		[329170] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[266106] = {
			["source"] = "Feral Bloodswarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133835,
		},
		[351307] = {
			["npcID"] = 176572,
		},
		[278961] = {
			["source"] = "Diseased Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133870,
		},
		[264603] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[260894] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[334926] = {
			["npcID"] = 168878,
		},
		[296019] = {
			["npcID"] = 151128,
		},
		[265081] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[265084] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[265019] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[353741] = {
			["npcID"] = 178958,
		},
		[396360] = {
			["npcID"] = 186787,
		},
		[407733] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[409975] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[272457] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[409931] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[409921] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[334929] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[256551] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Sawtooth Shark",
			["npcID"] = 129359,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[355787] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 176523,
		},
		[365646] = {
			["npcID"] = 184651,
		},
		[302166] = {
			["npcID"] = 150190,
		},
		[320596] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[258338] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[260654] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karkinus the Capsizer",
			["npcID"] = 200907,
		},
		[409437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voracious Magma Worm",
			["npcID"] = 203825,
		},
		[407198] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[272046] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Sharkbait",
			["npcID"] = 126841,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[412081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Colossal Draconic Golem",
			["npcID"] = 203826,
		},
		[194682] = {
			["npcID"] = 98963,
		},
		[328789] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169062,
			["encounterID"] = 2405,
		},
		[298073] = {
			["npcID"] = 156241,
		},
		[365649] = {
			["npcID"] = 184734,
		},
		[409581] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whisper in the Dark",
			["npcID"] = 203806,
		},
		[407496] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[392098] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[390223] = {
			["npcID"] = 187089,
		},
		[333729] = {
			["npcID"] = 168949,
		},
		[328791] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[396367] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayed Elder",
			["npcID"] = 197142,
		},
		[409041] = {
			["source"] = "Failed Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203927,
		},
		[392272] = {
			["npcID"] = 191665,
		},
		[361556] = {
			["npcID"] = 181687,
		},
		[406333] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[322470] = {
			["npcID"] = 157054,
		},
		[326745] = {
			["npcID"] = 170016,
		},
		[336804] = {
			["npcID"] = 177295,
		},
		[347223] = {
			["npcID"] = 161846,
		},
		[260292] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131817,
		},
		[204344] = {
			["npcID"] = 189610,
		},
		[356139] = {
			["npcID"] = 178043,
		},
		[396370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 195836,
		},
		[323496] = {
			["npcID"] = 165872,
		},
		[401258] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[369750] = {
			["npcID"] = 187602,
		},
		[363607] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181244,
			["encounterID"] = 2540,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["npcID"] = 75452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1679,
		},
		[163390] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80808,
			["encounterID"] = 1748,
		},
		[369751] = {
			["npcID"] = 195032,
		},
		[409231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Colossal Draconic Golem",
			["npcID"] = 203826,
		},
		[407285] = {
			["source"] = "Djaradin Skullcrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202258,
		},
		[338846] = {
			["npcID"] = 167525,
		},
		[403625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[355418] = {
			["npcID"] = 178527,
		},
		[341084] = {
			["npcID"] = 169889,
		},
		[293986] = {
			["npcID"] = 151476,
		},
		[185493] = {
			["npcID"] = 157016,
		},
		[396078] = {
			["npcID"] = 193288,
		},
		[355225] = {
			["npcID"] = 178142,
		},
		[392279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Dragon",
			["npcID"] = 194089,
		},
		[369754] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["npcID"] = 184018,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2556,
		},
		[403699] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[409756] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[392280] = {
			["source"] = "Kaurdyth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197835,
		},
		[265679] = {
			["npcID"] = 129525,
		},
		[336809] = {
			["npcID"] = 162873,
		},
		[390233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rendvith",
			["npcID"] = 196971,
		},
		[392281] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[320610] = {
			["npcID"] = 165909,
		},
		[334765] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[365661] = {
			["npcID"] = 184651,
		},
		[347992] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[365215] = {
			["npcID"] = 178563,
		},
		[382435] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decay Speaker",
			["npcID"] = 186191,
		},
		[227817] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[355234] = {
			["npcID"] = 178142,
		},
		[334748] = {
			["npcID"] = 166302,
		},
		[405812] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[367496] = {
			["npcID"] = 185537,
		},
		[392284] = {
			["source"] = "Ravenous Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193145,
		},
		[377950] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["npcID"] = 186125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[295438] = {
			["npcID"] = 154039,
		},
		[374699] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamecaller Aymi",
			["npcID"] = 190368,
		},
		[392285] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Proto Dragon",
			["npcID"] = 195177,
		},
		[336996] = {
			["npcID"] = 162744,
		},
		[338855] = {
			["npcID"] = 167527,
		},
		[291946] = {
			["encounterName"] = "K.U.-J.0.",
			["npcID"] = 144246,
			["encounterID"] = 2258,
		},
		[384095] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ohuna Companion",
			["npcID"] = 194254,
		},
		[406165] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[332705] = {
			["npcID"] = 170490,
		},
		[344956] = {
			["npcID"] = 162829,
		},
		[290438] = {
			["npcID"] = 144536,
		},
		[48280] = {
			["npcID"] = 153897,
		},
		[339046] = {
			["npcID"] = 179755,
		},
		[392635] = {
			["source"] = "Kaurdyth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197835,
		},
		[364447] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 184522,
			["encounterID"] = 2512,
		},
		[394336] = {
			["source"] = "Mordigan Ironjaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187353,
		},
		[355429] = {
			["npcID"] = 178165,
		},
		[389280] = {
			["source"] = "Shiverweb Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185814,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[394337] = {
			["source"] = "Morchok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187306,
		},
		[371812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Commander",
			["npcID"] = 190776,
		},
		[275568] = {
			["npcID"] = 168442,
		},
		[409016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summitshaper Lorac",
			["npcID"] = 201522,
		},
		[351174] = {
			["npcID"] = 88224,
		},
		[396386] = {
			["npcID"] = 188226,
		},
		[275569] = {
			["npcID"] = 157728,
		},
		[339392] = {
			["npcID"] = 158259,
		},
		[260072] = {
			["npcID"] = 131834,
		},
		[329569] = {
			["npcID"] = 158160,
		},
		[275570] = {
			["npcID"] = 166027,
		},
		[411747] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Elementium",
			["npcID"] = 205628,
		},
		[388537] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["npcID"] = 194181,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[396388] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[390245] = {
			["source"] = "Embertooth Spearhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188725,
		},
		[367554] = {
			["npcID"] = 183416,
		},
		[405914] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[391081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tserasor the Preserver",
			["npcID"] = 190598,
		},
		[316527] = {
			["npcID"] = 183512,
		},
		[366409] = {
			["npcID"] = 184908,
		},
		[347000] = {
			["npcID"] = 172639,
		},
		[347045] = {
			["npcID"] = 176131,
		},
		[325552] = {
			["encounterName"] = "Domina Venomblade",
			["npcID"] = 164266,
			["encounterID"] = 2385,
		},
		[343149] = {
			["npcID"] = 173575,
		},
		[193092] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["npcID"] = 94960,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[323544] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 165905,
		},
		[334757] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 169457,
			["encounterID"] = 2418,
		},
		[347091] = {
			["npcID"] = 164047,
		},
		[377962] = {
			["npcID"] = 190723,
		},
		[396392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dueling Student",
			["npcID"] = 199377,
		},
		[365676] = {
			["npcID"] = 184734,
		},
		[361387] = {
			["npcID"] = 182466,
		},
		[361581] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182822,
		},
		[355438] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176563,
			["encounterID"] = 2440,
		},
		[211401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[361913] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[410728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sabellian",
			["npcID"] = 201411,
		},
		[322486] = {
			["npcID"] = 164929,
		},
		[373869] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scorchling",
			["npcID"] = 190205,
		},
		[360295] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[364426] = {
			["npcID"] = 180088,
		},
		[347249] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[353721] = {
			["npcID"] = 179135,
		},
		[395214] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worldcarver A'tir",
			["npcID"] = 186859,
		},
		[394348] = {
			["source"] = "Mordigan Ironjaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187353,
		},
		[330868] = {
			["npcID"] = 160495,
		},
		[182856] = {
			["npcID"] = 161785,
		},
		[343155] = {
			["npcID"] = 173444,
		},
		[209477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mana Wyrm",
			["npcID"] = 105703,
		},
		[371824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Commander",
			["npcID"] = 190776,
		},
		[373872] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186227,
		},
		[359538] = {
			["npcID"] = 184060,
		},
		[320631] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[323552] = {
			["encounterName"] = "High Adjudicator Aleez",
			["npcID"] = 165410,
			["encounterID"] = 2403,
		},
		[365682] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 184140,
			["encounterID"] = 2553,
		},
		[199172] = {
			["npcID"] = 99728,
		},
		[327648] = {
			["npcID"] = 168418,
		},
		[348117] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[390256] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Apprentice",
			["npcID"] = 192340,
		},
		[334967] = {
			["npcID"] = 171343,
		},
		[361343] = {
			["npcID"] = 178963,
		},
		[396400] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[336834] = {
			["npcID"] = 177295,
		},
		[343159] = {
			["npcID"] = 173444,
		},
		[377971] = {
			["npcID"] = 194342,
		},
		[338914] = {
			["npcID"] = 177628,
		},
		[283775] = {
			["npcID"] = 150744,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["npcID"] = 184582,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["npcID"] = 184582,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[388211] = {
			["source"] = "Shale Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188122,
		},
		[365686] = {
			["npcID"] = 184533,
		},
		[294015] = {
			["npcID"] = 151476,
		},
		[394355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frigidpelt Matriarch",
			["npcID"] = 193063,
		},
		[330875] = {
			["npcID"] = 169893,
		},
		[300159] = {
			["npcID"] = 150276,
		},
		[351353] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[320637] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[324417] = {
			["npcID"] = 162133,
		},
		[316859] = {
			["npcID"] = 170042,
		},
		[354142] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[401382] = {
			["encounterName"] = "Sadana Bloodfury",
			["source"] = "Past Self",
			["npcID"] = 185800,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1677,
		},
		[355450] = {
			["npcID"] = 178528,
		},
		[38556] = {
			["npcID"] = 45015,
		},
		[395240] = {
			["source"] = "Enkine the Voracious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193134,
		},
		[374735] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamecaller Aymi",
			["npcID"] = 190368,
		},
		[388529] = {
			["npcID"] = 192931,
		},
		[323538] = {
			["encounterName"] = "High Adjudicator Aleez",
			["npcID"] = 165410,
			["encounterID"] = 2403,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[336888] = {
			["npcID"] = 168233,
		},
		[319371] = {
			["npcID"] = 163512,
		},
		[175636] = {
			["npcID"] = 81272,
		},
		[293729] = {
			["npcID"] = 144295,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[341895] = {
			["npcID"] = 168647,
		},
		[291973] = {
			["encounterName"] = "K.U.-J.0.",
			["npcID"] = 144246,
			["encounterID"] = 2258,
		},
		[297966] = {
			["npcID"] = 153382,
		},
		[369788] = {
			["npcID"] = 188296,
		},
		[172567] = {
			["npcID"] = 81368,
		},
		[288765] = {
			["npcID"] = 177637,
		},
		[162231] = {
			["npcID"] = 80071,
		},
		[394362] = {
			["npcID"] = 193232,
		},
		[316855] = {
			["npcID"] = 177206,
		},
		[357281] = {
			["npcID"] = 180432,
		},
		[360432] = {
			["npcID"] = 182362,
		},
		[320644] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[355456] = {
			["npcID"] = 178958,
		},
		[347143] = {
			["npcID"] = 176173,
		},
		[331574] = {
			["npcID"] = 170217,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["npcID"] = 184582,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[330884] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 168244,
		},
		[322557] = {
			["npcID"] = 172991,
		},
		[209410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Arcanist",
			["npcID"] = 104247,
		},
		[359856] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[374797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frenzied Grovetalon",
			["npcID"] = 187507,
		},
		[38557] = {
			["npcID"] = 23589,
		},
		[392318] = {
			["source"] = "Ohn'ir Initiate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193985,
		},
		[339966] = {
			["npcID"] = 164861,
		},
		[386024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormspeaker",
			["npcID"] = 194894,
		},
		[320517] = {
			["npcID"] = 163894,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[394367] = {
			["source"] = "Morchok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187306,
		},
		[396415] = {
			["npcID"] = 187211,
		},
		[357508] = {
			["npcID"] = 180495,
		},
		[356099] = {
			["npcID"] = 177395,
		},
		[211473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Mistress",
			["npcID"] = 104300,
		},
		[388225] = {
			["source"] = "Glacial Giantess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193075,
		},
		[341127] = {
			["npcID"] = 158259,
		},
		[369442] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maddened Proto-Drake",
			["npcID"] = 190032,
		},
		[325590] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165763,
			["encounterID"] = 2402,
		},
		[330631] = {
			["npcID"] = 180013,
		},
		[227917] = {
			["npcID"] = 114526,
		},
		[326794] = {
			["npcID"] = 167876,
		},
		[355062] = {
			["npcID"] = 178623,
		},
		[356386] = {
			["npcID"] = 177385,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[384132] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[258634] = {
			["npcID"] = 154129,
		},
		[355464] = {
			["npcID"] = 178165,
		},
		[357512] = {
			["npcID"] = 180495,
		},
		[365299] = {
			["npcID"] = 184539,
		},
		[353417] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[366288] = {
			["npcID"] = 184911,
		},
		[341131] = {
			["npcID"] = 174194,
		},
		[334988] = {
			["npcID"] = 171596,
		},
		[377991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Sentry",
			["npcID"] = 192680,
		},
		[296372] = {
			["npcID"] = 152612,
		},
		[300177] = {
			["npcID"] = 150276,
		},
		[294324] = {
			["npcID"] = 144293,
		},
		[320655] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[333231] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[373897] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[375945] = {
			["npcID"] = 187975,
		},
		[178060] = {
			["npcID"] = 80491,
		},
		[396423] = {
			["npcID"] = 187211,
		},
		[365707] = {
			["npcID"] = 183429,
		},
		[336911] = {
			["npcID"] = 178820,
		},
		[320657] = {
			["npcID"] = 171562,
		},
		[368042] = {
			["npcID"] = 178508,
		},
		[256589] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[355230] = {
			["npcID"] = 152656,
		},
		[176727] = {
			["npcID"] = 83812,
		},
		[328413] = {
			["npcID"] = 158473,
		},
		[366297] = {
			["npcID"] = 184911,
		},
		[386757] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["npcID"] = 189727,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2617,
		},
		[345232] = {
			["npcID"] = 168693,
		},
		[373803] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Infused Whelp",
			["npcID"] = 189893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[164907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reanimated Ritual Bones",
			["npcID"] = 75715,
		},
		[336910] = {
			["npcID"] = 162872,
		},
		[369806] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Hulking Berserker",
			["npcID"] = 184020,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[356404] = {
			["npcID"] = 180091,
		},
		[393259] = {
			["source"] = "Blazing Inferno",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189043,
		},
		[375950] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Icecaller",
			["npcID"] = 190377,
		},
		[300102] = {
			["npcID"] = 152009,
		},
		[355473] = {
			["npcID"] = 179821,
		},
		[200214] = {
			["npcID"] = 101462,
		},
		[357128] = {
			["npcID"] = 176879,
		},
		[325036] = {
			["npcID"] = 167951,
		},
		[347283] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[292903] = {
			["npcID"] = 150958,
		},
		[42382] = {
			["npcID"] = 17299,
		},
		[345236] = {
			["npcID"] = 170157,
		},
		[396430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Golem",
			["npcID"] = 190779,
		},
		[240009] = {
			["npcID"] = 158314,
		},
		[194112] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[345237] = {
			["npcID"] = 165124,
		},
		[265376] = {
			["source"] = "Fanatical Headhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133663,
		},
		[365715] = {
			["npcID"] = 184530,
		},
		[392336] = {
			["npcID"] = 181775,
		},
		[328856] = {
			["npcID"] = 165561,
		},
		[396432] = {
			["npcID"] = 189798,
		},
		[341143] = {
			["npcID"] = 164476,
		},
		[167516] = {
			["npcID"] = 86809,
		},
		[345239] = {
			["npcID"] = 165124,
		},
		[265377] = {
			["source"] = "Fanatical Headhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133663,
		},
		[227925] = {
			["npcID"] = 114526,
		},
		[284752] = {
			["npcID"] = 144572,
		},
		[369813] = {
			["npcID"] = 193288,
		},
		[355479] = {
			["npcID"] = 179821,
		},
		[341145] = {
			["npcID"] = 174090,
		},
		[325312] = {
			["npcID"] = 177214,
		},
		[325034] = {
			["npcID"] = 167951,
		},
		[321247] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[382101] = {
			["npcID"] = 190259,
		},
		[296365] = {
			["npcID"] = 152612,
		},
		[300155] = {
			["npcID"] = 164929,
		},
		[327474] = {
			["npcID"] = 166170,
		},
		[382102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grand Artificer Zeerak",
			["npcID"] = 201553,
		},
		[277249] = {
			["npcID"] = 158177,
		},
		[346790] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 169924,
			["encounterID"] = 2412,
		},
		[347291] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[373912] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["npcID"] = 186121,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2569,
		},
		[227789] = {
			["encounterName"] = "Maiden of Virtue",
			["npcID"] = 113971,
			["encounterID"] = 1954,
		},
		[343083] = {
			["npcID"] = 166156,
		},
		[374624] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frozen Destroyer",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190686,
		},
		[322232] = {
			["encounterName"] = "Stradama Margrave",
			["npcID"] = 164267,
			["encounterID"] = 2386,
		},
		[175842] = {
			["npcID"] = 85225,
		},
		[369818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Berserker",
			["npcID"] = 184020,
		},
		[206685] = {
			["npcID"] = 104493,
		},
		[365723] = {
			["npcID"] = 183438,
		},
		[367771] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 185607,
			["encounterID"] = 2546,
		},
		[394392] = {
			["npcID"] = 190259,
		},
		[327332] = {
			["npcID"] = 163459,
		},
		[291928] = {
			["encounterName"] = "King Mechagon",
			["npcID"] = 150396,
			["encounterID"] = 2260,
		},
		[368712] = {
			["npcID"] = 184058,
		},
		[308026] = {
			["npcID"] = 157634,
		},
		[362184] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[348953] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[256865] = {
			["npcID"] = 171303,
		},
		[361630] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181224,
			["encounterID"] = 2540,
		},
		[295939] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[357535] = {
			["npcID"] = 177979,
		},
		[292910] = {
			["npcID"] = 175834,
		},
		[302682] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[386675] = {
			["npcID"] = 189583,
		},
		[361568] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181546,
			["encounterID"] = 2544,
		},
		[357429] = {
			["npcID"] = 178824,
		},
		[369823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Basilisk",
			["npcID"] = 184023,
		},
		[199726] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "King Ranulf",
			["npcID"] = 97083,
		},
		[354367] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[332650] = {
			["npcID"] = 161857,
		},
		[328869] = {
			["npcID"] = 157122,
		},
		[345772] = {
			["npcID"] = 175579,
		},
		[334488] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[335013] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[353443] = {
			["npcID"] = 179080,
		},
		[342911] = {
			["npcID"] = 162123,
		},
		[372369] = {
			["npcID"] = 186490,
		},
		[400542] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193460,
		},
		[324776] = {
			["npcID"] = 166275,
		},
		[330919] = {
			["npcID"] = 169912,
		},
		[406686] = {
			["source"] = "Djaradin Magmashaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202257,
		},
		[384161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Irontorch",
			["npcID"] = 189464,
		},
		[263344] = {
			["npcID"] = 157094,
		},
		[371875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Trainee",
			["npcID"] = 189266,
		},
		[390305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rendvith",
			["npcID"] = 196971,
		},
		[337587] = {
			["npcID"] = 162880,
		},
		[369828] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Basilisk",
			["npcID"] = 184023,
		},
		[360075] = {
			["npcID"] = 182210,
		},
		[339013] = {
			["npcID"] = 183512,
		},
		[355389] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176703,
			["encounterID"] = 2422,
		},
		[328781] = {
			["npcID"] = 159460,
		},
		[363686] = {
			["npcID"] = 179043,
		},
		[355970] = {
			["npcID"] = 152594,
		},
		[326827] = {
			["npcID"] = 162040,
		},
		[406934] = {
			["source"] = "Djaradin Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202256,
		},
		[323682] = {
			["npcID"] = 163501,
		},
		[300207] = {
			["npcID"] = 150253,
		},
		[335019] = {
			["npcID"] = 156434,
		},
		[295991] = {
			["npcID"] = 151331,
		},
		[298160] = {
			["npcID"] = 153451,
		},
		[341163] = {
			["npcID"] = 171396,
		},
		[326829] = {
			["npcID"] = 167876,
		},
		[366189] = {
			["npcID"] = 183500,
		},
		[229429] = {
			["npcID"] = 115388,
		},
		[162407] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77803,
			["encounterID"] = 1715,
		},
		[326830] = {
			["npcID"] = 163316,
		},
		[322171] = {
			["npcID"] = 172596,
		},
		[396454] = {
			["source"] = "Insatiable Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185715,
		},
		[164426] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["npcID"] = 81305,
			["encounterID"] = 1749,
		},
		[228700] = {
			["npcID"] = 114338,
		},
		[357786] = {
			["npcID"] = 177718,
		},
		[322736] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[358006] = {
			["npcID"] = 179608,
		},
		[346742] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 175646,
			["encounterID"] = 2424,
		},
		[328880] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[358239] = {
			["npcID"] = 178851,
		},
		[330593] = {
			["npcID"] = 168724,
		},
		[257629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unfinished Stone Golem",
			["npcID"] = 201586,
		},
		[363533] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[339120] = {
			["npcID"] = 173240,
		},
		[357550] = {
			["npcID"] = 176940,
		},
		[320614] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[68799] = {
			["npcID"] = 36272,
		},
		[333931] = {
			["npcID"] = 177422,
		},
		[357551] = {
			["npcID"] = 180499,
		},
		[394060] = {
			["source"] = "Productive Pollinator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193809,
		},
		[378029] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["npcID"] = 186124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[339122] = {
			["npcID"] = 167525,
		},
		[342675] = {
			["npcID"] = 170882,
		},
		[326836] = {
			["npcID"] = 162039,
		},
		[172649] = {
			["npcID"] = 81432,
		},
		[325223] = {
			["npcID"] = 166304,
		},
		[365744] = {
			["npcID"] = 184651,
		},
		[326837] = {
			["npcID"] = 162040,
		},
		[328885] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 168973,
			["encounterID"] = 2402,
		},
		[395080] = {
			["source"] = "Enkine the Voracious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193134,
		},
		[365745] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 184792,
		},
		[392366] = {
			["source"] = "Awakened Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197793,
		},
		[386223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Stormshield",
			["npcID"] = 194896,
		},
		[322743] = {
			["npcID"] = 155824,
		},
		[308409] = {
			["npcID"] = 154330,
		},
		[335030] = {
			["npcID"] = 156779,
		},
		[320696] = {
			["npcID"] = 163121,
		},
		[357219] = {
			["npcID"] = 176957,
		},
		[327280] = {
			["npcID"] = 167524,
		},
		[351413] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[394416] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198311,
		},
		[322745] = {
			["npcID"] = 170853,
		},
		[373939] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Rotburst Totem",
			["npcID"] = 190381,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2569,
		},
		[392369] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earth Elemental",
			["npcID"] = 190173,
		},
		[381582] = {
			["source"] = "Sundered Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188173,
		},
		[320600] = {
			["npcID"] = 162965,
		},
		[341176] = {
			["npcID"] = 166317,
		},
		[343224] = {
			["npcID"] = 175792,
		},
		[322970] = {
			["npcID"] = 178462,
		},
		[340070] = {
			["npcID"] = 166503,
		},
		[408975] = {
			["source"] = "Sundered Edgelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198873,
		},
		[367798] = {
			["npcID"] = 181249,
		},
		[229705] = {
			["npcID"] = 115418,
		},
		[372808] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2609,
		},
		[373942] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["npcID"] = 186121,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2569,
		},
		[397907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[346980] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 176551,
		},
		[330940] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 168244,
		},
		[373943] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[302272] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[337513] = {
			["npcID"] = 158259,
		},
		[210537] = {
			["npcID"] = 159106,
		},
		[355732] = {
			["npcID"] = 179446,
		},
		[354900] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[310392] = {
			["npcID"] = 159190,
		},
		[357516] = {
			["npcID"] = 177137,
		},
		[358236] = {
			["npcID"] = 178856,
		},
		[326847] = {
			["npcID"] = 167876,
		},
		[394423] = {
			["npcID"] = 187598,
		},
		[381765] = {
			["npcID"] = 194798,
		},
		[368017] = {
			["npcID"] = 185663,
		},
		[326848] = {
			["npcID"] = 163992,
		},
		[338591] = {
			["npcID"] = 173066,
		},
		[336958] = {
			["npcID"] = 162853,
		},
		[373947] = {
			["npcID"] = 192949,
		},
		[357979] = {
			["npcID"] = 178897,
		},
		[351057] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[9613] = {
			["npcID"] = 59166,
		},
		[353398] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 179010,
		},
		[359235] = {
			["npcID"] = 180906,
		},
		[394426] = {
			["source"] = "Council Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198503,
		},
		[388283] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["npcID"] = 186616,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[284506] = {
			["npcID"] = 144566,
		},
		[326851] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
		},
		[164448] = {
			["npcID"] = 80490,
		},
		[322756] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 165137,
		},
		[203373] = {
			["source"] = "Observant Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107449,
		},
		[302279] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150295,
			["encounterID"] = 2291,
		},
		[157769] = {
			["encounterName"] = "Imperator Mar'gok",
			["npcID"] = 78121,
			["encounterID"] = 1705,
		},
		[363712] = {
			["npcID"] = 185434,
		},
		[387186] = {
			["npcID"] = 187127,
		},
		[378003] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Sentry",
			["npcID"] = 192680,
		},
		[394429] = {
			["source"] = "Tarolekk, the Stomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197650,
		},
		[352833] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[382143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reclaimer Makko",
			["npcID"] = 191536,
		},
		[270481] = {
			["npcID"] = 135002,
		},
		[350875] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[322759] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[345233] = {
			["npcID"] = 168693,
		},
		[314942] = {
			["npcID"] = 166869,
		},
		[376426] = {
			["source"] = "Falling Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186968,
		},
		[346800] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[357479] = {
			["npcID"] = 178653,
		},
		[328288] = {
			["npcID"] = 168718,
		},
		[115006] = {
			["npcID"] = 58943,
		},
		[355525] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 176523,
		},
		[372107] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["npcID"] = 189232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2606,
		},
		[384194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Cinderweaver",
			["npcID"] = 190207,
		},
		[364617] = {
			["npcID"] = 181057,
		},
		[330953] = {
			["npcID"] = 161531,
		},
		[6358] = {
			["npcID"] = 1863,
		},
		[340057] = {
			["npcID"] = 174336,
		},
		[406918] = {
			["source"] = "Djaradin Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202256,
		},
		[352347] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 176551,
		},
		[333002] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165763,
			["encounterID"] = 2402,
		},
		[294064] = {
			["npcID"] = 151658,
		},
		[320716] = {
			["npcID"] = 177210,
		},
		[339012] = {
			["npcID"] = 183512,
		},
		[183111] = {
			["npcID"] = 165793,
		},
		[341146] = {
			["npcID"] = 174194,
		},
		[394436] = {
			["source"] = "Shas'ith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189822,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["encounterID"] = 1816,
			["npcID"] = 95886,
		},
		[387740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tyrhold Watcher",
			["npcID"] = 192696,
		},
		[393031] = {
			["npcID"] = 186672,
		},
		[330573] = {
			["npcID"] = 155251,
		},
		[393787] = {
			["source"] = "Iskakx",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192761,
		},
		[373960] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["npcID"] = 186121,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2569,
		},
		[277907] = {
			["npcID"] = 175672,
		},
		[369865] = {
			["npcID"] = 191611,
		},
		[330958] = {
			["npcID"] = 177418,
		},
		[381470] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["npcID"] = 186125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[354117] = {
			["npcID"] = 179234,
		},
		[106864] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[388296] = {
			["npcID"] = 192626,
		},
		[390715] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[384134] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Warspear",
			["npcID"] = 192791,
		},
		[394440] = {
			["source"] = "Eaglemaster Niraak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192020,
		},
		[319644] = {
			["npcID"] = 161529,
		},
		[341199] = {
			["npcID"] = 173189,
		},
		[359629] = {
			["npcID"] = 181359,
		},
		[345238] = {
			["npcID"] = 165124,
		},
		[265433] = {
			["source"] = "Bloodsworn Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[341200] = {
			["npcID"] = 174100,
		},
		[392394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamegullet",
			["npcID"] = 197697,
		},
		[332612] = {
			["npcID"] = 170572,
		},
		[397112] = {
			["npcID"] = 189798,
		},
		[351045] = {
			["npcID"] = 177797,
		},
		[392395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderhead",
			["npcID"] = 197698,
		},
		[372311] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Trainee",
			["npcID"] = 189266,
		},
		[353418] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[351044] = {
			["npcID"] = 177797,
		},
		[335059] = {
			["npcID"] = 171696,
		},
		[337107] = {
			["npcID"] = 168693,
		},
		[396492] = {
			["source"] = "Slobberclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195972,
		},
		[385157] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greenbelt Riverbeast",
			["npcID"] = 192834,
		},
		[396447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Proto-Dragon",
			["npcID"] = 192717,
		},
		[347668] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[388302] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[357586] = {
			["npcID"] = 178653,
		},
		[392398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Thundercloud",
			["npcID"] = 197509,
		},
		[406911] = {
			["source"] = "Sarek Cinderbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205619,
		},
		[198263] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["npcID"] = 95676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[337110] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[294107] = {
			["npcID"] = 150254,
		},
		[258672] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[355540] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[198750] = {
			["encounterName"] = "Odyn",
			["source"] = "Stormforged Obliterator",
			["npcID"] = 102019,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[351621] = {
			["npcID"] = 176573,
		},
		[320729] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[388305] = {
			["source"] = "Glacial Giantess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193075,
		},
		[359587] = {
			["npcID"] = 181352,
		},
		[385574] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[320069] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164451,
		},
		[355542] = {
			["npcID"] = 177243,
		},
		[341208] = {
			["npcID"] = 166317,
		},
		[284219] = {
			["npcID"] = 150297,
		},
		[359960] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[330970] = {
			["npcID"] = 177437,
		},
		[357591] = {
			["npcID"] = 177984,
		},
		[388623] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[193826] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["npcID"] = 95675,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1808,
		},
		[322780] = {
			["npcID"] = 156560,
		},
		[378413] = {
			["npcID"] = 191111,
		},
		[381519] = {
			["npcID"] = 191047,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["source"] = "Draconic Image",
			["npcID"] = 190187,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[369853] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burly Rock-Thrower",
			["npcID"] = 184019,
		},
		[369811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Berserker",
			["npcID"] = 184020,
		},
		[177599] = {
			["npcID"] = 88224,
		},
		[287970] = {
			["npcID"] = 144564,
		},
		[388310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malfunctioning Protector",
			["npcID"] = 198343,
		},
		[383651] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 193944,
		},
		[392406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Storm Warrior",
			["npcID"] = 197982,
		},
		[327891] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 169506,
		},
		[378012] = {
			["npcID"] = 186823,
		},
		[397897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[79858] = {
			["npcID"] = 155283,
		},
		[329904] = {
			["npcID"] = 157118,
		},
		[396503] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[334971] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165067,
			["encounterID"] = 2418,
		},
		[199805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormforged Sentinel",
			["npcID"] = 96574,
		},
		[322767] = {
			["npcID"] = 164921,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 104293,
		},
		[390361] = {
			["source"] = "Shela the Windbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194884,
		},
		[338604] = {
			["npcID"] = 173066,
		},
		[204492] = {
			["source"] = "Jandvik Bonepiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100948,
		},
		[292029] = {
			["npcID"] = 144568,
		},
		[241774] = {
			["npcID"] = 114636,
		},
		[361676] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[265445] = {
			["npcID"] = 161527,
		},
		[330978] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[354490] = {
			["npcID"] = 179526,
		},
		[241788] = {
			["npcID"] = 114632,
		},
		[176768] = {
			["npcID"] = 83790,
		},
		[388316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oppressive Artificer",
			["npcID"] = 184444,
		},
		[396802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ohn'ir Windcaster",
			["npcID"] = 199498,
		},
		[357862] = {
			["npcID"] = 177903,
		},
		[209027] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Guard",
			["npcID"] = 111563,
		},
		[317661] = {
			["npcID"] = 163503,
		},
		[227568] = {
			["encounterName"] = "Opera Hall",
			["npcID"] = 114261,
			["encounterID"] = 1957,
		},
		[340796] = {
			["npcID"] = 166139,
		},
		[339768] = {
			["npcID"] = 166012,
		},
		[413044] = {
			["source"] = "Grotesque Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138187,
		},
		[320999] = {
			["npcID"] = 164852,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[326824] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167999,
			["encounterID"] = 2407,
		},
		[333612] = {
			["npcID"] = 168374,
		},
		[285232] = {
			["npcID"] = 150734,
		},
		[257656] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unfinished Stone Golem",
			["npcID"] = 201586,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[390290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infuser Sariya",
			["npcID"] = 190405,
		},
		[340446] = {
			["npcID"] = 167898,
		},
		[350453] = {
			["npcID"] = 179894,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[359102] = {
			["npcID"] = 176533,
		},
		[346604] = {
			["npcID"] = 175792,
		},
		[173514] = {
			["npcID"] = 83389,
		},
		[361644] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181224,
			["encounterID"] = 2540,
		},
		[29120] = {
			["npcID"] = 18147,
		},
		[227965] = {
			["npcID"] = 114544,
		},
		[410848] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[394466] = {
			["source"] = "Primordial Hail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189039,
		},
		[300414] = {
			["npcID"] = 150143,
		},
		[365798] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 183439,
			["encounterID"] = 2540,
		},
		[241798] = {
			["npcID"] = 114783,
		},
		[339325] = {
			["npcID"] = 173298,
		},
		[358181] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[227966] = {
			["npcID"] = 114544,
		},
		[346459] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[337131] = {
			["npcID"] = 162872,
		},
		[386509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezrigeth",
			["npcID"] = 187666,
		},
		[302274] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150295,
			["encounterID"] = 2291,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["npcID"] = 194367,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[228567] = {
			["npcID"] = 114794,
		},
		[334534] = {
			["npcID"] = 171805,
		},
		[349419] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[343276] = {
			["npcID"] = 173178,
		},
		[304946] = {
			["npcID"] = 177223,
		},
		[345554] = {
			["npcID"] = 177168,
		},
		[351459] = {
			["npcID"] = 176572,
		},
		[372082] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[176268] = {
			["npcID"] = 88224,
		},
		[333641] = {
			["npcID"] = 169905,
		},
		[189200] = {
			["npcID"] = 156244,
		},
		[367851] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[396520] = {
			["npcID"] = 187212,
		},
		[166335] = {
			["npcID"] = 82579,
		},
		[358342] = {
			["npcID"] = 179851,
		},
		[357183] = {
			["npcID"] = 177938,
		},
		[322802] = {
			["npcID"] = 161971,
		},
		[365805] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[367484] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Claw Fighter",
			["npcID"] = 185508,
		},
		[369901] = {
			["npcID"] = 186965,
		},
		[404713] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[285148] = {
			["npcID"] = 150734,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[367807] = {
			["source"] = "Worldbreaker Escapee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185626,
		},
		[388332] = {
			["npcID"] = 196439,
		},
		[317959] = {
			["npcID"] = 163458,
		},
		[356666] = {
			["npcID"] = 179892,
		},
		[291613] = {
			["encounterName"] = "King Mechagon",
			["npcID"] = 150396,
			["encounterID"] = 2260,
		},
		[319775] = {
			["npcID"] = 166872,
		},
		[397878] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59873,
		},
		[408811] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[299475] = {
			["npcID"] = 150254,
		},
		[355070] = {
			["npcID"] = 178625,
		},
		[340631] = {
			["npcID"] = 173800,
		},
		[373513] = {
			["npcID"] = 190128,
		},
		[355571] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 176523,
		},
		[388335] = {
			["npcID"] = 186354,
		},
		[357619] = {
			["npcID"] = 177422,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[394479] = {
			["source"] = "Primordial Hail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189039,
		},
		[358699] = {
			["npcID"] = 180417,
		},
		[357620] = {
			["npcID"] = 177422,
		},
		[359668] = {
			["npcID"] = 180051,
		},
		[156301] = {
			["npcID"] = 80935,
		},
		[295231] = {
			["npcID"] = 165167,
		},
		[279264] = {
			["npcID"] = 176434,
		},
		[343287] = {
			["npcID"] = 173633,
		},
		[324368] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 163077,
		},
		[371956] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Terrasentry",
			["npcID"] = 188011,
		},
		[215241] = {
			["source"] = "Duskwatch Scryer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116360,
		},
		[167385] = {
			["npcID"] = 174566,
		},
		[296190] = {
			["npcID"] = 152517,
		},
		[356865] = {
			["npcID"] = 177271,
		},
		[271841] = {
			["npcID"] = 157002,
		},
		[351969] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[334625] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[388340] = {
			["npcID"] = 196439,
		},
		[393523] = {
			["source"] = "Cracktooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187528,
		},
		[61353] = {
			["npcID"] = 96779,
		},
		[355577] = {
			["npcID"] = 178171,
		},
		[412914] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fragment of Shadow",
			["npcID"] = 205968,
		},
		[390389] = {
			["source"] = "Taranthiza",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196970,
		},
		[326909] = {
			["npcID"] = 163992,
		},
		[394485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hypoxicron",
			["npcID"] = 186334,
		},
		[360737] = {
			["npcID"] = 181116,
		},
		[357626] = {
			["npcID"] = 177443,
		},
		[338407] = {
			["npcID"] = 165339,
		},
		[368379] = {
			["npcID"] = 183516,
		},
		[198944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Shieldmaiden",
			["npcID"] = 95832,
		},
		[166543] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 82721,
			["encounterID"] = 1732,
		},
		[276754] = {
			["npcID"] = 177982,
		},
		[394487] = {
			["source"] = "Death's Shadow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190985,
		},
		[372529] = {
			["npcID"] = 183343,
		},
		[357146] = {
			["npcID"] = 177938,
		},
		[330969] = {
			["npcID"] = 177437,
		},
		[372296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontorch Commander",
			["npcID"] = 189466,
		},
		[363772] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[356812] = {
			["npcID"] = 180286,
		},
		[169730] = {
			["npcID"] = 84877,
		},
		[410978] = {
			["source"] = "Djaradin Dragonhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202108,
		},
		[322818] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[391871] = {
			["source"] = "Duskpaw Tendontearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197820,
		},
		[188046] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 198489,
			["encounterID"] = 2537,
		},
		[320771] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[327995] = {
			["npcID"] = 168574,
		},
		[357631] = {
			["npcID"] = 177982,
		},
		[198892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Storm Drake",
			["npcID"] = 97068,
		},
		[320772] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[355584] = {
			["npcID"] = 178171,
		},
		[349891] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177268,
		},
		[336666] = {
			["npcID"] = 166012,
		},
		[334263] = {
			["npcID"] = 168977,
		},
		[157331] = {
			["npcID"] = 77942,
		},
		[300296] = {
			["npcID"] = 150143,
		},
		[376063] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Smoldering Hellion",
			["npcID"] = 191510,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[271628] = {
			["npcID"] = 164334,
		},
		[404732] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[365825] = {
			["npcID"] = 182649,
		},
		[229558] = {
			["npcID"] = 115402,
		},
		[378112] = {
			["source"] = "Encroaching Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189314,
		},
		[252438] = {
			["npcID"] = 126493,
		},
		[375439] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["npcID"] = 181861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[260793] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131817,
		},
		[353540] = {
			["npcID"] = 179152,
		},
		[265487] = {
			["source"] = "Bloodsworn Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[328016] = {
			["npcID"] = 168578,
		},
		[343302] = {
			["npcID"] = 173446,
		},
		[335528] = {
			["npcID"] = 159755,
		},
		[362849] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 183501,
		},
		[406783] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[392449] = {
			["npcID"] = 190173,
		},
		[362494] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[374020] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Containment Apparatus",
			["npcID"] = 190342,
		},
		[227981] = {
			["npcID"] = 114541,
		},
		[392451] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Channeler",
			["npcID"] = 197985,
		},
		[369925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Transformed Dreadsquall",
			["npcID"] = 197225,
		},
		[351589] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177893,
		},
		[357639] = {
			["npcID"] = 177422,
		},
		[335114] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[354927] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[196242] = {
			["npcID"] = 99649,
		},
		[374022] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[359688] = {
			["npcID"] = 181967,
		},
		[336601] = {
			["npcID"] = 164476,
		},
		[329396] = {
			["npcID"] = 178287,
		},
		[357641] = {
			["npcID"] = 177982,
		},
		[228528] = {
			["npcID"] = 114783,
		},
		[393539] = {
			["npcID"] = 186592,
		},
		[371976] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[353635] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[361209] = {
			["npcID"] = 182466,
		},
		[378120] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Rock",
			["npcID"] = 192799,
		},
		[347404] = {
			["npcID"] = 155830,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["npcID"] = 184018,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2556,
		},
		[376073] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[366938] = {
			["npcID"] = 185032,
		},
		[316779] = {
			["npcID"] = 178043,
		},
		[316689] = {
			["npcID"] = 162682,
		},
		[335119] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[396018] = {
			["source"] = "The Crybaby Hozen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59552,
		},
		[396552] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[392955] = {
			["npcID"] = 183422,
		},
		[294165] = {
			["npcID"] = 150958,
		},
		[331108] = {
			["npcID"] = 160048,
		},
		[404744] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[332431] = {
			["npcID"] = 170513,
		},
		[322936] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[320787] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[331026] = {
			["npcID"] = 160185,
		},
		[327016] = {
			["npcID"] = 159156,
		},
		[351090] = {
			["npcID"] = 176574,
		},
		[320788] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[174422] = {
			["npcID"] = 86330,
		},
		[392539] = {
			["source"] = "Awakened Terrasentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197801,
		},
		[357029] = {
			["npcID"] = 180335,
		},
		[388801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Warrior",
			["npcID"] = 195855,
		},
		[371983] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[172736] = {
			["npcID"] = 79230,
		},
		[387849] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[290435] = {
			["npcID"] = 144536,
		},
		[371984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flashfrost Chillweaver",
			["npcID"] = 188067,
		},
		[396019] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59545,
		},
		[343316] = {
			["npcID"] = 173446,
		},
		[205462] = {
			["npcID"] = 166137,
		},
		[167119] = {
			["npcID"] = 173114,
		},
		[173384] = {
			["npcID"] = 83392,
		},
		[294171] = {
			["npcID"] = 150959,
		},
		[165122] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80816,
			["encounterID"] = 1748,
		},
		[396559] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[395859] = {
			["source"] = "Haunting Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59555,
		},
		[347414] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[394512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Spawn",
			["npcID"] = 75652,
		},
		[339223] = {
			["npcID"] = 158259,
		},
		[232084] = {
			["npcID"] = 116549,
		},
		[3110] = {
			["npcID"] = 416,
		},
		[382563] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[212031] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Energy",
			["npcID"] = 105705,
		},
		[196249] = {
			["npcID"] = 99649,
		},
		[335129] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[328986] = {
			["npcID"] = 169159,
		},
		[207642] = {
			["npcID"] = 175922,
		},
		[256658] = {
			["npcID"] = 166029,
		},
		[374038] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187767,
		},
		[337178] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 170838,
		},
		[339226] = {
			["npcID"] = 158259,
		},
		[365847] = {
			["npcID"] = 183229,
		},
		[359704] = {
			["npcID"] = 181626,
		},
		[413012] = {
			["source"] = "Shadow Additive",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205671,
		},
		[252698] = {
			["npcID"] = 126470,
		},
		[225100] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[271652] = {
			["npcID"] = 176434,
		},
		[353562] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 179177,
		},
		[372056] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187772,
		},
		[344464] = {
			["npcID"] = 166398,
		},
		[351835] = {
			["npcID"] = 179894,
		},
		[365850] = {
			["npcID"] = 181652,
		},
		[265511] = {
			["source"] = "Spirit Drain Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135169,
		},
		[191132] = {
			["source"] = "God-King Skovald",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92307,
		},
		[343325] = {
			["npcID"] = 173445,
		},
		[369946] = {
			["npcID"] = 191611,
		},
		[259732] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[365851] = {
			["npcID"] = 183404,
		},
		[294180] = {
			["npcID"] = 151773,
		},
		[172703] = {
			["npcID"] = 83763,
		},
		[355613] = {
			["npcID"] = 178958,
		},
		[213688] = {
			["npcID"] = 107024,
		},
		[323137] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164804,
		},
		[319906] = {
			["npcID"] = 177252,
		},
		[360778] = {
			["npcID"] = 181116,
		},
		[278935] = {
			["npcID"] = 170737,
		},
		[295282] = {
			["npcID"] = 154033,
		},
		[277060] = {
			["npcID"] = 154020,
		},
		[344411] = {
			["npcID"] = 154330,
		},
		[374045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Containment Apparatus",
			["npcID"] = 190342,
		},
		[192158] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["npcID"] = 97202,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1806,
		},
		[320804] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164561,
		},
		[380174] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[343320] = {
			["npcID"] = 173444,
		},
		[147108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Voidclaw",
			["npcID"] = 74374,
		},
		[320805] = {
			["npcID"] = 156561,
		},
		[331044] = {
			["npcID"] = 170860,
		},
		[147650] = {
			["npcID"] = 172071,
		},
		[319547] = {
			["npcID"] = 165706,
		},
		[378143] = {
			["npcID"] = 189939,
		},
		[331045] = {
			["npcID"] = 170860,
		},
		[13878] = {
			["npcID"] = 45569,
		},
		[335141] = {
			["npcID"] = 165824,
		},
		[317880] = {
			["npcID"] = 158992,
		},
		[388383] = {
			["source"] = "Iskaara Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186431,
		},
		[120149] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 194853,
		},
		[365908] = {
			["npcID"] = 184880,
		},
		[196512] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[393609] = {
			["npcID"] = 187645,
		},
		[338686] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173163,
			["encounterID"] = 2407,
		},
		[335143] = {
			["npcID"] = 165222,
		},
		[353573] = {
			["npcID"] = 179133,
		},
		[331048] = {
			["npcID"] = 170932,
		},
		[368295] = {
			["npcID"] = 183953,
		},
		[357086] = {
			["npcID"] = 180392,
		},
		[357143] = {
			["npcID"] = 178646,
		},
		[372225] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonesplitter",
			["npcID"] = 189467,
		},
		[357670] = {
			["npcID"] = 178859,
		},
		[384291] = {
			["npcID"] = 196913,
		},
		[382233] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Batak",
			["npcID"] = 193462,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[167589] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79548,
			["encounterID"] = 1732,
		},
		[166565] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79548,
			["encounterID"] = 1732,
		},
		[384292] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Thunder Caller",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194647,
		},
		[301629] = {
			["npcID"] = 150297,
		},
		[265523] = {
			["source"] = "Bloodsworn Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[274792] = {
			["npcID"] = 140149,
		},
		[332610] = {
			["npcID"] = 156333,
		},
		[378150] = {
			["npcID"] = 186825,
		},
		[290097] = {
			["npcID"] = 144570,
		},
		[324909] = {
			["npcID"] = 164926,
		},
		[374112] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Frostbreath Arachnid",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189234,
		},
		[356929] = {
			["npcID"] = 179837,
		},
		[344404] = {
			["npcID"] = 175012,
		},
		[227999] = {
			["npcID"] = 114542,
		},
		[392486] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Channeler",
			["npcID"] = 198047,
		},
		[373636] = {
			["npcID"] = 192949,
		},
		[366701] = {
			["npcID"] = 185268,
		},
		[384296] = {
			["npcID"] = 196913,
		},
		[294195] = {
			["npcID"] = 144298,
		},
		[357871] = {
			["npcID"] = 177903,
		},
		[388392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unruly Textbook",
			["npcID"] = 196044,
		},
		[382249] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Trickclaw Mystic",
			["npcID"] = 185528,
		},
		[357082] = {
			["npcID"] = 178733,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[292139] = {
			["npcID"] = 150754,
		},
		[398632] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 200852,
		},
		[346866] = {
			["npcID"] = 174175,
		},
		[378155] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["npcID"] = 186125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[300687] = {
			["npcID"] = 154744,
		},
		[324914] = {
			["npcID"] = 166299,
		},
		[356088] = {
			["npcID"] = 177984,
		},
		[381280] = {
			["source"] = "Uktulut Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193204,
		},
		[381517] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["npcID"] = 190485,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2623,
		},
		[365870] = {
			["npcID"] = 183404,
		},
		[294884] = {
			["npcID"] = 152009,
		},
		[377512] = {
			["npcID"] = 191628,
		},
		[214692] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[365871] = {
			["npcID"] = 184604,
		},
		[318773] = {
			["npcID"] = 166347,
		},
		[230050] = {
			["npcID"] = 115765,
		},
		[157355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidseer Kalurg",
			["npcID"] = 83385,
		},
		[365872] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[164187] = {
			["npcID"] = 81407,
		},
		[320822] = {
			["npcID"] = 165222,
		},
		[290106] = {
			["npcID"] = 144570,
		},
		[162475] = {
			["encounterName"] = "Tectus, The Living Mountain",
			["npcID"] = 78948,
			["encounterID"] = 1722,
		},
		[272272] = {
			["npcID"] = 161692,
		},
		[320823] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[29928] = {
			["npcID"] = 114625,
		},
		[347609] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[345397] = {
			["encounterName"] = "Shriekwing",
			["encounterID"] = 2398,
			["npcID"] = 164406,
		},
		[353588] = {
			["npcID"] = 179133,
		},
		[169732] = {
			["npcID"] = 84877,
		},
		[357684] = {
			["npcID"] = 178855,
		},
		[361001] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 184522,
			["encounterID"] = 2512,
		},
		[320825] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164568,
		},
		[355637] = {
			["npcID"] = 179840,
		},
		[396615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[359733] = {
			["npcID"] = 181349,
		},
		[396007] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59553,
		},
		[352660] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[348128] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[359734] = {
			["npcID"] = 185755,
		},
		[356886] = {
			["npcID"] = 180331,
		},
		[361448] = {
			["npcID"] = 182368,
		},
		[324923] = {
			["npcID"] = 164926,
		},
		[389268] = {
			["npcID"] = 187135,
		},
		[323058] = {
			["npcID"] = 165609,
		},
		[355640] = {
			["npcID"] = 179840,
		},
		[382261] = {
			["source"] = "Taranthiza",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196970,
		},
		[209413] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[265540] = {
			["source"] = "Fetid Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130909,
		},
		[355641] = {
			["npcID"] = 179841,
		},
		[349498] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176556,
			["encounterID"] = 2441,
		},
		[357232] = {
			["npcID"] = 179108,
		},
		[406851] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[355642] = {
			["npcID"] = 179841,
		},
		[318243] = {
			["npcID"] = 166357,
		},
		[357087] = {
			["npcID"] = 178731,
		},
		[320208] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[365895] = {
			["npcID"] = 183412,
		},
		[374073] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Geomancer",
			["npcID"] = 190345,
		},
		[339274] = {
			["npcID"] = 173298,
		},
		[300171] = {
			["npcID"] = 150276,
		},
		[337415] = {
			["npcID"] = 165339,
		},
		[325359] = {
			["npcID"] = 170317,
		},
		[384385] = {
			["source"] = "Prowling Frigidpelt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193062,
		},
		[372027] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187767,
		},
		[396600] = {
			["npcID"] = 192759,
		},
		[341852] = {
			["npcID"] = 173832,
		},
		[191161] = {
			["source"] = "God-King Skovald",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92307,
		},
		[361789] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 183149,
			["encounterID"] = 2544,
		},
		[355646] = {
			["npcID"] = 178191,
		},
		[369193] = {
			["npcID"] = 191597,
		},
		[171784] = {
			["npcID"] = 85768,
		},
		[330965] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[348756] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[359743] = {
			["npcID"] = 182357,
		},
		[331069] = {
			["npcID"] = 179615,
		},
		[342496] = {
			["npcID"] = 168961,
		},
		[365887] = {
			["npcID"] = 184878,
		},
		[304479] = {
			["npcID"] = 156015,
		},
		[351976] = {
			["npcID"] = 176598,
		},
		[51963] = {
			["npcID"] = 27829,
		},
		[365888] = {
			["npcID"] = 184879,
		},
		[394558] = {
			["source"] = "Unstable Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198577,
		},
		[320838] = {
			["npcID"] = 160356,
		},
		[153268] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Exhumer",
			["npcID"] = 77700,
		},
		[374080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Ravager",
			["npcID"] = 190348,
		},
		[31707] = {
			["npcID"] = 78116,
		},
		[353603] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[387708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tyrhold Watcher",
			["npcID"] = 192696,
		},
		[390463] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[359747] = {
			["npcID"] = 181453,
		},
		[158997] = {
			["npcID"] = 81362,
		},
		[394893] = {
			["source"] = "Lookout Mordren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193668,
		},
		[325360] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["encounterID"] = 2362,
			["npcID"] = 162102,
		},
		[384416] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["npcID"] = 186116,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2567,
		},
		[376356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scout Watu",
			["npcID"] = 190025,
		},
		[172818] = {
			["npcID"] = 184074,
		},
		[290395] = {
			["npcID"] = 144536,
		},
		[335473] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 164407,
			["encounterID"] = 2399,
		},
		[315802] = {
			["npcID"] = 150959,
		},
		[240006] = {
			["npcID"] = 182863,
		},
		[388410] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[342256] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["npcID"] = 75829,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1688,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["npcID"] = 186107,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[390194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[229567] = {
			["npcID"] = 115407,
		},
		[394563] = {
			["source"] = "Death's Shadow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190985,
		},
		[322892] = {
			["npcID"] = 156560,
		},
		[382277] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balara",
			["npcID"] = 193457,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[178071] = {
			["npcID"] = 80489,
		},
		[337227] = {
			["npcID"] = 169102,
		},
		[358047] = {
			["npcID"] = 179931,
		},
		[341323] = {
			["npcID"] = 173973,
		},
		[351562] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177893,
		},
		[176821] = {
			["npcID"] = 83754,
		},
		[396613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[389518] = {
			["npcID"] = 188180,
		},
		[353782] = {
			["npcID"] = 179136,
		},
		[357108] = {
			["npcID"] = 177144,
		},
		[259597] = {
			["npcID"] = 158110,
		},
		[365898] = {
			["npcID"] = 185346,
		},
		[333488] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[324079] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[388424] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[406854] = {
			["source"] = "Malgosa Spellbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205620,
		},
		[374066] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Geomancer",
			["npcID"] = 190345,
		},
		[317791] = {
			["npcID"] = 163366,
		},
		[173751] = {
			["npcID"] = 155216,
		},
		[365036] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 184126,
			["encounterID"] = 2539,
		},
		[350732] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[365026] = {
			["npcID"] = 182318,
		},
		[104318] = {
			["npcID"] = 55659,
		},
		[365901] = {
			["npcID"] = 185346,
		},
		[365044] = {
			["npcID"] = 182318,
		},
		[340724] = {
			["npcID"] = 177217,
		},
		[372045] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Caustic Spiderling",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189233,
		},
		[330496] = {
			["npcID"] = 155250,
		},
		[349797] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176556,
			["encounterID"] = 2441,
		},
		[168929] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 83612,
			["encounterID"] = 1754,
		},
		[366326] = {
			["npcID"] = 185537,
		},
		[365903] = {
			["npcID"] = 185346,
		},
		[335187] = {
			["npcID"] = 177645,
		},
		[337235] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[372047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defier Draghar",
			["npcID"] = 187897,
		},
		[411439] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[326997] = {
			["npcID"] = 167607,
		},
		[323150] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[340519] = {
			["npcID"] = 161857,
		},
		[365905] = {
			["npcID"] = 184860,
		},
		[228526] = {
			["npcID"] = 114783,
		},
		[167239] = {
			["npcID"] = 83028,
		},
		[322903] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 162099,
		},
		[232115] = {
			["npcID"] = 116549,
		},
		[384336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Lancemaster",
			["npcID"] = 192800,
		},
		[389433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darktooth Spirit-Caller",
			["npcID"] = 195267,
		},
		[413005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Additive",
			["npcID"] = 205672,
		},
		[365907] = {
			["npcID"] = 184880,
		},
		[326952] = {
			["npcID"] = 168058,
		},
		[353621] = {
			["npcID"] = 179133,
		},
		[265568] = {
			["source"] = "Befouled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133685,
		},
		[390481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[157348] = {
			["npcID"] = 77942,
		},
		[295985] = {
			["npcID"] = 159755,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["npcID"] = 184422,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[333145] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 167566,
			["encounterID"] = 2402,
		},
		[392530] = {
			["source"] = "Quarry Infuser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197799,
		},
		[395987] = {
			["source"] = "Jumping Spiderling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199182,
		},
		[197961] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["npcID"] = 95676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1809,
		},
		[390483] = {
			["source"] = "Riverbend Gnasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189337,
		},
		[395694] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Shocktrooper",
			["npcID"] = 199037,
		},
		[361815] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[22121] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timberstep Archer",
			["npcID"] = 194041,
		},
		[355930] = {
			["npcID"] = 177816,
		},
		[359768] = {
			["npcID"] = 181360,
		},
		[320861] = {
			["npcID"] = 169753,
		},
		[322909] = {
			["npcID"] = 164033,
		},
		[308575] = {
			["npcID"] = 158610,
		},
		[357659] = {
			["npcID"] = 178878,
		},
		[228625] = {
			["npcID"] = 183425,
		},
		[396629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Territorial Coastling",
			["npcID"] = 193163,
		},
		[340375] = {
			["npcID"] = 168148,
		},
		[359770] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56439,
		},
		[355675] = {
			["npcID"] = 176705,
		},
		[343322] = {
			["npcID"] = 168337,
		},
		[404754] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Null Glimmer",
			["npcID"] = 202971,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[369050] = {
			["npcID"] = 187149,
		},
		[273766] = {
			["npcID"] = 177539,
		},
		[397014] = {
			["source"] = "Qalashi Emissary",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197146,
		},
		[397043] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[312674] = {
			["npcID"] = 161388,
		},
		[273767] = {
			["npcID"] = 168110,
		},
		[364833] = {
			["npcID"] = 181111,
		},
		[224953] = {
			["npcID"] = 163662,
		},
		[387508] = {
			["source"] = "Time-Lost Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187244,
		},
		[339557] = {
			["npcID"] = 173464,
		},
		[387145] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormcaller Arynga",
			["npcID"] = 195265,
		},
		[295698] = {
			["npcID"] = 154041,
		},
		[337249] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[387411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulharvester Galtmaa",
			["npcID"] = 195927,
		},
		[357115] = {
			["npcID"] = 177915,
		},
		[367966] = {
			["npcID"] = 184901,
		},
		[330403] = {
			["npcID"] = 168153,
		},
		[388716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[341715] = {
			["encounterName"] = "Sludgefist",
			["source"] = "Countess Gloomveil",
			["npcID"] = 174162,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2399,
		},
		[330037] = {
			["npcID"] = 168361,
		},
		[328117] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[347490] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[357729] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178072,
		},
		[317792] = {
			["npcID"] = 163366,
		},
		[365835] = {
			["npcID"] = 183407,
		},
		[336810] = {
			["npcID"] = 160785,
		},
		[365921] = {
			["npcID"] = 183406,
		},
		[384351] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[378208] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["npcID"] = 186124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2570,
		},
		[173762] = {
			["npcID"] = 155216,
		},
		[341349] = {
			["npcID"] = 173973,
		},
		[343470] = {
			["npcID"] = 165919,
		},
		[394591] = {
			["source"] = "Tombcaller Ganzaya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188509,
		},
		[365831] = {
			["npcID"] = 182357,
		},
		[162500] = {
			["encounterName"] = "Rocketspark and Borka",
			["npcID"] = 77803,
			["encounterID"] = 1715,
		},
		[384353] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["npcID"] = 186116,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2567,
		},
		[337255] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[396640] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Ancient Branch",
			["npcID"] = 196548,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[294362] = {
			["npcID"] = 155908,
		},
		[175763] = {
			["npcID"] = 85241,
		},
		[325361] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[328002] = {
			["npcID"] = 168574,
		},
		[341352] = {
			["npcID"] = 173189,
		},
		[347679] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 175611,
			["encounterID"] = 2423,
		},
		[355349] = {
			["npcID"] = 177646,
		},
		[369921] = {
			["source"] = "Lava Phoenix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187932,
		},
		[357735] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 179847,
			["encounterID"] = 2430,
		},
		[388743] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Bakar",
			["npcID"] = 188510,
		},
		[366287] = {
			["npcID"] = 185032,
		},
		[363879] = {
			["npcID"] = 183747,
		},
		[377338] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqualing",
			["npcID"] = 190406,
		},
		[352158] = {
			["npcID"] = 175727,
		},
		[106856] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["npcID"] = 186644,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2582,
		},
		[331248] = {
			["npcID"] = 171745,
		},
		[340300] = {
			["npcID"] = 173720,
		},
		[383231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 193944,
		},
		[177564] = {
			["npcID"] = 177586,
		},
		[317894] = {
			["npcID"] = 170042,
		},
		[340759] = {
			["npcID"] = 169889,
		},
		[319994] = {
			["npcID"] = 162258,
		},
		[396646] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[342875] = {
			["npcID"] = 166981,
		},
		[376169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Thaumaturge Fural",
			["npcID"] = 189905,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1870,
		},
		[323825] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165994,
		},
		[340746] = {
			["npcID"] = 167848,
		},
		[376170] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["npcID"] = 186121,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2569,
		},
		[345454] = {
			["npcID"] = 157833,
		},
		[386555] = {
			["source"] = "Dathea Stormlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[368062] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[376171] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Icecaller",
			["npcID"] = 190377,
		},
		[386410] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[348648] = {
			["npcID"] = 176520,
		},
		[385517] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotbow Sentry",
			["npcID"] = 187021,
		},
		[332608] = {
			["npcID"] = 170572,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[322931] = {
			["npcID"] = 158752,
		},
		[365934] = {
			["npcID"] = 184860,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Vigilant Duskwatch",
			["npcID"] = 104918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[345457] = {
			["npcID"] = 157833,
		},
		[342854] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[322000] = {
			["npcID"] = 166357,
		},
		[384365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Lancemaster",
			["npcID"] = 192800,
		},
		[378222] = {
			["npcID"] = 187324,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["npcID"] = 75452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1679,
		},
		[334664] = {
			["npcID"] = 171341,
		},
		[384366] = {
			["npcID"] = 195324,
		},
		[334051] = {
			["npcID"] = 168942,
		},
		[390926] = {
			["source"] = "Barker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194515,
		},
		[332569] = {
			["npcID"] = 156559,
		},
		[228606] = {
			["npcID"] = 114803,
		},
		[373201] = {
			["source"] = "Windyfin Skybasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187431,
		},
		[395957] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellforged Horror",
			["npcID"] = 194401,
		},
		[319711] = {
			["npcID"] = 166872,
		},
		[270613] = {
			["npcID"] = 179079,
		},
		[334377] = {
			["npcID"] = 171805,
		},
		[404846] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[357123] = {
			["npcID"] = 180779,
		},
		[227463] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114320,
			["encounterID"] = 1961,
		},
		[334329] = {
			["npcID"] = 171376,
		},
		[228991] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114675,
			["encounterID"] = 1965,
		},
		[385812] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[353783] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[331223] = {
			["npcID"] = 162763,
		},
		[356817] = {
			["npcID"] = 178578,
		},
		[328940] = {
			["npcID"] = 171383,
		},
		[327130] = {
			["npcID"] = 165872,
		},
		[336048] = {
			["npcID"] = 167704,
		},
		[297018] = {
			["npcID"] = 152995,
		},
		[324987] = {
			["npcID"] = 166301,
		},
		[296454] = {
			["npcID"] = 152656,
		},
		[382179] = {
			["source"] = "Arcane Manipulator Tharohn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188171,
		},
		[322940] = {
			["npcID"] = 172067,
		},
		[350916] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 179269,
			["encounterID"] = 2440,
		},
		[408946] = {
			["source"] = "Sundered Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198870,
		},
		[297166] = {
			["npcID"] = 152875,
		},
		[372087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defier Draghar",
			["npcID"] = 187897,
		},
		[374135] = {
			["npcID"] = 190726,
		},
		[395035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulharvester Galtmaa",
			["npcID"] = 195927,
		},
		[319713] = {
			["encounterName"] = "Kryxis the Voracious",
			["encounterID"] = 2360,
			["npcID"] = 162100,
		},
		[331133] = {
			["npcID"] = 160048,
		},
		[315963] = {
			["npcID"] = 170146,
		},
		[340655] = {
			["npcID"] = 172077,
		},
		[330968] = {
			["npcID"] = 174842,
		},
		[322943] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[256099] = {
			["npcID"] = 166032,
		},
		[257732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[229151] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["npcID"] = 114790,
			["encounterID"] = 2017,
		},
		[356133] = {
			["npcID"] = 180015,
		},
		[325119] = {
			["npcID"] = 157212,
		},
		[376186] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Lahar",
			["npcID"] = 189235,
		},
		[191595] = {
			["npcID"] = 96587,
		},
		[79860] = {
			["npcID"] = 155283,
		},
		[372201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Irontorch",
			["npcID"] = 189464,
		},
		[392569] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamegullet",
			["npcID"] = 197697,
		},
		[377029] = {
			["source"] = "Primal Scythid Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184853,
		},
		[396665] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[198442] = {
			["npcID"] = 165909,
		},
		[335233] = {
			["npcID"] = 177245,
		},
		[328857] = {
			["encounterName"] = "Shriekwing",
			["encounterID"] = 2398,
			["npcID"] = 164406,
		},
		[372093] = {
			["npcID"] = 191110,
		},
		[269837] = {
			["npcID"] = 120843,
		},
		[227638] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114262,
			["encounterID"] = 1960,
		},
		[355477] = {
			["npcID"] = 179842,
		},
		[355118] = {
			["npcID"] = 178133,
		},
		[375988] = {
			["npcID"] = 191051,
		},
		[378420] = {
			["source"] = "Crudely Bound Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187723,
		},
		[394620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nightrot",
			["npcID"] = 188707,
		},
		[75068] = {
			["npcID"] = 42043,
		},
		[300424] = {
			["encounterName"] = "King Gobbamak",
			["npcID"] = 150160,
			["encounterID"] = 2290,
		},
		[322711] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[196194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steeljaw Grizzly",
			["npcID"] = 96677,
		},
		[304831] = {
			["npcID"] = 185100,
		},
		[350803] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[392574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Channeler",
			["npcID"] = 198047,
		},
		[394622] = {
			["source"] = "Gnarls",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197354,
		},
		[323748] = {
			["npcID"] = 158642,
		},
		[387629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Desecrated Ohuna",
			["npcID"] = 195876,
		},
		[257736] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
		},
		[365717] = {
			["npcID"] = 183432,
		},
		[161887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Driftwatcher Rylak",
			["npcID"] = 72849,
		},
		[320063] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164451,
		},
		[392576] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Channeler",
			["npcID"] = 198047,
		},
		[395939] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clearwater Bull",
			["npcID"] = 192652,
		},
		[363024] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183671,
			["encounterID"] = 2546,
		},
		[398720] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bulwark",
			["npcID"] = 200850,
		},
		[408959] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[277035] = {
			["npcID"] = 154018,
		},
		[320171] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[212773] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Reinforcement",
			["npcID"] = 107073,
		},
		[359975] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[372539] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[359547] = {
			["npcID"] = 183931,
		},
		[365958] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[392579] = {
			["source"] = "Quarry Stonebreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197831,
		},
		[370054] = {
			["npcID"] = 181875,
		},
		[300188] = {
			["npcID"] = 150253,
		},
		[198962] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Runecarver",
			["npcID"] = 96664,
		},
		[336556] = {
			["npcID"] = 164897,
		},
		[230094] = {
			["npcID"] = 115765,
		},
		[392337] = {
			["npcID"] = 186853,
		},
		[389245] = {
			["npcID"] = 190111,
		},
		[257739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktooth Scrapper",
			["npcID"] = 129529,
		},
		[193235] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["npcID"] = 94960,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1805,
		},
		[413059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Canister",
			["npcID"] = 206019,
		},
		[365961] = {
			["npcID"] = 183406,
		},
		[294290] = {
			["npcID"] = 144293,
		},
		[396350] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fleshripper Vulture",
			["npcID"] = 197133,
		},
		[413060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fire Canister",
			["npcID"] = 206022,
		},
		[300434] = {
			["encounterName"] = "King Gobbamak",
			["npcID"] = 150160,
			["encounterID"] = 2290,
		},
		[198959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Runecarver",
			["npcID"] = 96664,
		},
		[339789] = {
			["npcID"] = 166046,
		},
		[340807] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[341390] = {
			["npcID"] = 174012,
		},
		[392854] = {
			["source"] = "Primal Scythid Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184853,
		},
		[329104] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[331152] = {
			["npcID"] = 167164,
		},
		[300436] = {
			["npcID"] = 150146,
		},
		[386173] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["npcID"] = 194181,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2562,
		},
		[329310] = {
			["npcID"] = 158813,
		},
		[345207] = {
			["npcID"] = 170031,
		},
		[385862] = {
			["npcID"] = 195218,
		},
		[400777] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[381770] = {
			["encounterName"] = "Treemouth",
			["source"] = "Decaying Slime",
			["npcID"] = 192481,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2568,
		},
		[343138] = {
			["npcID"] = 173575,
		},
		[361016] = {
			["npcID"] = 183253,
		},
		[408969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Mud",
			["npcID"] = 192519,
		},
		[329107] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169219,
			["encounterID"] = 2405,
		},
		[300129] = {
			["npcID"] = 152009,
		},
		[154331] = {
			["npcID"] = 133104,
		},
		[408970] = {
			["source"] = "Sundered Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198870,
		},
		[347224] = {
			["npcID"] = 161846,
		},
		[322965] = {
			["npcID"] = 161971,
		},
		[341395] = {
			["npcID"] = 174012,
		},
		[355914] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[353682] = {
			["npcID"] = 176880,
		},
		[365678] = {
			["npcID"] = 184734,
		},
		[341133] = {
			["npcID"] = 165470,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[329110] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 164967,
			["encounterID"] = 2384,
		},
		[332937] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 170710,
		},
		[184381] = {
			["npcID"] = 159190,
		},
		[397134] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187772,
		},
		[341623] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[322968] = {
			["npcID"] = 165111,
		},
		[360538] = {
			["npcID"] = 182120,
		},
		[331379] = {
			["npcID"] = 167965,
		},
		[300650] = {
			["npcID"] = 150169,
		},
		[349805] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176973,
			["encounterID"] = 2422,
		},
		[390760] = {
			["npcID"] = 186678,
		},
		[359829] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[345495] = {
			["npcID"] = 175519,
		},
		[396689] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worldcarver A'tir",
			["npcID"] = 186859,
		},
		[328756] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[392594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meatgrinder Sotok",
			["npcID"] = 186777,
		},
		[395893] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[328799] = {
			["npcID"] = 177420,
		},
		[373936] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[366716] = {
			["npcID"] = 185274,
		},
		[229706] = {
			["npcID"] = 115418,
		},
		[209495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[390548] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[163550] = {
			["encounterName"] = "Nitrogg Thundertower",
			["npcID"] = 79545,
			["encounterID"] = 1732,
		},
		[350847] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[355737] = {
			["npcID"] = 179446,
		},
		[316830] = {
			["npcID"] = 158631,
		},
		[325232] = {
			["npcID"] = 177214,
		},
		[372562] = {
			["npcID"] = 186516,
		},
		[325725] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[341404] = {
			["npcID"] = 174017,
		},
		[164218] = {
			["npcID"] = 81407,
		},
		[346186] = {
			["npcID"] = 167323,
		},
		[347548] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[341854] = {
			["npcID"] = 173832,
		},
		[296355] = {
			["npcID"] = 152612,
		},
		[361024] = {
			["npcID"] = 181007,
		},
		[341406] = {
			["npcID"] = 174012,
		},
		[368027] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[176696] = {
			["npcID"] = 85752,
		},
		[322977] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[358466] = {
			["npcID"] = 178898,
		},
		[351646] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[242391] = {
			["npcID"] = 156212,
		},
		[322978] = {
			["npcID"] = 159174,
		},
		[327296] = {
			["npcID"] = 156561,
		},
		[386700] = {
			["source"] = "Hailbringer Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189228,
		},
		[227672] = {
			["encounterName"] = "Moroes",
			["npcID"] = 114321,
			["encounterID"] = 1961,
		},
		[375919] = {
			["source"] = "Ashen Groveripper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187872,
		},
		[316836] = {
			["npcID"] = 158992,
		},
		[408614] = {
			["source"] = "Sundered Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198869,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1870,
		},
		[322980] = {
			["npcID"] = 163350,
		},
		[292264] = {
			["encounterName"] = "King Mechagon",
			["npcID"] = 144249,
			["encounterID"] = 2260,
		},
		[351649] = {
			["npcID"] = 176576,
		},
		[346766] = {
			["encounterName"] = "Hylbrande",
			["encounterID"] = 2426,
			["npcID"] = 175663,
		},
		[328331] = {
			["npcID"] = 168717,
		},
		[394344] = {
			["source"] = "Death's Shadow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190985,
		},
		[335268] = {
			["npcID"] = 170064,
		},
		[326712] = {
			["npcID"] = 167956,
		},
		[350894] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 175729,
		},
		[398749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bulwark",
			["npcID"] = 200850,
		},
		[229083] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["npcID"] = 114790,
			["encounterID"] = 2017,
		},
		[361890] = {
			["npcID"] = 181453,
		},
		[372129] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[406678] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[368034] = {
			["npcID"] = 183722,
		},
		[29583] = {
			["npcID"] = 114625,
		},
		[334942] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165067,
			["encounterID"] = 2418,
		},
		[391198] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tserasor the Preserver",
			["npcID"] = 190598,
		},
		[320529] = {
			["npcID"] = 168886,
		},
		[172771] = {
			["npcID"] = 86809,
		},
		[351912] = {
			["npcID"] = 178366,
		},
		[325033] = {
			["npcID"] = 167951,
		},
		[330786] = {
			["npcID"] = 169861,
		},
		[258777] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Oarsman",
			["npcID"] = 127111,
		},
		[404896] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[333225] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 170851,
		},
		[368037] = {
			["npcID"] = 185677,
		},
		[315076] = {
			["npcID"] = 173414,
		},
		[82641] = {
			["npcID"] = 41272,
		},
		[298025] = {
			["npcID"] = 173966,
		},
		[400802] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187676,
		},
		[373279] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 189988,
			["encounterID"] = 2422,
		},
		[199034] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Aspirant",
			["npcID"] = 101637,
		},
		[333227] = {
			["npcID"] = 169905,
		},
		[387504] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[394660] = {
			["source"] = "Bluescale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188723,
		},
		[355753] = {
			["npcID"] = 179894,
		},
		[338637] = {
			["npcID"] = 185105,
		},
		[310703] = {
			["npcID"] = 159459,
		},
		[353706] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176562,
			["encounterID"] = 2440,
		},
		[396709] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gutchewer Bear",
			["npcID"] = 197134,
		},
		[329425] = {
			["npcID"] = 157824,
		},
		[191524] = {
			["npcID"] = 96657,
		},
		[394662] = {
			["npcID"] = 190761,
		},
		[227339] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
			["encounterID"] = 1960,
		},
		[359459] = {
			["npcID"] = 184060,
		},
		[257756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Buccaneer",
			["npcID"] = 129527,
		},
		[365708] = {
			["npcID"] = 183432,
		},
		[331634] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[341422] = {
			["npcID"] = 174194,
		},
		[359852] = {
			["npcID"] = 181981,
		},
		[378282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Thaumaturge",
			["npcID"] = 192788,
		},
		[301075] = {
			["npcID"] = 165167,
		},
		[360451] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[333531] = {
			["npcID"] = 172210,
		},
		[350071] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177117,
		},
		[357081] = {
			["npcID"] = 176956,
		},
		[347153] = {
			["npcID"] = 171849,
		},
		[271310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pathfinder Tacha",
			["npcID"] = 200263,
		},
		[345520] = {
			["npcID"] = 157833,
		},
		[365596] = {
			["npcID"] = 180917,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[175848] = {
			["npcID"] = 85225,
		},
		[373729] = {
			["npcID"] = 190128,
		},
		[228269] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[366566] = {
			["npcID"] = 184910,
		},
		[368047] = {
			["npcID"] = 178508,
		},
		[340739] = {
			["npcID"] = 173855,
		},
		[114646] = {
			["source"] = "Haunting Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59555,
		},
		[22883] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[32011] = {
			["npcID"] = 45618,
		},
		[345523] = {
			["npcID"] = 156203,
		},
		[396717] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[366001] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182074,
		},
		[349954] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176555,
			["encounterID"] = 2441,
		},
		[283634] = {
			["npcID"] = 144529,
		},
		[322999] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["encounterID"] = 2359,
			["npcID"] = 162061,
		},
		[328462] = {
			["npcID"] = 168845,
		},
		[357144] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 180323,
		},
		[396269] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[293670] = {
			["npcID"] = 144299,
		},
		[383237] = {
			["npcID"] = 187321,
		},
		[296748] = {
			["npcID"] = 152875,
		},
		[331550] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 170197,
			["encounterID"] = 2406,
		},
		[372147] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balara",
			["npcID"] = 193457,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[228278] = {
			["npcID"] = 114633,
		},
		[209404] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Arcanist",
			["npcID"] = 104247,
		},
		[388000] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[354242] = {
			["npcID"] = 179434,
		},
		[333241] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 170850,
		},
		[341796] = {
			["npcID"] = 165066,
		},
		[366406] = {
			["npcID"] = 184908,
		},
		[382749] = {
			["npcID"] = 187111,
		},
		[366379] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[409009] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summitshaper Lorac",
			["npcID"] = 201522,
		},
		[271329] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pathfinder Tacha",
			["npcID"] = 200263,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[330565] = {
			["npcID"] = 164506,
		},
		[341969] = {
			["npcID"] = 174210,
		},
		[394676] = {
			["source"] = "Council Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198501,
		},
		[372151] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gutchewer Bear",
			["npcID"] = 186284,
		},
		[338867] = {
			["npcID"] = 167526,
		},
		[361304] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 183421,
			["encounterID"] = 2544,
		},
		[370104] = {
			["npcID"] = 190767,
		},
		[358353] = {
			["npcID"] = 179760,
		},
		[388918] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[351091] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[345004] = {
			["npcID"] = 175347,
		},
		[388535] = {
			["source"] = "Gnawbone Chainchewer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196521,
		},
		[408677] = {
			["source"] = "Sundered Scaleguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198871,
		},
		[367561] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[352223] = {
			["npcID"] = 176578,
		},
		[316244] = {
			["npcID"] = 162056,
		},
		[338852] = {
			["npcID"] = 167527,
		},
		[394114] = {
			["source"] = "S.A.V.I.O.R.",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195328,
		},
		[394680] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reclaimer Makko",
			["npcID"] = 191536,
		},
		[339391] = {
			["npcID"] = 158259,
		},
		[338856] = {
			["npcID"] = 167527,
		},
		[351678] = {
			["npcID"] = 178271,
		},
		[386490] = {
			["encounterName"] = "Granyth",
			["source"] = "Nokhud Saboteur",
			["npcID"] = 195580,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[363965] = {
			["npcID"] = 183747,
		},
		[391003] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Shaman Rotknuckle",
			["npcID"] = 197356,
		},
		[368061] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[329635] = {
			["npcID"] = 158256,
		},
		[406516] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[341441] = {
			["npcID"] = 174069,
		},
		[351680] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[359313] = {
			["npcID"] = 185759,
		},
		[363967] = {
			["npcID"] = 185436,
		},
		[407199] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[409018] = {
			["source"] = "Failed Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203927,
		},
		[401318] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[342963] = {
			["npcID"] = 158259,
		},
		[330678] = {
			["npcID"] = 168862,
		},
		[359337] = {
			["npcID"] = 181967,
		},
		[320966] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[408576] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[178154] = {
			["encounterName"] = "Oshir",
			["npcID"] = 89011,
			["encounterID"] = 1750,
		},
		[359334] = {
			["npcID"] = 181028,
		},
		[411916] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Devourer",
			["npcID"] = 205673,
		},
		[357286] = {
			["npcID"] = 180392,
		},
		[397386] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["npcID"] = 199703,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[376257] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191225,
		},
		[361923] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 183138,
		},
		[388544] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[400430] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["npcID"] = 201261,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2688,
		},
		[392640] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderhead",
			["npcID"] = 197698,
		},
		[348071] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[405016] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[407640] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["npcID"] = 201774,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[294349] = {
			["npcID"] = 144301,
		},
		[405437] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["npcID"] = 201934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2687,
		},
		[355782] = {
			["npcID"] = 179842,
		},
		[411798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oozing Sludge",
			["npcID"] = 205644,
		},
		[335305] = {
			["npcID"] = 171799,
		},
		[408476] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Erratic Remnant",
			["npcID"] = 202824,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[406227] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[407596] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[411730] = {
			["source"] = "Molten Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205611,
		},
		[329163] = {
			["npcID"] = 168837,
		},
		[396739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Blue Gulper",
			["npcID"] = 195976,
		},
		[401867] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["npcID"] = 200836,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2682,
		},
		[302543] = {
			["npcID"] = 155483,
		},
		[141427] = {
			["npcID"] = 183257,
		},
		[409445] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voracious Magma Worm",
			["npcID"] = 203825,
		},
		[374215] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[335308] = {
			["npcID"] = 171799,
		},
		[288210] = {
			["npcID"] = 163032,
		},
		[405850] = {
			["source"] = "Drazos Blackwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205623,
		},
		[403978] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[402050] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[403671] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[396742] = {
			["source"] = "Slobberclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195972,
		},
		[264608] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[401500] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[401383] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[404027] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[413147] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[411236] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[329168] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[339407] = {
			["npcID"] = 173280,
		},
		[382410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Trickclaw Mystic",
			["npcID"] = 185528,
		},
		[257397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bonesaw",
			["npcID"] = 129788,
		},
		[402888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonesifter Marwak",
			["npcID"] = 200681,
		},
		[257784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[281329] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Jolly",
			["npcID"] = 126845,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[327122] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168158,
		},
		[345552] = {
			["npcID"] = 177168,
		},
		[214771] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99651,
		},
		[258199] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[54318] = {
			["npcID"] = 29337,
		},
		[329171] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[413145] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[413136] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[257458] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
	},
}
PlaterLanguage = {
	["language"] = "enUS",
	["version"] = 1,
}

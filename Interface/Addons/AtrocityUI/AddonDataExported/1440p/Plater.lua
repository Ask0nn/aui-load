local atrocityUI = select(2, ...)
atrocityUI.PlaterDB["1440p"] = {
	["captured_spells"] = {
		[396364] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Raszageth",
			["npcID"] = 199388,
		},
		[61684] = {
			["source"] = "Sampson",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[209033] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Duskwatch Guard",
			["npcID"] = 111563,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["type"] = "BUFF",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1869,
		},
		[373570] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hypnosis Bat",
			["npcID"] = 190174,
		},
		[1604] = {
			["source"] = "Frostwall Goren",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 81362,
		},
		[211384] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[209495] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[158997] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frostwall Goren",
			["npcID"] = 81362,
		},
		[211464] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Felbound Enforcer",
			["npcID"] = 104278,
		},
		[225101] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[211401] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[209512] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[158982] = {
			["source"] = "Frostwall Goren",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81362,
		},
		[209036] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Duskwatch Sentry",
			["npcID"] = 104251,
		},
		[209719] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[373607] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hypnosis Bat",
			["npcID"] = 190174,
		},
		[397897] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[394754] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lindormi",
			["npcID"] = 197915,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["type"] = "BUFF",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1868,
		},
		[212784] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[213213] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ly'leth Lunastre",
			["npcID"] = 106468,
		},
		[24450] = {
			["source"] = "King Bangalash",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[224327] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[209516] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Saber",
			["npcID"] = 105699,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1869,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[214692] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[207850] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[373552] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["type"] = "BUFF",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1870,
		},
		[211470] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadow Mistress",
			["npcID"] = 104300,
		},
		[211391] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[108446] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[134477] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[373618] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hypnosis Bat",
			["npcID"] = 190174,
		},
		[397907] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[219488] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["type"] = "BUFF",
			["source"] = "Image of Advisor Melandrus",
			["npcID"] = 105754,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1870,
		},
		[207979] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[390193] = {
			["source"] = "Wild Imp",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 143622,
		},
		[209027] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Duskwatch Guard",
			["npcID"] = 111563,
		},
		[207980] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[86603] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dusk Lily Agent",
			["npcID"] = 113617,
		},
		[211473] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadow Mistress",
			["npcID"] = 104300,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1868,
		},
		[209378] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[211299] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[97097] = {
			["source"] = "Benjamin Brode",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 88779,
		},
		[90328] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[224125] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[211477] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[201754] = {
			["source"] = "Elegon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[81262] = {
			["source"] = "Efflorescence",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 47649,
		},
		[16827] = {
			["source"] = "Elegon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[209667] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[2649] = {
			["source"] = "Elegon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[390599] = {
			["source"] = "Child of Ohn'ahra",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191869,
		},
		[209713] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1870,
		},
		[212031] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Energy",
			["npcID"] = 105705,
		},
		[225100] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[386176] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[211406] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[198837] = {
			["source"] = "Risen Skulker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 99541,
		},
		[282449] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Akaari's Soul",
			["npcID"] = 144961,
		},
		[396369] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Raszageth",
			["npcID"] = 199388,
		},
		[397892] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[397903] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
		},
		[192082] = {
			["source"] = "Wind Rush Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 97285,
		},
		[172567] = {
			["source"] = "Frostwall Grunt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 81368,
		},
		[209413] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[373364] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[327942] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Windfury Totem",
			["npcID"] = 6112,
		},
		[209722] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
		},
		[209477] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Wyrm",
			["npcID"] = 105703,
		},
		[158998] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frostwall Goren",
			["npcID"] = 81362,
		},
	},
	["captured_casts"] = {
		[355225] = {
			["npcID"] = 178142,
		},
		[327584] = {
			["npcID"] = 168393,
		},
		[324513] = {
			["source"] = "Experimental Misstep",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199859,
		},
		[338846] = {
			["npcID"] = 167525,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[174574] = {
			["npcID"] = 87229,
		},
		[338847] = {
			["npcID"] = 167525,
		},
		[332705] = {
			["npcID"] = 170490,
		},
		[333729] = {
			["npcID"] = 168949,
		},
		[355228] = {
			["npcID"] = 178631,
		},
		[364442] = {
			["npcID"] = 180089,
		},
		[332706] = {
			["npcID"] = 170490,
		},
		[329635] = {
			["npcID"] = 158256,
		},
		[352158] = {
			["npcID"] = 175727,
		},
		[349087] = {
			["npcID"] = 176705,
		},
		[322470] = {
			["npcID"] = 157054,
		},
		[336803] = {
			["npcID"] = 160785,
		},
		[358302] = {
			["npcID"] = 179911,
		},
		[338851] = {
			["npcID"] = 167525,
		},
		[336804] = {
			["npcID"] = 177295,
		},
		[338852] = {
			["npcID"] = 167527,
		},
		[323496] = {
			["npcID"] = 165872,
		},
		[357280] = {
			["npcID"] = 180387,
		},
		[338853] = {
			["npcID"] = 167527,
		},
		[364447] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 184522,
		},
		[357281] = {
			["npcID"] = 180432,
		},
		[355234] = {
			["npcID"] = 178142,
		},
		[335783] = {
			["npcID"] = 155812,
		},
		[338855] = {
			["npcID"] = 167527,
		},
		[364449] = {
			["npcID"] = 179939,
		},
		[358307] = {
			["npcID"] = 179913,
		},
		[338856] = {
			["npcID"] = 167527,
		},
		[368545] = {
			["npcID"] = 184599,
		},
		[336809] = {
			["npcID"] = 162873,
		},
		[338857] = {
			["npcID"] = 167527,
		},
		[348071] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[336810] = {
			["npcID"] = 160785,
		},
		[325549] = {
			["npcID"] = 168960,
		},
		[338858] = {
			["npcID"] = 167526,
		},
		[357286] = {
			["npcID"] = 180392,
		},
		[362405] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[359334] = {
			["npcID"] = 181028,
		},
		[368548] = {
			["npcID"] = 185145,
		},
		[324527] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[374691] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[334765] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[348074] = {
			["npcID"] = 178041,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[325552] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[388001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bertinuat",
			["npcID"] = 196288,
		},
		[345004] = {
			["npcID"] = 175347,
		},
		[382883] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194241,
		},
		[359337] = {
			["npcID"] = 181967,
		},
		[368551] = {
			["npcID"] = 184605,
		},
		[227817] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[358314] = {
			["npcID"] = 180162,
		},
		[338863] = {
			["npcID"] = 167526,
		},
		[352172] = {
			["npcID"] = 178102,
		},
		[362410] = {
			["npcID"] = 181349,
		},
		[42382] = {
			["npcID"] = 17299,
		},
		[361387] = {
			["npcID"] = 182466,
		},
		[358316] = {
			["npcID"] = 180681,
		},
		[338865] = {
			["npcID"] = 173191,
		},
		[188404] = {
			["encounterName"] = "Hymdall",
			["source"] = "Storm Drake",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97788,
		},
		[385958] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[322486] = {
			["npcID"] = 164929,
		},
		[298940] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153755,
		},
		[385959] = {
			["source"] = "Titan Defense Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193244,
		},
		[362413] = {
			["npcID"] = 179939,
		},
		[338867] = {
			["npcID"] = 167526,
		},
		[79886] = {
			["npcID"] = 82901,
		},
		[374699] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[342963] = {
			["npcID"] = 158259,
		},
		[345011] = {
			["npcID"] = 173580,
		},
		[358320] = {
			["npcID"] = 180162,
		},
		[391081] = {
			["source"] = "Tserasor the Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190598,
		},
		[304063] = {
			["npcID"] = 155909,
		},
		[323515] = {
			["encounterName"] = "Gorechop",
			["npcID"] = 162317,
			["encounterID"] = 2365,
		},
		[358323] = {
			["npcID"] = 180246,
		},
		[338872] = {
			["npcID"] = 167526,
		},
		[298946] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153755,
		},
		[166397] = {
			["npcID"] = 82590,
		},
		[228334] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[360373] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[227823] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[321471] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[176124] = {
			["npcID"] = 173114,
		},
		[358327] = {
			["npcID"] = 179760,
		},
		[355256] = {
			["npcID"] = 178631,
		},
		[260072] = {
			["npcID"] = 131834,
		},
		[358328] = {
			["npcID"] = 179760,
		},
		[271310] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200263,
		},
		[395184] = {
			["npcID"] = 185883,
		},
		[396208] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197126,
		},
		[370615] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[360378] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[371618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cindershard Igniter",
			["npcID"] = 198382,
		},
		[177150] = {
			["npcID"] = 81726,
		},
		[374706] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[348094] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[347045] = {
			["npcID"] = 176131,
		},
		[375716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Primalist Mage",
			["npcID"] = 191206,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[318406] = {
			["encounterName"] = "Gorechop",
			["npcID"] = 162317,
			["encounterID"] = 2365,
		},
		[176127] = {
			["npcID"] = 80935,
		},
		[336834] = {
			["npcID"] = 177295,
		},
		[342939] = {
			["npcID"] = 169410,
		},
		[391055] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[375719] = {
			["npcID"] = 190739,
		},
		[304075] = {
			["npcID"] = 155812,
		},
		[199674] = {
			["source"] = "King Bjorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97081,
		},
		[347073] = {
			["npcID"] = 177187,
		},
		[389040] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thondrozus",
			["npcID"] = 192769,
		},
		[325535] = {
			["npcID"] = 164562,
		},
		[354240] = {
			["npcID"] = 179433,
		},
		[338864] = {
			["npcID"] = 167526,
		},
		[344003] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 168580,
		},
		[308172] = {
			["npcID"] = 158177,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[228852] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[173552] = {
			["npcID"] = 85768,
		},
		[336838] = {
			["npcID"] = 164345,
		},
		[354242] = {
			["npcID"] = 179434,
		},
		[79884] = {
			["npcID"] = 82901,
		},
		[392080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Lurker",
			["npcID"] = 194663,
		},
		[293827] = {
			["npcID"] = 144294,
		},
		[377765] = {
			["npcID"] = 187175,
		},
		[330697] = {
			["npcID"] = 170690,
		},
		[387987] = {
			["source"] = "Keen Skywatcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190778,
		},
		[385980] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[374719] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonejaw Basilisk",
			["npcID"] = 188128,
		},
		[373698] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brackenhide Shaper",
			["npcID"] = 186220,
		},
		[335817] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[328651] = {
			["npcID"] = 167493,
		},
		[337865] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165759,
		},
		[367554] = {
			["npcID"] = 183416,
		},
		[393148] = {
			["source"] = "Maneet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188704,
		},
		[320462] = {
			["npcID"] = 163128,
		},
		[387006] = {
			["npcID"] = 186361,
		},
		[374724] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[389054] = {
			["source"] = "Arcane Forager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196694,
		},
		[320463] = {
			["npcID"] = 177252,
		},
		[358342] = {
			["npcID"] = 179851,
		},
		[178154] = {
			["encounterName"] = "Oshir",
			["encounterID"] = 1750,
			["npcID"] = 89011,
		},
		[356295] = {
			["npcID"] = 170257,
		},
		[209404] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[378818] = {
			["source"] = "Qalashi Thaumaturge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192788,
		},
		[326607] = {
			["npcID"] = 167612,
		},
		[384961] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[320465] = {
			["npcID"] = 177252,
		},
		[329679] = {
			["npcID"] = 158256,
		},
		[330703] = {
			["npcID"] = 174210,
		},
		[270264] = {
			["npcID"] = 154131,
		},
		[350101] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176705,
		},
		[354250] = {
			["npcID"] = 179434,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[323538] = {
			["encounterName"] = "High Adjudicator Aleez",
			["encounterID"] = 2403,
			["npcID"] = 165410,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[385974] = {
			["encounterName"] = "Vexamus",
			["source"] = "Professor Maxdormu",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[392130] = {
			["source"] = "Professor Maxdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[199652] = {
			["source"] = "King Haldor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95843,
		},
		[389056] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[367561] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 180773,
			["encounterID"] = 2512,
		},
		[367503] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[271329] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200263,
		},
		[358348] = {
			["npcID"] = 179472,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[334757] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 169457,
		},
		[373693] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[350159] = {
			["npcID"] = 177267,
		},
		[351174] = {
			["npcID"] = 88224,
		},
		[319447] = {
			["npcID"] = 157016,
		},
		[396206] = {
			["source"] = "Nokhud Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200948,
		},
		[325590] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[359374] = {
			["npcID"] = 181028,
		},
		[356303] = {
			["npcID"] = 180162,
		},
		[354256] = {
			["npcID"] = 177413,
		},
		[325591] = {
			["npcID"] = 157212,
		},
		[347090] = {
			["npcID"] = 178263,
		},
		[323544] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 165905,
			["encounterID"] = 2395,
		},
		[304093] = {
			["npcID"] = 155908,
		},
		[166923] = {
			["npcID"] = 81603,
		},
		[347091] = {
			["npcID"] = 164047,
		},
		[364495] = {
			["npcID"] = 181625,
		},
		[345044] = {
			["npcID"] = 170028,
		},
		[358353] = {
			["npcID"] = 179760,
		},
		[367521] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[356306] = {
			["npcID"] = 177331,
		},
		[199172] = {
			["npcID"] = 99728,
		},
		[341977] = {
			["npcID"] = 170690,
		},
		[392141] = {
			["source"] = "Gamgus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194240,
		},
		[348117] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[209410] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[374735] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[326619] = {
			["npcID"] = 166873,
		},
		[356308] = {
			["npcID"] = 152594,
		},
		[328667] = {
			["npcID"] = 163126,
		},
		[387021] = {
			["npcID"] = 192238,
		},
		[347095] = {
			["npcID"] = 178263,
		},
		[294884] = {
			["npcID"] = 152009,
		},
		[320478] = {
			["npcID"] = 180379,
		},
		[378832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skulking Bruiser",
			["npcID"] = 196384,
		},
		[277481] = {
			["npcID"] = 154011,
		},
		[32011] = {
			["npcID"] = 45618,
		},
		[336859] = {
			["npcID"] = 162873,
		},
		[391118] = {
			["encounterName"] = "Azureblade",
			["source"] = "Scalebane Lieutenant",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191739,
		},
		[395214] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[327646] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[360334] = {
			["npcID"] = 183953,
		},
		[366549] = {
			["npcID"] = 185154,
		},
		[175607] = {
			["npcID"] = 82733,
		},
		[323552] = {
			["encounterName"] = "High Adjudicator Aleez",
			["encounterID"] = 2403,
			["npcID"] = 165410,
		},
		[338848] = {
			["npcID"] = 167525,
		},
		[354265] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[327648] = {
			["npcID"] = 168418,
		},
		[209413] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[392087] = {
			["npcID"] = 186834,
		},
		[343005] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[355214] = {
			["npcID"] = 178630,
		},
		[376780] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[373692] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[166906] = {
			["npcID"] = 178645,
		},
		[202728] = {
			["npcID"] = 99649,
		},
		[164854] = {
			["npcID"] = 80858,
		},
		[355212] = {
			["npcID"] = 178630,
		},
		[270241] = {
			["npcID"] = 154129,
		},
		[372696] = {
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188244,
		},
		[351117] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177889,
			["encounterID"] = 2435,
		},
		[29580] = {
			["npcID"] = 114625,
		},
		[348128] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[360412] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[357259] = {
			["npcID"] = 180392,
		},
		[325605] = {
			["npcID"] = 169630,
		},
		[338914] = {
			["npcID"] = 177628,
		},
		[352223] = {
			["npcID"] = 176578,
		},
		[372638] = {
			["npcID"] = 189706,
		},
		[327655] = {
			["npcID"] = 168420,
		},
		[244693] = {
			["encounterName"] = "Aggramar",
			["encounterID"] = 2063,
			["npcID"] = 121975,
		},
		[360414] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[357343] = {
			["npcID"] = 180427,
		},
		[211464] = {
			["source"] = "Felbound Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104278,
		},
		[297966] = {
			["npcID"] = 153382,
		},
		[319465] = {
			["npcID"] = 164184,
		},
		[283634] = {
			["npcID"] = 144529,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[388046] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[366559] = {
			["npcID"] = 185154,
		},
		[345002] = {
			["npcID"] = 168977,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[398296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shambling Infester",
			["npcID"] = 200387,
		},
		[350180] = {
			["npcID"] = 177286,
		},
		[355299] = {
			["npcID"] = 178661,
		},
		[334797] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 169457,
		},
		[386012] = {
			["source"] = "Stormcaller Arynga",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195265,
		},
		[329706] = {
			["npcID"] = 177397,
		},
		[388060] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[387037] = {
			["npcID"] = 195917,
		},
		[338921] = {
			["npcID"] = 163186,
		},
		[378847] = {
			["source"] = "Qalashi Spinecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192787,
		},
		[351206] = {
			["npcID"] = 176575,
		},
		[227800] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[324589] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 166524,
			["encounterID"] = 2404,
		},
		[398206] = {
			["source"] = "Exhumed Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75979,
		},
		[355230] = {
			["npcID"] = 152656,
		},
		[398300] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shambling Infester",
			["npcID"] = 200387,
		},
		[386015] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[387039] = {
			["npcID"] = 187299,
		},
		[175636] = {
			["npcID"] = 81272,
		},
		[378850] = {
			["npcID"] = 181536,
		},
		[390111] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[358375] = {
			["npcID"] = 179472,
		},
		[339927] = {
			["npcID"] = 173553,
		},
		[329711] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169196,
		},
		[361447] = {
			["npcID"] = 182425,
		},
		[391136] = {
			["source"] = "Drakonid Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187240,
		},
		[361448] = {
			["npcID"] = 182368,
		},
		[327664] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[373733] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[272382] = {
			["npcID"] = 155250,
		},
		[355306] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 179778,
		},
		[262145] = {
			["npcID"] = 175670,
		},
		[357354] = {
			["npcID"] = 180427,
		},
		[88845] = {
			["npcID"] = 47724,
		},
		[192018] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95833,
		},
		[355294] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[172567] = {
			["npcID"] = 81368,
		},
		[373729] = {
			["npcID"] = 190128,
		},
		[326574] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[357356] = {
			["npcID"] = 178369,
		},
		[211470] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[288765] = {
			["npcID"] = 177637,
		},
		[322550] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[211473] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[295932] = {
			["npcID"] = 151329,
		},
		[296956] = {
			["npcID"] = 152995,
		},
		[343025] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[227339] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114264,
		},
		[227851] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114312,
		},
		[191508] = {
			["source"] = "Valarjar Aspirant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101637,
		},
		[360432] = {
			["npcID"] = 182362,
		},
		[386026] = {
			["source"] = "Unstable Squall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194895,
		},
		[386024] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[366573] = {
			["npcID"] = 185154,
		},
		[362480] = {
			["npcID"] = 182322,
		},
		[376811] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[345077] = {
			["npcID"] = 170044,
		},
		[387049] = {
			["source"] = "Hypoxicron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186334,
		},
		[351109] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177787,
			["encounterID"] = 2435,
		},
		[401382] = {
			["encounterName"] = "Sadana Bloodfury",
			["source"] = "Past Self",
			["encounterID"] = 1677,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185800,
		},
		[345076] = {
			["npcID"] = 170037,
		},
		[374765] = {
			["npcID"] = 190960,
		},
		[322554] = {
			["encounterName"] = "Executor Tarvold",
			["npcID"] = 162103,
			["encounterID"] = 2361,
		},
		[193502] = {
			["npcID"] = 98177,
		},
		[373742] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[395241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Voltweaver",
			["npcID"] = 198868,
		},
		[386028] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "Primalist Thunderbeast",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[336888] = {
			["npcID"] = 168233,
		},
		[357284] = {
			["npcID"] = 180432,
		},
		[345079] = {
			["npcID"] = 170031,
		},
		[385005] = {
			["npcID"] = 189372,
		},
		[357364] = {
			["npcID"] = 178294,
		},
		[293854] = {
			["npcID"] = 144294,
		},
		[322557] = {
			["npcID"] = 172991,
		},
		[352141] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176974,
		},
		[339846] = {
			["npcID"] = 166052,
		},
		[387054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinetooth Hunter",
			["npcID"] = 187281,
		},
		[355226] = {
			["npcID"] = 152656,
		},
		[331718] = {
			["npcID"] = 171772,
		},
		[295929] = {
			["npcID"] = 154030,
		},
		[320512] = {
			["npcID"] = 163892,
		},
		[200214] = {
			["npcID"] = 101462,
		},
		[270348] = {
			["npcID"] = 154131,
		},
		[295942] = {
			["npcID"] = 151329,
		},
		[383866] = {
			["npcID"] = 194526,
		},
		[347130] = {
			["npcID"] = 176173,
		},
		[336893] = {
			["npcID"] = 162873,
		},
		[324608] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[350202] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 177095,
		},
		[351226] = {
			["npcID"] = 178071,
		},
		[357369] = {
			["npcID"] = 178294,
		},
		[377844] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[211477] = {
			["source"] = "Legion Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104277,
		},
		[277517] = {
			["npcID"] = 176170,
		},
		[339966] = {
			["npcID"] = 164861,
		},
		[357370] = {
			["npcID"] = 178294,
		},
		[352215] = {
			["npcID"] = 176578,
		},
		[324609] = {
			["npcID"] = 166396,
		},
		[330678] = {
			["npcID"] = 168862,
		},
		[320517] = {
			["npcID"] = 163894,
		},
		[367484] = {
			["source"] = "Claw Fighter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185508,
		},
		[348160] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[334852] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 169458,
		},
		[328707] = {
			["npcID"] = 168992,
		},
		[362494] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[330755] = {
			["npcID"] = 169859,
		},
		[348159] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 164967,
			["encounterID"] = 2384,
		},
		[369675] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[333827] = {
			["npcID"] = 167533,
		},
		[352259] = {
			["npcID"] = 179433,
		},
		[372730] = {
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188244,
		},
		[361469] = {
			["source"] = "Past Self",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185800,
		},
		[320390] = {
			["npcID"] = 168697,
		},
		[200218] = {
			["npcID"] = 101462,
		},
		[331781] = {
			["npcID"] = 170164,
		},
		[347143] = {
			["npcID"] = 176173,
		},
		[395254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Tempestmaker",
			["npcID"] = 198878,
		},
		[357423] = {
			["npcID"] = 177972,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[176165] = {
			["npcID"] = 88224,
		},
		[118297] = {
			["npcID"] = 61029,
		},
		[362507] = {
			["npcID"] = 182690,
		},
		[199210] = {
			["source"] = "Valarjar Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96640,
		},
		[375671] = {
			["npcID"] = 189312,
		},
		[338962] = {
			["npcID"] = 166499,
		},
		[259597] = {
			["npcID"] = 158110,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[324483] = {
			["npcID"] = 177211,
		},
		[387067] = {
			["npcID"] = 193214,
		},
		[336763] = {
			["npcID"] = 169780,
		},
		[372735] = {
			["source"] = "Flashfrost Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187969,
		},
		[377854] = {
			["npcID"] = 190761,
		},
		[296978] = {
			["npcID"] = 153003,
		},
		[363533] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[360451] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184580,
		},
		[302098] = {
			["npcID"] = 150190,
		},
		[374797] = {
			["source"] = "Frenzied Grovetalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187507,
		},
		[390169] = {
			["npcID"] = 187218,
		},
		[301075] = {
			["npcID"] = 165167,
		},
		[363524] = {
			["npcID"] = 181572,
		},
		[329753] = {
			["npcID"] = 156134,
		},
		[365572] = {
			["npcID"] = 184733,
		},
		[344956] = {
			["npcID"] = 162829,
		},
		[338955] = {
			["npcID"] = 163660,
		},
		[385024] = {
			["npcID"] = 188027,
		},
		[48280] = {
			["npcID"] = 153897,
		},
		[357396] = {
			["npcID"] = 180070,
		},
		[384014] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[297018] = {
			["npcID"] = 152995,
		},
		[320529] = {
			["npcID"] = 168886,
		},
		[355352] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[392192] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Blazing Fiend",
			["npcID"] = 190688,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[319506] = {
			["npcID"] = 164232,
		},
		[336910] = {
			["npcID"] = 162872,
		},
		[333839] = {
			["npcID"] = 167534,
		},
		[376851] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[396304] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197135,
		},
		[336911] = {
			["npcID"] = 178820,
		},
		[358410] = {
			["npcID"] = 178151,
		},
		[392194] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[393259] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Inferno",
			["npcID"] = 189043,
		},
		[163379] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80875,
		},
		[353312] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[343055] = {
			["npcID"] = 161355,
		},
		[385029] = {
			["source"] = "Fleshripper Vulture",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186246,
		},
		[6358] = {
			["npcID"] = 1863,
		},
		[29583] = {
			["npcID"] = 114625,
		},
		[343056] = {
			["npcID"] = 172025,
		},
		[334708] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 171557,
		},
		[369674] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[284703] = {
			["npcID"] = 144572,
		},
		[343057] = {
			["npcID"] = 161355,
		},
		[352271] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[357390] = {
			["npcID"] = 178055,
		},
		[191524] = {
			["npcID"] = 96657,
		},
		[347153] = {
			["npcID"] = 171849,
		},
		[193069] = {
			["npcID"] = 96587,
		},
		[373618] = {
			["npcID"] = 190174,
		},
		[333845] = {
			["npcID"] = 167534,
		},
		[227365] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
		},
		[323608] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[252438] = {
			["npcID"] = 126493,
		},
		[366606] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[343060] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[347000] = {
			["npcID"] = 172639,
		},
		[321406] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 169498,
		},
		[156718] = {
			["source"] = "Monstrous Corpse Spider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76104,
		},
		[392272] = {
			["npcID"] = 191665,
		},
		[292942] = {
			["npcID"] = 177331,
		},
		[396314] = {
			["source"] = "Filth Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197122,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[397338] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Tectonic Crusher",
			["npcID"] = 190588,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[385036] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[356204] = {
			["npcID"] = 177372,
		},
		[321564] = {
			["npcID"] = 165829,
		},
		[391198] = {
			["source"] = "Tserasor the Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190598,
		},
		[339992] = {
			["npcID"] = 173609,
		},
		[38556] = {
			["npcID"] = 45015,
		},
		[321565] = {
			["npcID"] = 165829,
		},
		[355349] = {
			["npcID"] = 177646,
		},
		[340011] = {
			["npcID"] = 173613,
		},
		[324657] = {
			["npcID"] = 166551,
		},
		[357418] = {
			["npcID"] = 178443,
		},
		[346157] = {
			["npcID"] = 180252,
		},
		[343086] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[291878] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[374823] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[373614] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[334926] = {
			["npcID"] = 168878,
		},
		[173112] = {
			["npcID"] = 83697,
		},
		[292903] = {
			["npcID"] = 150958,
		},
		[330782] = {
			["npcID"] = 174386,
		},
		[368661] = {
			["npcID"] = 179386,
		},
		[334899] = {
			["npcID"] = 174802,
		},
		[373803] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Infused Whelp",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189893,
		},
		[347163] = {
			["npcID"] = 170157,
		},
		[360472] = {
			["npcID"] = 178963,
		},
		[353328] = {
			["npcID"] = 178964,
		},
		[156722] = {
			["source"] = "Shadowmoon Exhumer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77700,
		},
		[330784] = {
			["npcID"] = 160495,
		},
		[371565] = {
			["npcID"] = 191244,
		},
		[357402] = {
			["npcID"] = 180070,
		},
		[387091] = {
			["npcID"] = 187239,
		},
		[298025] = {
			["npcID"] = 173966,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194367,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[391187] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[330786] = {
			["npcID"] = 169861,
		},
		[396327] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacias",
			["npcID"] = 199028,
		},
		[38557] = {
			["npcID"] = 23589,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["encounterID"] = 1679,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75452,
		},
		[343072] = {
			["npcID"] = 172025,
		},
		[385046] = {
			["source"] = "Skulking Gutstabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186242,
		},
		[328740] = {
			["npcID"] = 168992,
		},
		[382002] = {
			["source"] = "Apex Blazewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193291,
		},
		[315454] = {
			["npcID"] = 157212,
		},
		[227363] = {
			["encounterName"] = "Attumen the Huntsman",
			["npcID"] = 114264,
		},
		[365596] = {
			["npcID"] = 180917,
		},
		[292910] = {
			["npcID"] = 175834,
		},
		[375834] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[352112] = {
			["npcID"] = 178372,
		},
		[386072] = {
			["source"] = "Professor Intinosa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195354,
		},
		[333861] = {
			["npcID"] = 167533,
		},
		[338803] = {
			["npcID"] = 173202,
		},
		[356384] = {
			["npcID"] = 177385,
		},
		[321399] = {
			["npcID"] = 173414,
		},
		[355389] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176703,
		},
		[364396] = {
			["npcID"] = 184272,
		},
		[337982] = {
			["npcID"] = 162872,
		},
		[394264] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hyenamaster Durgun",
			["npcID"] = 186515,
		},
		[343105] = {
			["npcID"] = 170208,
		},
		[357229] = {
			["npcID"] = 180348,
		},
		[356386] = {
			["npcID"] = 177385,
		},
		[295985] = {
			["npcID"] = 159755,
		},
		[325700] = {
			["npcID"] = 165529,
		},
		[359458] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176973,
		},
		[167385] = {
			["npcID"] = 174566,
		},
		[330822] = {
			["npcID"] = 169859,
		},
		[329770] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[359459] = {
			["npcID"] = 184060,
		},
		[352293] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[387127] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "Primalist Thunderbeast",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[183345] = {
			["npcID"] = 153011,
		},
		[331634] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166970,
		},
		[357218] = {
			["npcID"] = 176957,
		},
		[386078] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Echo of Loss",
			["npcID"] = 190259,
		},
		[209477] = {
			["source"] = "Mana Wyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105703,
		},
		[396316] = {
			["source"] = "Nokhud Huntmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185353,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[375871] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[199726] = {
			["source"] = "King Ranulf",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97083,
		},
		[396317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loamas",
			["npcID"] = 199030,
		},
		[397341] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[352348] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[329774] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[343083] = {
			["npcID"] = 166156,
		},
		[390256] = {
			["source"] = "Nokhud Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192340,
		},
		[295991] = {
			["npcID"] = 151331,
		},
		[336971] = {
			["npcID"] = 168118,
		},
		[344941] = {
			["npcID"] = 162845,
		},
		[184371] = {
			["npcID"] = 185125,
		},
		[300087] = {
			["npcID"] = 150251,
		},
		[296019] = {
			["npcID"] = 151128,
		},
		[387135] = {
			["source"] = "Primalist Arcblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194898,
		},
		[362566] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[361513] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[297017] = {
			["npcID"] = 152995,
		},
		[367656] = {
			["npcID"] = 185037,
		},
		[291928] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[302166] = {
			["npcID"] = 150190,
		},
		[366633] = {
			["npcID"] = 185155,
		},
		[326707] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 167406,
		},
		[393251] = {
			["source"] = "Frenzied Grovetalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187507,
		},
		[372562] = {
			["npcID"] = 186516,
		},
		[395299] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellforged Destroyer",
			["npcID"] = 194402,
		},
		[351307] = {
			["npcID"] = 176572,
		},
		[192563] = {
			["source"] = "Valarjar Purifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97197,
		},
		[328756] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[297020] = {
			["npcID"] = 153011,
		},
		[322614] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[385063] = {
			["source"] = "Primalist Cinderweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190207,
		},
		[336947] = {
			["npcID"] = 162853,
		},
		[292926] = {
			["npcID"] = 151127,
		},
		[368712] = {
			["npcID"] = 184058,
		},
		[340019] = {
			["npcID"] = 173604,
		},
		[176696] = {
			["npcID"] = 85752,
		},
		[333929] = {
			["npcID"] = 177443,
		},
		[364643] = {
			["npcID"] = 181057,
		},
		[323640] = {
			["npcID"] = 165473,
		},
		[338003] = {
			["npcID"] = 165414,
		},
		[329783] = {
			["npcID"] = 156226,
		},
		[326712] = {
			["npcID"] = 167956,
		},
		[193092] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[377900] = {
			["npcID"] = 191833,
		},
		[374859] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[387145] = {
			["source"] = "Stormcaller Arynga",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195265,
		},
		[319547] = {
			["npcID"] = 165706,
		},
		[320571] = {
			["npcID"] = 163128,
		},
		[376934] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[326745] = {
			["npcID"] = 170016,
		},
		[385068] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["npcID"] = 197145,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[324667] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[348008] = {
			["npcID"] = 176394,
		},
		[351285] = {
			["npcID"] = 178006,
		},
		[356404] = {
			["npcID"] = 180091,
		},
		[390245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Embertooth Spearhunter",
			["npcID"] = 188725,
		},
		[365649] = {
			["npcID"] = 184734,
		},
		[355381] = {
			["npcID"] = 177646,
		},
		[176187] = {
			["npcID"] = 84876,
		},
		[357429] = {
			["npcID"] = 178824,
		},
		[341854] = {
			["npcID"] = 173832,
		},
		[9613] = {
			["npcID"] = 59166,
		},
		[340026] = {
			["npcID"] = 171184,
		},
		[325725] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[325694] = {
			["npcID"] = 160359,
		},
		[341864] = {
			["npcID"] = 173189,
		},
		[356407] = {
			["npcID"] = 180091,
		},
		[320576] = {
			["npcID"] = 168886,
		},
		[358455] = {
			["npcID"] = 177972,
		},
		[392239] = {
			["npcID"] = 187960,
		},
		[397358] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[300102] = {
			["npcID"] = 152009,
		},
		[325696] = {
			["npcID"] = 168960,
		},
		[349030] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[338011] = {
			["npcID"] = 166318,
		},
		[336958] = {
			["npcID"] = 162853,
		},
		[387122] = {
			["npcID"] = 193214,
		},
		[339006] = {
			["npcID"] = 173238,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[390194] = {
			["source"] = "Uranto the Swift",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191103,
		},
		[332937] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 170710,
		},
		[391003] = {
			["source"] = "High Shaman Rotknuckle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197356,
		},
		[353124] = {
			["npcID"] = 178957,
		},
		[393295] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[374839] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[359483] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[341084] = {
			["npcID"] = 169889,
		},
		[354147] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
		},
		[387125] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[204344] = {
			["npcID"] = 189610,
		},
		[184381] = {
			["npcID"] = 159190,
		},
		[365627] = {
			["npcID"] = 184954,
		},
		[325701] = {
			["npcID"] = 165529,
		},
		[339010] = {
			["npcID"] = 173238,
		},
		[356414] = {
			["npcID"] = 179892,
		},
		[328773] = {
			["npcID"] = 159460,
		},
		[284752] = {
			["npcID"] = 144572,
		},
		[385883] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[319560] = {
			["npcID"] = 158054,
		},
		[357439] = {
			["npcID"] = 178653,
		},
		[396367] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197142,
		},
		[339012] = {
			["npcID"] = 183512,
		},
		[331846] = {
			["npcID"] = 167964,
		},
		[359265] = {
			["npcID"] = 185415,
		},
		[369750] = {
			["npcID"] = 187602,
		},
		[339013] = {
			["npcID"] = 183512,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[323682] = {
			["npcID"] = 163501,
		},
		[385108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Restless Podling",
			["npcID"] = 187317,
		},
		[371824] = {
			["source"] = "Arcane Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190776,
		},
		[369754] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[386107] = {
			["npcID"] = 183995,
		},
		[358466] = {
			["npcID"] = 178898,
		},
		[375870] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[229429] = {
			["npcID"] = 115388,
		},
		[168398] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 84215,
		},
		[336996] = {
			["npcID"] = 162744,
		},
		[396346] = {
			["npcID"] = 190932,
		},
		[372800] = {
			["npcID"] = 187125,
		},
		[260654] = {
			["source"] = "Karkinus the Capsizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200907,
		},
		[358468] = {
			["npcID"] = 177979,
		},
		[343112] = {
			["npcID"] = 166156,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[164819] = {
			["npcID"] = 81726,
		},
		[396348] = {
			["source"] = "Gutchewer Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197134,
		},
		[339046] = {
			["npcID"] = 179755,
		},
		[328781] = {
			["npcID"] = 159460,
		},
		[391230] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[396349] = {
			["source"] = "Fleshripper Vulture",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197133,
		},
		[340070] = {
			["npcID"] = 166503,
		},
		[212423] = {
			["npcID"] = 99541,
		},
		[346186] = {
			["npcID"] = 167323,
		},
		[396350] = {
			["source"] = "Fleshripper Vulture",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197133,
		},
		[157769] = {
			["encounterName"] = "Imperator Mar'gok",
			["encounterID"] = 1705,
			["npcID"] = 78121,
		},
		[377923] = {
			["source"] = "Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186570,
		},
		[362333] = {
			["npcID"] = 182374,
		},
		[396351] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[347992] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[392013] = {
			["npcID"] = 187036,
		},
		[362568] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[392257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plains Bull",
			["npcID"] = 195261,
		},
		[295001] = {
			["npcID"] = 151128,
		},
		[390210] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197130,
		},
		[362569] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[298073] = {
			["npcID"] = 156241,
		},
		[364617] = {
			["npcID"] = 181057,
		},
		[320596] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 162691,
			["encounterID"] = 2387,
		},
		[366689] = {
			["npcID"] = 185268,
		},
		[334929] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[372808] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[377927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 192690,
		},
		[392284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Proto-Drake",
			["npcID"] = 193145,
		},
		[396355] = {
			["npcID"] = 186787,
		},
		[389213] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[164426] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["encounterID"] = 1749,
			["npcID"] = 81305,
		},
		[333931] = {
			["npcID"] = 177422,
		},
		[384095] = {
			["source"] = "Ohuna Companion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194254,
		},
		[356430] = {
			["npcID"] = 178958,
		},
		[328789] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 169062,
		},
		[212031] = {
			["source"] = "Bound Energy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105705,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[356431] = {
			["npcID"] = 180113,
		},
		[320600] = {
			["npcID"] = 162965,
		},
		[370764] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187160,
		},
		[388941] = {
			["npcID"] = 186962,
		},
		[397382] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Frostforged Zealot",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199547,
		},
		[365646] = {
			["npcID"] = 184651,
		},
		[338005] = {
			["npcID"] = 165415,
		},
		[320657] = {
			["npcID"] = 171562,
		},
		[372839] = {
			["npcID"] = 191570,
		},
		[358526] = {
			["npcID"] = 179342,
		},
		[370766] = {
			["source"] = "Crystal Thrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187139,
		},
		[396360] = {
			["npcID"] = 186787,
		},
		[300155] = {
			["npcID"] = 164929,
		},
		[182856] = {
			["npcID"] = 161785,
		},
		[396388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacias",
			["npcID"] = 199028,
		},
		[293986] = {
			["npcID"] = 151476,
		},
		[342878] = {
			["npcID"] = 171189,
		},
		[300129] = {
			["npcID"] = 152009,
		},
		[329569] = {
			["npcID"] = 158160,
		},
		[227777] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114260,
		},
		[153680] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["encounterID"] = 1679,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75452,
		},
		[365676] = {
			["npcID"] = 184734,
		},
		[351067] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[347223] = {
			["npcID"] = 161846,
		},
		[340057] = {
			["npcID"] = 174336,
		},
		[361556] = {
			["npcID"] = 181687,
		},
		[374865] = {
			["npcID"] = 194544,
		},
		[347224] = {
			["npcID"] = 161846,
		},
		[364628] = {
			["npcID"] = 183596,
		},
		[343155] = {
			["npcID"] = 173444,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[319628] = {
			["npcID"] = 156564,
		},
		[300159] = {
			["npcID"] = 150276,
		},
		[390223] = {
			["npcID"] = 187089,
		},
		[341127] = {
			["npcID"] = 158259,
		},
		[382802] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194241,
		},
		[352345] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 176178,
			["encounterID"] = 2419,
		},
		[328799] = {
			["npcID"] = 177420,
		},
		[366678] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[363607] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181244,
		},
		[393296] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["npcID"] = 198308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[320610] = {
			["npcID"] = 165909,
		},
		[346204] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[355418] = {
			["npcID"] = 178527,
		},
		[352347] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[369751] = {
			["npcID"] = 195032,
		},
		[346205] = {
			["npcID"] = 173717,
		},
		[396392] = {
			["source"] = "Dueling Student",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199377,
		},
		[393298] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Colossus",
			["npcID"] = 188673,
		},
		[388944] = {
			["npcID"] = 186962,
		},
		[173135] = {
			["npcID"] = 83578,
		},
		[396370] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[397394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Thunderfist",
			["npcID"] = 193373,
		},
		[275568] = {
			["npcID"] = 168442,
		},
		[383062] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[375919] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ashen Groveripper",
			["npcID"] = 187872,
		},
		[376943] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[320614] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 164702,
			["encounterID"] = 2387,
		},
		[346208] = {
			["npcID"] = 167323,
		},
		[344922] = {
			["npcID"] = 168148,
		},
		[345207] = {
			["npcID"] = 170031,
		},
		[275570] = {
			["npcID"] = 166027,
		},
		[353398] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 179010,
			["encounterID"] = 2431,
		},
		[343138] = {
			["npcID"] = 173575,
		},
		[393302] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[365661] = {
			["npcID"] = 184651,
		},
		[366685] = {
			["npcID"] = 185271,
		},
		[392279] = {
			["source"] = "Wild Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194089,
		},
		[372828] = {
			["npcID"] = 186679,
		},
		[365686] = {
			["npcID"] = 184533,
		},
		[358496] = {
			["npcID"] = 179805,
		},
		[392280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kaurdyth",
			["npcID"] = 197835,
		},
		[323689] = {
			["npcID"] = 158642,
		},
		[390233] = {
			["source"] = "Rendvith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196971,
		},
		[360569] = {
			["npcID"] = 179007,
		},
		[392281] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalus",
			["npcID"] = 193645,
		},
		[78907] = {
			["npcID"] = 183994,
		},
		[75068] = {
			["npcID"] = 42043,
		},
		[393037] = {
			["npcID"] = 186672,
		},
		[342873] = {
			["npcID"] = 177589,
		},
		[393306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthwarden",
			["npcID"] = 193709,
		},
		[377950] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[329834] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 169267,
		},
		[395377] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thondrozus",
			["npcID"] = 192769,
		},
		[393307] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Flamecaller",
			["npcID"] = 193558,
		},
		[361300] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[354405] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[355429] = {
			["npcID"] = 178165,
		},
		[393308] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Flamecaller",
			["npcID"] = 193558,
		},
		[316527] = {
			["npcID"] = 183512,
		},
		[185425] = {
			["source"] = "Steeljaw Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96677,
		},
		[392285] = {
			["source"] = "Proto Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195177,
		},
		[393309] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["npcID"] = 198311,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[372561] = {
			["source"] = "Qalashi Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189227,
		},
		[333932] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 169813,
		},
		[357512] = {
			["npcID"] = 180495,
		},
		[79932] = {
			["npcID"] = 155282,
		},
		[357479] = {
			["npcID"] = 178653,
		},
		[383073] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[371812] = {
			["source"] = "Arcane Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190776,
		},
		[329563] = {
			["npcID"] = 152508,
		},
		[258634] = {
			["npcID"] = 154129,
		},
		[270481] = {
			["npcID"] = 135002,
		},
		[387189] = {
			["source"] = "Rendvith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196971,
		},
		[364647] = {
			["npcID"] = 181057,
		},
		[394336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mordigan Ironjaw",
			["npcID"] = 187353,
		},
		[342125] = {
			["npcID"] = 167538,
		},
		[343149] = {
			["npcID"] = 173575,
		},
		[300171] = {
			["npcID"] = 150276,
		},
		[394337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morchok",
			["npcID"] = 187306,
		},
		[362601] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[393314] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[387191] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[321652] = {
			["npcID"] = 170228,
		},
		[396386] = {
			["npcID"] = 188226,
		},
		[329862] = {
			["npcID"] = 153885,
		},
		[329561] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165778,
		},
		[391268] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Earthwrought Smasher",
			["npcID"] = 197595,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[310392] = {
			["npcID"] = 159190,
		},
		[365708] = {
			["npcID"] = 183432,
		},
		[283775] = {
			["npcID"] = 150744,
		},
		[39207] = {
			["npcID"] = 45618,
		},
		[355438] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[364652] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[361581] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182822,
			["encounterID"] = 2544,
		},
		[389242] = {
			["source"] = "Stormed Blackpaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193827,
		},
		[347249] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[293729] = {
			["npcID"] = 144295,
		},
		[377962] = {
			["npcID"] = 190723,
		},
		[366701] = {
			["npcID"] = 185268,
		},
		[294015] = {
			["npcID"] = 151476,
		},
		[358225] = {
			["npcID"] = 178732,
		},
		[365678] = {
			["npcID"] = 184734,
		},
		[374892] = {
			["npcID"] = 187939,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[299153] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[394344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Death's Shadow",
			["npcID"] = 190985,
		},
		[394362] = {
			["npcID"] = 193232,
		},
		[334967] = {
			["npcID"] = 171343,
		},
		[386173] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[227917] = {
			["npcID"] = 114526,
		},
		[383084] = {
			["npcID"] = 190066,
		},
		[359538] = {
			["npcID"] = 184060,
		},
		[360562] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[398150] = {
			["source"] = "Shadowmoon Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76446,
		},
		[342135] = {
			["npcID"] = 167532,
		},
		[343159] = {
			["npcID"] = 173444,
		},
		[393323] = {
			["source"] = "Iskaaran Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198298,
		},
		[373872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Decay",
			["npcID"] = 186227,
		},
		[198595] = {
			["source"] = "Valarjar Thundercaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95842,
		},
		[330875] = {
			["npcID"] = 169893,
		},
		[392007] = {
			["npcID"] = 183343,
		},
		[291973] = {
			["encounterName"] = "K.U.-J.0.",
			["encounterID"] = 2258,
			["npcID"] = 144246,
		},
		[173148] = {
			["npcID"] = 81279,
		},
		[334971] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165067,
		},
		[161887] = {
			["source"] = "Driftwatcher Rylak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72849,
		},
		[390983] = {
			["source"] = "Custodial Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192694,
		},
		[374898] = {
			["npcID"] = 191496,
		},
		[355473] = {
			["npcID"] = 179821,
		},
		[372851] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[115006] = {
			["npcID"] = 58943,
		},
		[342139] = {
			["npcID"] = 167536,
		},
		[351353] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177891,
			["encounterID"] = 2435,
		},
		[393327] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keen Skywatcher",
			["npcID"] = 190778,
		},
		[377971] = {
			["npcID"] = 194342,
		},
		[320655] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 162691,
			["encounterID"] = 2387,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[366412] = {
			["npcID"] = 183746,
		},
		[164448] = {
			["npcID"] = 80490,
		},
		[387186] = {
			["npcID"] = 187127,
		},
		[355450] = {
			["npcID"] = 178528,
		},
		[352379] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[392318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ohn'ir Initiate",
			["npcID"] = 193985,
		},
		[362617] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[388211] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shale Giant",
			["npcID"] = 188122,
		},
		[394367] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Morchok",
			["npcID"] = 187306,
		},
		[320644] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[388225] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacial Giantess",
			["npcID"] = 193075,
		},
		[359547] = {
			["npcID"] = 183931,
		},
		[385141] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[394355] = {
			["source"] = "Frigidpelt Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193063,
		},
		[321669] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 165108,
			["encounterID"] = 2392,
		},
		[382791] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[131178] = {
			["npcID"] = 66768,
		},
		[209495] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[358525] = {
			["npcID"] = 178949,
		},
		[330884] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 168244,
		},
		[357197] = {
			["npcID"] = 180336,
		},
		[341133] = {
			["npcID"] = 165470,
		},
		[366716] = {
			["npcID"] = 185274,
		},
		[356169] = {
			["npcID"] = 177567,
		},
		[331909] = {
			["npcID"] = 165473,
		},
		[369788] = {
			["npcID"] = 188296,
		},
		[387192] = {
			["npcID"] = 187127,
		},
		[355456] = {
			["npcID"] = 178958,
		},
		[323720] = {
			["npcID"] = 181203,
		},
		[377991] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[346243] = {
			["npcID"] = 168233,
		},
		[196194] = {
			["source"] = "Steeljaw Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96677,
		},
		[397431] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 192934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[360589] = {
			["npcID"] = 182114,
		},
		[350339] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 177407,
		},
		[300188] = {
			["npcID"] = 150253,
		},
		[360577] = {
			["npcID"] = 179007,
		},
		[227925] = {
			["npcID"] = 114526,
		},
		[167012] = {
			["npcID"] = 155945,
		},
		[326794] = {
			["npcID"] = 167876,
		},
		[372863] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189232,
		},
		[300177] = {
			["npcID"] = 150276,
		},
		[330573] = {
			["npcID"] = 155251,
		},
		[365385] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 184622,
			["encounterID"] = 2537,
		},
		[360591] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182045,
		},
		[357508] = {
			["npcID"] = 180495,
		},
		[350342] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 177095,
		},
		[347283] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[389245] = {
			["npcID"] = 190111,
		},
		[172138] = {
			["npcID"] = 86185,
		},
		[345236] = {
			["npcID"] = 170157,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[198750] = {
			["encounterName"] = "Odyn",
			["source"] = "Stormforged Obliterator",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102019,
		},
		[162407] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77803,
		},
		[379023] = {
			["npcID"] = 190731,
		},
		[334988] = {
			["npcID"] = 171596,
		},
		[389247] = {
			["npcID"] = 187187,
		},
		[341131] = {
			["npcID"] = 174194,
		},
		[389948] = {
			["source"] = "Overseer Zambul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191145,
		},
		[355464] = {
			["npcID"] = 178165,
		},
		[161896] = {
			["source"] = "Driftwatcher Rylak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72849,
		},
		[353417] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[346251] = {
			["npcID"] = 178490,
		},
		[396415] = {
			["npcID"] = 187211,
		},
		[365715] = {
			["npcID"] = 184530,
		},
		[353418] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[369811] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[325790] = {
			["npcID"] = 172909,
		},
		[228280] = {
			["npcID"] = 114629,
		},
		[303952] = {
			["npcID"] = 155910,
		},
		[384132] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[347291] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[391999] = {
			["npcID"] = 185445,
		},
		[319650] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[385157] = {
			["source"] = "Greenbelt Riverbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192834,
		},
		[357516] = {
			["npcID"] = 177137,
		},
		[389951] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[384134] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[393348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Broodwarden",
			["npcID"] = 198263,
		},
		[373897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayed Elder",
			["npcID"] = 189531,
		},
		[196543] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[375945] = {
			["npcID"] = 187975,
		},
		[299164] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153756,
		},
		[345233] = {
			["npcID"] = 168693,
		},
		[325782] = {
			["npcID"] = 163991,
		},
		[322711] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[360590] = {
			["npcID"] = 182114,
		},
		[172649] = {
			["npcID"] = 81432,
		},
		[391998] = {
			["npcID"] = 192274,
		},
		[228279] = {
			["npcID"] = 114632,
		},
		[227420] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114266,
		},
		[396432] = {
			["npcID"] = 189798,
		},
		[300207] = {
			["npcID"] = 150253,
		},
		[396423] = {
			["npcID"] = 187211,
		},
		[331927] = {
			["npcID"] = 167962,
		},
		[328856] = {
			["npcID"] = 165561,
		},
		[385172] = {
			["npcID"] = 191645,
		},
		[350365] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 177095,
		},
		[323748] = {
			["npcID"] = 158642,
		},
		[328857] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[365723] = {
			["npcID"] = 183438,
		},
		[375950] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[319644] = {
			["npcID"] = 161529,
		},
		[345238] = {
			["npcID"] = 165124,
		},
		[340130] = {
			["npcID"] = 165663,
		},
		[228278] = {
			["npcID"] = 114633,
		},
		[141427] = {
			["npcID"] = 183257,
		},
		[345239] = {
			["npcID"] = 165124,
		},
		[358548] = {
			["npcID"] = 180664,
		},
		[355477] = {
			["npcID"] = 179842,
		},
		[166341] = {
			["npcID"] = 82579,
		},
		[341145] = {
			["npcID"] = 174090,
		},
		[257629] = {
			["source"] = "Unfinished Stone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201586,
		},
		[198077] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[389273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[341146] = {
			["npcID"] = 174194,
		},
		[284840] = {
			["npcID"] = 144572,
		},
		[355479] = {
			["npcID"] = 179821,
		},
		[348313] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[365717] = {
			["npcID"] = 183432,
		},
		[340807] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[396430] = {
			["source"] = "Arcane Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190779,
		},
		[176066] = {
			["npcID"] = 88178,
		},
		[369813] = {
			["npcID"] = 193288,
		},
		[342854] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[392336] = {
			["npcID"] = 181775,
		},
		[331935] = {
			["npcID"] = 170385,
		},
		[263344] = {
			["npcID"] = 157094,
		},
		[297128] = {
			["npcID"] = 144298,
		},
		[392337] = {
			["npcID"] = 186853,
		},
		[393361] = {
			["source"] = "Nightrot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188707,
		},
		[390290] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[338079] = {
			["npcID"] = 164737,
		},
		[394392] = {
			["npcID"] = 190259,
		},
		[389267] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clearwater Snapper",
			["npcID"] = 192678,
		},
		[382101] = {
			["npcID"] = 190259,
		},
		[317605] = {
			["npcID"] = 162744,
		},
		[210537] = {
			["npcID"] = 159106,
		},
		[389268] = {
			["npcID"] = 187135,
		},
		[382102] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[191595] = {
			["npcID"] = 96587,
		},
		[384827] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[389269] = {
			["npcID"] = 187061,
		},
		[369818] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[353443] = {
			["npcID"] = 179080,
		},
		[367771] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 185607,
		},
		[389270] = {
			["npcID"] = 187061,
		},
		[328869] = {
			["npcID"] = 157122,
		},
		[379033] = {
			["npcID"] = 184656,
		},
		[384161] = {
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189464,
		},
		[389271] = {
			["source"] = "Sunscale Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193133,
		},
		[357535] = {
			["npcID"] = 177979,
		},
		[338084] = {
			["npcID"] = 172982,
		},
		[335013] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[336037] = {
			["npcID"] = 181186,
		},
		[324776] = {
			["npcID"] = 166275,
		},
		[342189] = {
			["npcID"] = 174175,
		},
		[294064] = {
			["npcID"] = 151658,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 95886,
			["encounterID"] = 1816,
		},
		[378012] = {
			["npcID"] = 186823,
		},
		[397109] = {
			["npcID"] = 187843,
		},
		[298160] = {
			["npcID"] = 153451,
		},
		[389274] = {
			["npcID"] = 186679,
		},
		[369823] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[325802] = {
			["npcID"] = 166936,
		},
		[341163] = {
			["npcID"] = 171396,
		},
		[344230] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[363686] = {
			["npcID"] = 179043,
		},
		[358563] = {
			["npcID"] = 175616,
		},
		[359587] = {
			["npcID"] = 181352,
		},
		[385181] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[61353] = {
			["npcID"] = 96779,
		},
		[207979] = {
			["source"] = "Jazshariu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[328880] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[388918] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[361644] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[357183] = {
			["npcID"] = 177938,
		},
		[335019] = {
			["npcID"] = 156434,
		},
		[397468] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Flamesworn Herald",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199549,
		},
		[203373] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Observant Inquisitor",
			["npcID"] = 107449,
		},
		[207980] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[371875] = {
			["source"] = "Qalashi Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189266,
		},
		[372539] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[369828] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[256099] = {
			["npcID"] = 166032,
		},
		[322736] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[389280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shiverweb Crusher",
			["npcID"] = 185814,
		},
		[15043] = {
			["source"] = "Yu'lon Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 57316,
		},
		[329903] = {
			["npcID"] = 157099,
		},
		[400542] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kalecgos",
			["npcID"] = 193460,
		},
		[394037] = {
			["npcID"] = 187036,
		},
		[390305] = {
			["source"] = "Rendvith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196971,
		},
		[329904] = {
			["npcID"] = 157118,
		},
		[372538] = {
			["source"] = "Lava Flare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189470,
		},
		[376997] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[396084] = {
			["source"] = "Force of the Springs",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197008,
		},
		[329905] = {
			["npcID"] = 157122,
		},
		[334002] = {
			["npcID"] = 172590,
		},
		[336048] = {
			["npcID"] = 167704,
		},
		[308409] = {
			["npcID"] = 154330,
		},
		[346286] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[339120] = {
			["npcID"] = 173240,
		},
		[319669] = {
			["encounterName"] = "Kul'tharok",
			["encounterID"] = 2364,
			["npcID"] = 162309,
		},
		[383143] = {
			["source"] = "High Shaman Rotknuckle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197356,
		},
		[395427] = {
			["source"] = "Overseer Lahar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189235,
		},
		[326836] = {
			["npcID"] = 162039,
		},
		[328885] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 168973,
		},
		[292029] = {
			["npcID"] = 144568,
		},
		[358573] = {
			["npcID"] = 179423,
		},
		[326837] = {
			["npcID"] = 162040,
		},
		[194675] = {
			["npcID"] = 98963,
		},
		[357550] = {
			["npcID"] = 176940,
		},
		[329909] = {
			["npcID"] = 157017,
		},
		[322743] = {
			["npcID"] = 155824,
		},
		[320696] = {
			["npcID"] = 163121,
		},
		[357551] = {
			["npcID"] = 180499,
		},
		[350385] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 177094,
		},
		[396454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Insatiable Hornswog",
			["npcID"] = 185715,
		},
		[369465] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["source"] = "Draconic Image",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190187,
		},
		[322745] = {
			["npcID"] = 170853,
		},
		[335030] = {
			["npcID"] = 156779,
		},
		[377004] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[330562] = {
			["npcID"] = 164506,
		},
		[327497] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166970,
		},
		[341176] = {
			["npcID"] = 166317,
		},
		[393385] = {
			["source"] = "Chalsec of the Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193847,
		},
		[365744] = {
			["npcID"] = 184651,
		},
		[387243] = {
			["npcID"] = 195095,
		},
		[302272] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[343224] = {
			["npcID"] = 175792,
		},
		[365745] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 184792,
			["encounterID"] = 2553,
		},
		[334009] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[351413] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[178298] = {
			["npcID"] = 83763,
		},
		[373936] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wilted Oak",
			["npcID"] = 186229,
		},
		[332708] = {
			["npcID"] = 167532,
		},
		[302274] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150295,
		},
		[198263] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[340160] = {
			["npcID"] = 173655,
		},
		[329916] = {
			["npcID"] = 171173,
		},
		[330940] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 168244,
		},
		[358585] = {
			["npcID"] = 176669,
		},
		[386223] = {
			["source"] = "Primal Stormshield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194896,
		},
		[329917] = {
			["npcID"] = 168578,
		},
		[392366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Juggernaut",
			["npcID"] = 197793,
		},
		[303300] = {
			["source"] = "Primalist Infuser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186112,
		},
		[373939] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Rotburst Totem",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190381,
		},
		[375605] = {
			["npcID"] = 185272,
		},
		[326847] = {
			["npcID"] = 167876,
		},
		[302279] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150295,
		},
		[322756] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 165137,
			["encounterID"] = 2387,
		},
		[348350] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[375988] = {
			["npcID"] = 191051,
		},
		[356537] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 179334,
		},
		[394416] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["npcID"] = 198311,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[354490] = {
			["npcID"] = 179526,
		},
		[392369] = {
			["source"] = "Earth Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190173,
		},
		[396078] = {
			["npcID"] = 193288,
		},
		[373942] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[193659] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[166335] = {
			["npcID"] = 82579,
		},
		[241774] = {
			["npcID"] = 114636,
		},
		[373943] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wilted Oak",
			["npcID"] = 186229,
		},
		[360636] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[326851] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
		},
		[194682] = {
			["npcID"] = 98963,
		},
		[326463] = {
			["npcID"] = 164036,
		},
		[374969] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[332605] = {
			["npcID"] = 170572,
		},
		[336066] = {
			["npcID"] = 179911,
		},
		[322367] = {
			["npcID"] = 165485,
		},
		[321734] = {
			["npcID"] = 156564,
		},
		[391982] = {
			["npcID"] = 189538,
		},
		[377017] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[373947] = {
			["npcID"] = 192949,
		},
		[394423] = {
			["npcID"] = 187598,
		},
		[322759] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[336068] = {
			["npcID"] = 182686,
		},
		[176768] = {
			["npcID"] = 83790,
		},
		[297166] = {
			["npcID"] = 152875,
		},
		[339770] = {
			["npcID"] = 173568,
		},
		[363712] = {
			["npcID"] = 185434,
		},
		[369853] = {
			["source"] = "Burly Rock-Thrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184019,
		},
		[54318] = {
			["npcID"] = 29337,
		},
		[340793] = {
			["npcID"] = 166140,
		},
		[320716] = {
			["npcID"] = 177210,
		},
		[329930] = {
			["npcID"] = 157083,
		},
		[334023] = {
			["npcID"] = 167536,
		},
		[367807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worldbreaker Escapee",
			["npcID"] = 185626,
		},
		[323786] = {
			["npcID"] = 163524,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[329929] = {
			["npcID"] = 157083,
		},
		[388283] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[327882] = {
			["npcID"] = 168153,
		},
		[394426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Flamecaller",
			["npcID"] = 198503,
		},
		[383165] = {
			["source"] = "High Shaman Rotknuckle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197356,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 104293,
			["encounterID"] = 1818,
		},
		[356548] = {
			["npcID"] = 179334,
		},
		[333002] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[199805] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96574,
		},
		[355525] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[360644] = {
			["npcID"] = 181339,
		},
		[382143] = {
			["source"] = "Reclaimer Makko",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191536,
		},
		[365477] = {
			["npcID"] = 182649,
		},
		[328687] = {
			["npcID"] = 166079,
		},
		[327885] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[394429] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarolekk, the Stomper",
			["npcID"] = 197650,
		},
		[358598] = {
			["npcID"] = 178897,
		},
		[322767] = {
			["npcID"] = 164921,
		},
		[163390] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80808,
		},
		[343104] = {
			["npcID"] = 170208,
		},
		[350280] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[330958] = {
			["npcID"] = 177418,
		},
		[327887] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[362316] = {
			["npcID"] = 184425,
		},
		[396073] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Nodding Tiger",
			["npcID"] = 59544,
		},
		[384194] = {
			["source"] = "Primalist Cinderweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190207,
		},
		[323793] = {
			["npcID"] = 170146,
		},
		[330553] = {
			["npcID"] = 178979,
		},
		[350411] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175728,
			["encounterID"] = 2434,
		},
		[373960] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[377029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Scythid Queen",
			["npcID"] = 184853,
		},
		[369865] = {
			["npcID"] = 191611,
		},
		[287970] = {
			["npcID"] = 144564,
		},
		[361676] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[350421] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[341199] = {
			["npcID"] = 173189,
		},
		[358603] = {
			["npcID"] = 181212,
		},
		[294107] = {
			["npcID"] = 150254,
		},
		[393411] = {
			["source"] = "Chalsec of the Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193847,
		},
		[341200] = {
			["npcID"] = 174100,
		},
		[325844] = {
			["npcID"] = 163991,
		},
		[394440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eaglemaster Niraak",
			["npcID"] = 192020,
		},
		[392394] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[394436] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shas'ith",
			["npcID"] = 189822,
		},
		[390952] = {
			["source"] = "Grand Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188009,
		},
		[335059] = {
			["npcID"] = 171696,
		},
		[340788] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[337107] = {
			["npcID"] = 168693,
		},
		[95826] = {
			["npcID"] = 51346,
		},
		[265445] = {
			["npcID"] = 161527,
		},
		[377034] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[156301] = {
			["npcID"] = 80935,
		},
		[193668] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[388296] = {
			["npcID"] = 192626,
		},
		[388302] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[320729] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[329943] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 168156,
		},
		[358611] = {
			["npcID"] = 179760,
		},
		[392395] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[337110] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166969,
		},
		[323804] = {
			["npcID"] = 163524,
		},
		[330968] = {
			["npcID"] = 174842,
		},
		[227966] = {
			["npcID"] = 114544,
		},
		[227965] = {
			["npcID"] = 114544,
		},
		[387277] = {
			["npcID"] = 195917,
		},
		[330969] = {
			["npcID"] = 177437,
		},
		[228991] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114675,
		},
		[396492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Slobberclaw",
			["npcID"] = 195972,
		},
		[317661] = {
			["npcID"] = 163503,
		},
		[330970] = {
			["npcID"] = 177437,
		},
		[393419] = {
			["npcID"] = 189289,
		},
		[341208] = {
			["npcID"] = 166317,
		},
		[350422] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175727,
			["encounterID"] = 2434,
		},
		[31707] = {
			["npcID"] = 78116,
		},
		[209027] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111563,
		},
		[392398] = {
			["source"] = "Primal Thundercloud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197509,
		},
		[305378] = {
			["npcID"] = 176170,
		},
		[355542] = {
			["npcID"] = 177243,
		},
		[319711] = {
			["npcID"] = 166872,
		},
		[322358] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[366379] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[257656] = {
			["source"] = "Unfinished Stone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201586,
		},
		[176268] = {
			["npcID"] = 88224,
		},
		[357591] = {
			["npcID"] = 177984,
		},
		[362710] = {
			["npcID"] = 183229,
		},
		[241788] = {
			["npcID"] = 114632,
		},
		[319713] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[166543] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 82721,
		},
		[172116] = {
			["npcID"] = 86071,
		},
		[388305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacial Giantess",
			["npcID"] = 193075,
		},
		[340189] = {
			["npcID"] = 173655,
		},
		[329808] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[79896] = {
			["npcID"] = 83001,
		},
		[333875] = {
			["npcID"] = 168942,
		},
		[323810] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 166085,
			["encounterID"] = 2363,
		},
		[356302] = {
			["npcID"] = 178671,
		},
		[364666] = {
			["npcID"] = 178563,
		},
		[326827] = {
			["npcID"] = 162040,
		},
		[343058] = {
			["npcID"] = 161355,
		},
		[327474] = {
			["npcID"] = 166170,
		},
		[321764] = {
			["npcID"] = 164861,
		},
		[330978] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166971,
		},
		[332002] = {
			["npcID"] = 170417,
		},
		[157331] = {
			["npcID"] = 77942,
		},
		[391380] = {
			["npcID"] = 195352,
		},
		[164358] = {
			["npcID"] = 87222,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[323683] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[334051] = {
			["npcID"] = 168942,
		},
		[388310] = {
			["source"] = "Malfunctioning Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198343,
		},
		[361630] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[338147] = {
			["npcID"] = 169885,
		},
		[391382] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 197671,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[392406] = {
			["source"] = "Storm Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197982,
		},
		[393430] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[358623] = {
			["npcID"] = 179552,
		},
		[334053] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[367522] = {
			["npcID"] = 181059,
		},
		[322780] = {
			["npcID"] = 156560,
		},
		[386849] = {
			["npcID"] = 195846,
		},
		[358624] = {
			["npcID"] = 178997,
		},
		[396503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loamas",
			["npcID"] = 199030,
		},
		[393432] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[390361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shela the Windbinder",
			["npcID"] = 194884,
		},
		[391385] = {
			["npcID"] = 182815,
		},
		[351459] = {
			["npcID"] = 176572,
		},
		[209033] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111563,
		},
		[291865] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[363525] = {
			["npcID"] = 183652,
		},
		[374563] = {
			["source"] = "Dazzling Dragonfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190362,
		},
		[364769] = {
			["npcID"] = 181360,
		},
		[385824] = {
			["source"] = "Rageclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187192,
		},
		[393434] = {
			["source"] = "Sundered Mercenary",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193791,
		},
		[388316] = {
			["source"] = "Oppressive Artificer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184444,
		},
		[57984] = {
			["npcID"] = 95061,
		},
		[51963] = {
			["npcID"] = 27829,
		},
		[366818] = {
			["npcID"] = 185275,
		},
		[175763] = {
			["npcID"] = 85241,
		},
		[323821] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 162099,
			["encounterID"] = 2363,
		},
		[328940] = {
			["npcID"] = 171383,
		},
		[163990] = {
			["encounterName"] = "Imperator Mar'gok",
			["encounterID"] = 1705,
			["npcID"] = 77428,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[227463] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114320,
		},
		[337131] = {
			["npcID"] = 162872,
		},
		[358181] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[338157] = {
			["npcID"] = 165047,
		},
		[368868] = {
			["npcID"] = 184738,
		},
		[304946] = {
			["npcID"] = 177223,
		},
		[346346] = {
			["npcID"] = 164713,
		},
		[349419] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[393439] = {
			["source"] = "Sundered Mercenary",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193791,
		},
		[365798] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 183439,
		},
		[387297] = {
			["npcID"] = 186354,
		},
		[343276] = {
			["npcID"] = 173178,
		},
		[323825] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165994,
			["encounterID"] = 2404,
		},
		[382179] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Manipulator Tharohn",
			["npcID"] = 188171,
		},
		[366823] = {
			["npcID"] = 185275,
		},
		[322802] = {
			["npcID"] = 161971,
		},
		[360228] = {
			["npcID"] = 184061,
		},
		[366406] = {
			["npcID"] = 184908,
		},
		[390940] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarls",
			["npcID"] = 197354,
		},
		[395035] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195927,
		},
		[241798] = {
			["npcID"] = 114783,
		},
		[394466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primordial Hail",
			["npcID"] = 189039,
		},
		[387300] = {
			["npcID"] = 192739,
		},
		[393443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Veshrak of the North",
			["npcID"] = 188713,
		},
		[340208] = {
			["npcID"] = 173655,
		},
		[342256] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[325876] = {
			["npcID"] = 165414,
		},
		[196242] = {
			["npcID"] = 99649,
		},
		[324666] = {
			["npcID"] = 166551,
		},
		[325877] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[185493] = {
			["npcID"] = 157016,
		},
		[367851] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[313332] = {
			["npcID"] = 166046,
		},
		[330816] = {
			["npcID"] = 169861,
		},
		[358638] = {
			["npcID"] = 178997,
		},
		[390938] = {
			["source"] = "Aggravated Skitterfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197406,
		},
		[372971] = {
			["source"] = "Qalashi Blacksmith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189471,
		},
		[296190] = {
			["npcID"] = 152517,
		},
		[365805] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[354297] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 179334,
		},
		[339008] = {
			["npcID"] = 161704,
		},
		[369901] = {
			["npcID"] = 186965,
		},
		[329975] = {
			["npcID"] = 168004,
		},
		[368544] = {
			["npcID"] = 184597,
		},
		[385258] = {
			["source"] = "Coastal Eel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198782,
		},
		[173514] = {
			["npcID"] = 83389,
		},
		[279567] = {
			["npcID"] = 167826,
		},
		[396520] = {
			["npcID"] = 187212,
		},
		[227981] = {
			["npcID"] = 114541,
		},
		[120149] = {
			["source"] = "Mirror Image",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194853,
		},
		[275569] = {
			["npcID"] = 157728,
		},
		[355571] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[343287] = {
			["npcID"] = 173633,
		},
		[357619] = {
			["npcID"] = 177422,
		},
		[329978] = {
			["npcID"] = 185100,
		},
		[388332] = {
			["npcID"] = 196439,
		},
		[334664] = {
			["npcID"] = 171341,
		},
		[357620] = {
			["npcID"] = 177422,
		},
		[154784] = {
			["npcID"] = 84110,
		},
		[359668] = {
			["npcID"] = 180051,
		},
		[326909] = {
			["npcID"] = 163992,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[334076] = {
			["npcID"] = 168942,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[299268] = {
			["npcID"] = 144566,
		},
		[147108] = {
			["source"] = "Shadowmoon Voidclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74374,
		},
		[395501] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 192934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[388335] = {
			["npcID"] = 186354,
		},
		[393454] = {
			["source"] = "Battlehorn Pyrhus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190986,
		},
		[271628] = {
			["npcID"] = 164334,
		},
		[389364] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cracktooth",
			["npcID"] = 187528,
		},
		[371956] = {
			["source"] = "Primal Terrasentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188011,
		},
		[389360] = {
			["source"] = "Ancient Timekeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192516,
		},
		[394479] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primordial Hail",
			["npcID"] = 189039,
		},
		[320772] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 162693,
			["encounterID"] = 2390,
		},
		[355577] = {
			["npcID"] = 178171,
		},
		[393459] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[205462] = {
			["npcID"] = 166137,
		},
		[329989] = {
			["npcID"] = 158978,
		},
		[322818] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[356602] = {
			["npcID"] = 180164,
		},
		[357626] = {
			["npcID"] = 177443,
		},
		[388886] = {
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196576,
		},
		[196249] = {
			["npcID"] = 99649,
		},
		[393458] = {
			["npcID"] = 190278,
		},
		[172703] = {
			["npcID"] = 83763,
		},
		[366847] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182144,
		},
		[388340] = {
			["npcID"] = 196439,
		},
		[340224] = {
			["npcID"] = 161529,
		},
		[392451] = {
			["source"] = "Flame Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197985,
		},
		[387317] = {
			["npcID"] = 190093,
		},
		[166565] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79548,
		},
		[368890] = {
			["npcID"] = 181408,
		},
		[390389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taranthiza",
			["npcID"] = 196970,
		},
		[335114] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[157348] = {
			["npcID"] = 77942,
		},
		[260235] = {
			["npcID"] = 126788,
		},
		[394485] = {
			["source"] = "Hypoxicron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186334,
		},
		[276754] = {
			["npcID"] = 177982,
		},
		[383231] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[172193] = {
			["npcID"] = 172589,
		},
		[357631] = {
			["npcID"] = 177982,
		},
		[329990] = {
			["npcID"] = 158978,
		},
		[355584] = {
			["npcID"] = 178171,
		},
		[270613] = {
			["npcID"] = 179079,
		},
		[394487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Death's Shadow",
			["npcID"] = 190985,
		},
		[321807] = {
			["npcID"] = 163619,
		},
		[392449] = {
			["npcID"] = 190173,
		},
		[357639] = {
			["npcID"] = 177422,
		},
		[334625] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[350467] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[331026] = {
			["npcID"] = 160185,
		},
		[324387] = {
			["npcID"] = 165197,
		},
		[232084] = {
			["npcID"] = 116549,
		},
		[374020] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[192158] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97202,
		},
		[357641] = {
			["npcID"] = 177982,
		},
		[365825] = {
			["npcID"] = 182649,
		},
		[350469] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[376063] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Smoldering Hellion",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191510,
		},
		[385277] = {
			["npcID"] = 188226,
		},
		[369921] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Phoenix",
			["npcID"] = 187932,
		},
		[342280] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[167589] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79548,
		},
		[87527] = {
			["source"] = "Dustbelcher Initiate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46694,
		},
		[378112] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Encroaching Hornswog",
			["npcID"] = 189314,
		},
		[342281] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[294165] = {
			["npcID"] = 150958,
		},
		[373526] = {
			["source"] = "Shimmering Swallowtail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189744,
		},
		[391425] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["npcID"] = 198308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[342282] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[335119] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[352520] = {
			["npcID"] = 178601,
		},
		[316689] = {
			["npcID"] = 162682,
		},
		[374022] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[354572] = {
			["npcID"] = 176561,
		},
		[371976] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[369925] = {
			["source"] = "Transformed Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197225,
		},
		[202661] = {
			["npcID"] = 102583,
		},
		[359688] = {
			["npcID"] = 181967,
		},
		[380174] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[365831] = {
			["npcID"] = 182357,
		},
		[350475] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[347404] = {
			["npcID"] = 155830,
		},
		[348428] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176605,
		},
		[256658] = {
			["npcID"] = 166029,
		},
		[313621] = {
			["npcID"] = 177637,
		},
		[357144] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 180323,
			["encounterID"] = 2431,
		},
		[378120] = {
			["source"] = "Unstable Rock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192799,
		},
		[320788] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 162693,
			["encounterID"] = 2390,
		},
		[383237] = {
			["npcID"] = 187321,
		},
		[157355] = {
			["source"] = "Voidseer Kalurg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83385,
		},
		[360213] = {
			["npcID"] = 181839,
		},
		[375058] = {
			["source"] = "Old Arbhog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196897,
		},
		[348953] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[371983] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[375056] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[365835] = {
			["npcID"] = 183407,
		},
		[169129] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 84464,
		},
		[376073] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[360717] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181399,
			["encounterID"] = 2543,
		},
		[162475] = {
			["encounterName"] = "Tectus, The Living Mountain",
			["encounterID"] = 1722,
			["npcID"] = 78948,
		},
		[341786] = {
			["npcID"] = 167528,
		},
		[366866] = {
			["npcID"] = 184651,
		},
		[393478] = {
			["npcID"] = 189289,
		},
		[271652] = {
			["npcID"] = 176434,
		},
		[178091] = {
			["npcID"] = 80491,
		},
		[319775] = {
			["npcID"] = 166872,
		},
		[368909] = {
			["npcID"] = 185861,
		},
		[284968] = {
			["npcID"] = 144572,
		},
		[387337] = {
			["source"] = "Molded Boulder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190213,
		},
		[343316] = {
			["npcID"] = 173446,
		},
		[340761] = {
			["npcID"] = 166140,
		},
		[320804] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164561,
			["encounterID"] = 2394,
		},
		[365851] = {
			["npcID"] = 183404,
		},
		[396552] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmas",
			["npcID"] = 199027,
		},
		[374544] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[340760] = {
			["npcID"] = 166140,
		},
		[336158] = {
			["npcID"] = 172217,
		},
		[339223] = {
			["npcID"] = 158259,
		},
		[365847] = {
			["npcID"] = 183229,
		},
		[328986] = {
			["npcID"] = 169159,
		},
		[354068] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[371984] = {
			["source"] = "Flashfrost Chillweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188067,
		},
		[357139] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[301351] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[362771] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183463,
		},
		[343320] = {
			["npcID"] = 173444,
		},
		[214692] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[337178] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 170838,
			["encounterID"] = 2391,
		},
		[160943] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 77483,
		},
		[339226] = {
			["npcID"] = 158259,
		},
		[377105] = {
			["source"] = "Vault Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190510,
		},
		[227999] = {
			["npcID"] = 114542,
		},
		[387343] = {
			["source"] = "Molded Boulder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190213,
		},
		[343322] = {
			["npcID"] = 168337,
		},
		[292139] = {
			["npcID"] = 150754,
		},
		[361233] = {
			["npcID"] = 182158,
		},
		[366869] = {
			["npcID"] = 184651,
		},
		[355613] = {
			["npcID"] = 178958,
		},
		[396040] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199233,
		},
		[230050] = {
			["npcID"] = 115765,
		},
		[332567] = {
			["npcID"] = 170228,
		},
		[359704] = {
			["npcID"] = 181626,
		},
		[352538] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[353562] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 179177,
			["encounterID"] = 2434,
		},
		[354586] = {
			["npcID"] = 179526,
		},
		[343325] = {
			["npcID"] = 173445,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Vigilant Duskwatch",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104918,
		},
		[374038] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[326952] = {
			["npcID"] = 168058,
		},
		[391944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnawbone Splintershield",
			["npcID"] = 197847,
		},
		[360730] = {
			["npcID"] = 181114,
		},
		[357659] = {
			["npcID"] = 178878,
		},
		[321828] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[153268] = {
			["source"] = "Shadowmoon Exhumer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77700,
		},
		[378143] = {
			["npcID"] = 189939,
		},
		[320805] = {
			["npcID"] = 156561,
		},
		[130266] = {
			["npcID"] = 66200,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[373017] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[369946] = {
			["npcID"] = 191611,
		},
		[375065] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[331044] = {
			["npcID"] = 170860,
		},
		[377608] = {
			["npcID"] = 189217,
		},
		[365870] = {
			["npcID"] = 183404,
		},
		[241828] = {
			["npcID"] = 114804,
		},
		[331045] = {
			["npcID"] = 170860,
		},
		[357135] = {
			["npcID"] = 180387,
		},
		[382233] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Batak",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[324368] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 163077,
			["encounterID"] = 2357,
		},
		[335141] = {
			["npcID"] = 165824,
		},
		[173751] = {
			["npcID"] = 155216,
		},
		[342320] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[375068] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Lava Tentacles",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190023,
		},
		[290097] = {
			["npcID"] = 144570,
		},
		[389401] = {
			["source"] = "Beguiled Aquamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195960,
		},
		[374045] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[321834] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[335143] = {
			["npcID"] = 165222,
		},
		[360737] = {
			["npcID"] = 181116,
		},
		[344849] = {
			["npcID"] = 175240,
		},
		[342310] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[385331] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Detonating Crystal",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195138,
		},
		[364833] = {
			["npcID"] = 181111,
		},
		[310041] = {
			["npcID"] = 166159,
		},
		[356666] = {
			["npcID"] = 179892,
		},
		[294195] = {
			["npcID"] = 144298,
		},
		[373024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Decayed Elder",
			["npcID"] = 189531,
		},
		[353573] = {
			["npcID"] = 179133,
		},
		[325932] = {
			["npcID"] = 179524,
		},
		[373513] = {
			["npcID"] = 190128,
		},
		[385310] = {
			["source"] = "Primalist Shockcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195119,
		},
		[324909] = {
			["npcID"] = 164926,
		},
		[295231] = {
			["npcID"] = 165167,
		},
		[392486] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[320825] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164568,
			["encounterID"] = 2394,
		},
		[357670] = {
			["npcID"] = 178859,
		},
		[344847] = {
			["npcID"] = 178226,
		},
		[388383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iskaara Defender",
			["npcID"] = 186431,
		},
		[373027] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[106856] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[358695] = {
			["npcID"] = 180426,
		},
		[398632] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[325395] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 166813,
		},
		[345397] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[167095] = {
			["npcID"] = 83390,
		},
		[227508] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[229544] = {
			["npcID"] = 115401,
		},
		[176821] = {
			["npcID"] = 83754,
		},
		[342317] = {
			["npcID"] = 177476,
		},
		[384291] = {
			["npcID"] = 196913,
		},
		[324923] = {
			["npcID"] = 164926,
		},
		[324914] = {
			["npcID"] = 166299,
		},
		[191161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "God-King Skovald",
			["npcID"] = 92307,
		},
		[384292] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Thunder Caller",
			["npcID"] = 194647,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[217260] = {
			["npcID"] = 186679,
		},
		[378150] = {
			["npcID"] = 186825,
		},
		[358699] = {
			["npcID"] = 180417,
		},
		[318773] = {
			["npcID"] = 166347,
		},
		[389412] = {
			["source"] = "Nezascar the Sightless",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196535,
		},
		[331069] = {
			["npcID"] = 179615,
		},
		[358700] = {
			["npcID"] = 180417,
		},
		[368951] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[259473] = {
			["npcID"] = 131331,
		},
		[320822] = {
			["npcID"] = 165222,
		},
		[342321] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[373059] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["npcID"] = 187771,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[332084] = {
			["npcID"] = 167965,
		},
		[320823] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[330037] = {
			["npcID"] = 168361,
		},
		[384296] = {
			["npcID"] = 196913,
		},
		[340749] = {
			["npcID"] = 167548,
		},
		[382249] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[10452] = {
			["npcID"] = 45569,
		},
		[388392] = {
			["source"] = "Unruly Textbook",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196044,
		},
		[393511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cauldronbearer Blakor",
			["npcID"] = 186783,
		},
		[378155] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[381694] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[365871] = {
			["npcID"] = 184604,
		},
		[393525] = {
			["source"] = "Ceeqa the Peacetaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188708,
		},
		[328458] = {
			["npcID"] = 168844,
		},
		[341771] = {
			["npcID"] = 170882,
		},
		[365872] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[362801] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 183501,
		},
		[360767] = {
			["npcID"] = 181879,
		},
		[340279] = {
			["npcID"] = 173714,
		},
		[353588] = {
			["npcID"] = 179133,
		},
		[350517] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[162500] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77803,
		},
		[327995] = {
			["npcID"] = 168574,
		},
		[357684] = {
			["npcID"] = 178855,
		},
		[228526] = {
			["npcID"] = 114783,
		},
		[355637] = {
			["npcID"] = 179840,
		},
		[147650] = {
			["npcID"] = 172071,
		},
		[196796] = {
			["npcID"] = 99956,
		},
		[365887] = {
			["npcID"] = 184878,
		},
		[359733] = {
			["npcID"] = 181349,
		},
		[369411] = {
			["source"] = "Cavern Seeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184301,
		},
		[374066] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[391470] = {
			["source"] = "Clove",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194457,
		},
		[359734] = {
			["npcID"] = 185755,
		},
		[389423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thieving Conjurer",
			["npcID"] = 196388,
		},
		[388862] = {
			["source"] = "Corrupted Manafiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196045,
		},
		[362806] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[355640] = {
			["npcID"] = 179840,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[349498] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[228528] = {
			["npcID"] = 114783,
		},
		[355641] = {
			["npcID"] = 179841,
		},
		[393520] = {
			["source"] = "Ceeqa the Peacetaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188708,
		},
		[365888] = {
			["npcID"] = 184879,
		},
		[385341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Construct",
			["npcID"] = 195335,
		},
		[355642] = {
			["npcID"] = 179841,
		},
		[373046] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[377154] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scythid Gloomhunter",
			["npcID"] = 197665,
		},
		[375094] = {
			["source"] = "Swift Hornstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190029,
		},
		[390463] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[328002] = {
			["npcID"] = 168574,
		},
		[382261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taranthiza",
			["npcID"] = 196970,
		},
		[360775] = {
			["npcID"] = 185511,
		},
		[369409] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Earthen Custodian",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184130,
		},
		[393523] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cracktooth",
			["npcID"] = 187528,
		},
		[356100] = {
			["npcID"] = 177395,
		},
		[358728] = {
			["npcID"] = 176940,
		},
		[365905] = {
			["npcID"] = 184860,
		},
		[340289] = {
			["npcID"] = 173714,
		},
		[374073] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[297292] = {
			["npcID"] = 153165,
		},
		[355646] = {
			["npcID"] = 178191,
		},
		[389430] = {
			["npcID"] = 195846,
		},
		[361789] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 183149,
		},
		[357123] = {
			["npcID"] = 180779,
		},
		[372027] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[373051] = {
			["npcID"] = 186669,
		},
		[395586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spellforged Destroyer",
			["npcID"] = 194402,
		},
		[352589] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 176583,
			["encounterID"] = 2436,
		},
		[359743] = {
			["npcID"] = 182357,
		},
		[393527] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cracktooth",
			["npcID"] = 187528,
		},
		[232115] = {
			["npcID"] = 116549,
		},
		[371005] = {
			["source"] = "Crystal Thrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187139,
		},
		[366336] = {
			["npcID"] = 183927,
		},
		[389433] = {
			["source"] = "Darktooth Spirit-Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195267,
		},
		[213688] = {
			["npcID"] = 107024,
		},
		[340305] = {
			["npcID"] = 173720,
		},
		[388410] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[340294] = {
			["npcID"] = 162727,
		},
		[353603] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[191678] = {
			["npcID"] = 96480,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[364865] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181548,
		},
		[149416] = {
			["npcID"] = 183257,
		},
		[387388] = {
			["npcID"] = 185595,
		},
		[322892] = {
			["npcID"] = 156560,
		},
		[319821] = {
			["npcID"] = 161529,
		},
		[374080] = {
			["source"] = "Primalist Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190348,
		},
		[355074] = {
			["npcID"] = 178628,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["encounterID"] = 1679,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75452,
		},
		[229558] = {
			["npcID"] = 115402,
		},
		[385351] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Construct",
			["npcID"] = 195335,
		},
		[396613] = {
			["source"] = "Sunscale Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193133,
		},
		[339274] = {
			["npcID"] = 173298,
		},
		[396615] = {
			["source"] = "Sunscale Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193133,
		},
		[337227] = {
			["npcID"] = 169102,
		},
		[106864] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[356690] = {
			["npcID"] = 177135,
		},
		[385344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Construct",
			["npcID"] = 195335,
		},
		[341323] = {
			["npcID"] = 173973,
		},
		[362841] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 183663,
			["encounterID"] = 2553,
		},
		[375547] = {
			["source"] = "Molten Eruption",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191286,
		},
		[340300] = {
			["npcID"] = 173720,
		},
		[321891] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 165251,
			["encounterID"] = 2392,
		},
		[383298] = {
			["npcID"] = 182815,
		},
		[351562] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177893,
			["encounterID"] = 2435,
		},
		[328016] = {
			["npcID"] = 168578,
		},
		[365895] = {
			["npcID"] = 183412,
		},
		[340739] = {
			["npcID"] = 173855,
		},
		[308575] = {
			["npcID"] = 158610,
		},
		[3110] = {
			["npcID"] = 416,
		},
		[274792] = {
			["npcID"] = 140149,
		},
		[285020] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 144244,
		},
		[320861] = {
			["npcID"] = 169753,
		},
		[360778] = {
			["npcID"] = 181116,
		},
		[382277] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balara",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[391491] = {
			["npcID"] = 190307,
		},
		[350554] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[393539] = {
			["npcID"] = 186592,
		},
		[365898] = {
			["npcID"] = 185346,
		},
		[334162] = {
			["npcID"] = 166908,
		},
		[372474] = {
			["npcID"] = 180393,
		},
		[229562] = {
			["npcID"] = 115406,
		},
		[330500] = {
			["npcID"] = 155250,
		},
		[387398] = {
			["npcID"] = 190765,
		},
		[326997] = {
			["npcID"] = 167607,
		},
		[389446] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[337235] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[346459] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[322903] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 162099,
			["encounterID"] = 2363,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["encounterID"] = 1850,
		},
		[365901] = {
			["npcID"] = 185346,
		},
		[297310] = {
			["npcID"] = 153174,
		},
		[388424] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[344403] = {
			["npcID"] = 175012,
		},
		[319843] = {
			["npcID"] = 165747,
		},
		[347903] = {
			["npcID"] = 176395,
		},
		[372045] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Caustic Spiderling",
			["npcID"] = 189233,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[344404] = {
			["npcID"] = 175012,
		},
		[365903] = {
			["npcID"] = 185346,
		},
		[355069] = {
			["npcID"] = 178625,
		},
		[273766] = {
			["npcID"] = 177539,
		},
		[137427] = {
			["npcID"] = 170031,
		},
		[304479] = {
			["npcID"] = 156015,
		},
		[392530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quarry Infuser",
			["npcID"] = 197799,
		},
		[273767] = {
			["npcID"] = 168110,
		},
		[377166] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[333145] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 167566,
		},
		[359770] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[366938] = {
			["npcID"] = 185032,
		},
		[315742] = {
			["npcID"] = 166012,
		},
		[353621] = {
			["npcID"] = 179133,
		},
		[338688] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 173164,
		},
		[322909] = {
			["npcID"] = 164033,
		},
		[200901] = {
			["encounterName"] = "Hyrja",
			["source"] = "Solsten",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97219,
		},
		[365907] = {
			["npcID"] = 184880,
		},
		[317791] = {
			["npcID"] = 163366,
		},
		[358749] = {
			["npcID"] = 178824,
		},
		[385359] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[365908] = {
			["npcID"] = 184880,
		},
		[317792] = {
			["npcID"] = 163366,
		},
		[384336] = {
			["source"] = "Nokhud Lancemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192800,
		},
		[229567] = {
			["npcID"] = 115407,
		},
		[312674] = {
			["npcID"] = 161388,
		},
		[369400] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[348513] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[344411] = {
			["npcID"] = 154330,
		},
		[361815] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[167119] = {
			["npcID"] = 173114,
		},
		[359768] = {
			["npcID"] = 181360,
		},
		[338684] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 173162,
		},
		[390481] = {
			["source"] = "Uranto the Swift",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191103,
		},
		[387410] = {
			["npcID"] = 186219,
		},
		[327016] = {
			["npcID"] = 159156,
		},
		[368983] = {
			["npcID"] = 194095,
		},
		[369399] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[167120] = {
			["npcID"] = 81279,
		},
		[355675] = {
			["npcID"] = 176705,
		},
		[368984] = {
			["npcID"] = 191136,
		},
		[390483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbend Gnasher",
			["npcID"] = 189337,
		},
		[358747] = {
			["npcID"] = 178824,
		},
		[372056] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["npcID"] = 187772,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[356090] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[337249] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[358748] = {
			["npcID"] = 178824,
		},
		[387826] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[341349] = {
			["npcID"] = 173973,
		},
		[358762] = {
			["npcID"] = 180389,
		},
		[321894] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 162693,
			["encounterID"] = 2390,
		},
		[331108] = {
			["npcID"] = 160048,
		},
		[337255] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[373087] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[366326] = {
			["npcID"] = 185537,
		},
		[396629] = {
			["source"] = "Territorial Coastling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193163,
		},
		[323943] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[295283] = {
			["npcID"] = 154033,
		},
		[368373] = {
			["npcID"] = 183516,
		},
		[347490] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[373084] = {
			["source"] = "Irontorch Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189466,
		},
		[177564] = {
			["npcID"] = 177586,
		},
		[341352] = {
			["npcID"] = 173189,
		},
		[367966] = {
			["npcID"] = 184901,
		},
		[368990] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[357729] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178072,
			["encounterID"] = 2435,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[391910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mordigan Ironjaw",
			["npcID"] = 187353,
		},
		[387427] = {
			["npcID"] = 181775,
		},
		[353635] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[362849] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 183501,
			["encounterID"] = 2553,
		},
		[295304] = {
			["npcID"] = 154033,
		},
		[295282] = {
			["npcID"] = 154033,
		},
		[365921] = {
			["npcID"] = 183406,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[351589] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177893,
			["encounterID"] = 2435,
		},
		[215241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Scryer",
			["npcID"] = 116360,
		},
		[374112] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Frostbreath Arachnid",
			["npcID"] = 189234,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[385383] = {
			["source"] = "Forge-Keep Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192699,
		},
		[204492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jandvik Bonepiercer",
			["npcID"] = 100948,
		},
		[322936] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[378208] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[300414] = {
			["npcID"] = 150143,
		},
		[384351] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[381280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uktulut Trainee",
			["npcID"] = 193204,
		},
		[338677] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 173161,
		},
		[360176] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 181856,
		},
		[384366] = {
			["npcID"] = 195324,
		},
		[323951] = {
			["npcID"] = 177380,
		},
		[357735] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 179847,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[384353] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[285440] = {
			["encounterName"] = "Machinist's Garden",
			["encounterID"] = 2259,
			["npcID"] = 144248,
		},
		[394591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tombcaller Ganzaya",
			["npcID"] = 188509,
		},
		[358760] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 176521,
		},
		[363879] = {
			["npcID"] = 183747,
		},
		[389473] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Lurking Lunker",
			["npcID"] = 196946,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[357108] = {
			["npcID"] = 177144,
		},
		[354666] = {
			["npcID"] = 179580,
		},
		[396640] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Ancient Branch",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196548,
		},
		[227529] = {
			["npcID"] = 114334,
		},
		[154331] = {
			["npcID"] = 133104,
		},
		[354667] = {
			["npcID"] = 179580,
		},
		[322931] = {
			["npcID"] = 158752,
		},
		[322943] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[345454] = {
			["npcID"] = 157833,
		},
		[389487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lookout Mordren",
			["npcID"] = 193668,
		},
		[315802] = {
			["npcID"] = 150959,
		},
		[295291] = {
			["npcID"] = 154033,
		},
		[332165] = {
			["npcID"] = 170414,
		},
		[358784] = {
			["npcID"] = 179891,
		},
		[393592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gethrel the South Wind",
			["npcID"] = 193848,
		},
		[330471] = {
			["npcID"] = 153174,
		},
		[193235] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[175842] = {
			["npcID"] = 85225,
		},
		[376169] = {
			["source"] = "High Thaumaturge Fural",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189905,
		},
		[260291] = {
			["npcID"] = 130958,
		},
		[345457] = {
			["npcID"] = 157833,
		},
		[257220] = {
			["npcID"] = 166029,
		},
		[376170] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[360835] = {
			["npcID"] = 180722,
		},
		[366309] = {
			["npcID"] = 180917,
		},
		[341406] = {
			["npcID"] = 174012,
		},
		[396646] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loamas",
			["npcID"] = 199030,
		},
		[327122] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168158,
		},
		[365934] = {
			["npcID"] = 184860,
		},
		[387433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaphil the Defiant",
			["npcID"] = 192223,
		},
		[114646] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haunting Sha",
			["npcID"] = 59555,
		},
		[385386] = {
			["source"] = "Menial Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192702,
		},
		[386410] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[358769] = {
			["npcID"] = 180782,
		},
		[326392] = {
			["npcID"] = 157212,
		},
		[360859] = {
			["npcID"] = 181047,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[358770] = {
			["npcID"] = 176880,
		},
		[240009] = {
			["npcID"] = 158314,
		},
		[372460] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskpaw Stalker",
			["npcID"] = 187523,
		},
		[378222] = {
			["npcID"] = 187324,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[322940] = {
			["npcID"] = 172067,
		},
		[278919] = {
			["npcID"] = 170737,
		},
		[394982] = {
			["source"] = "Crystalized Steelshard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188048,
		},
		[104318] = {
			["npcID"] = 55659,
		},
		[163550] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79545,
		},
		[385390] = {
			["source"] = "Forge-Keep Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192699,
		},
		[230094] = {
			["npcID"] = 115765,
		},
		[358773] = {
			["npcID"] = 179891,
		},
		[372082] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[332156] = {
			["npcID"] = 167963,
		},
		[295320] = {
			["npcID"] = 154033,
		},
		[342770] = {
			["npcID"] = 173604,
		},
		[331133] = {
			["npcID"] = 160048,
		},
		[393582] = {
			["source"] = "Cindershard Igniter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198382,
		},
		[382696] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[387440] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[357102] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[389488] = {
			["source"] = "Kerzanthi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196973,
		},
		[178071] = {
			["npcID"] = 80489,
		},
		[277249] = {
			["npcID"] = 158177,
		},
		[339325] = {
			["npcID"] = 173298,
		},
		[393584] = {
			["npcID"] = 196555,
		},
		[392924] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[344464] = {
			["npcID"] = 166398,
		},
		[385757] = {
			["source"] = "Mender Eskros",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195303,
		},
		[229083] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["encounterID"] = 2017,
			["npcID"] = 114790,
		},
		[300424] = {
			["encounterName"] = "King Gobbamak",
			["encounterID"] = 2290,
			["npcID"] = 150160,
		},
		[358799] = {
			["npcID"] = 178519,
		},
		[372087] = {
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187897,
		},
		[393607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodclaw",
			["npcID"] = 187553,
		},
		[374135] = {
			["npcID"] = 190726,
		},
		[358115] = {
			["npcID"] = 178467,
		},
		[335233] = {
			["npcID"] = 177245,
		},
		[336257] = {
			["npcID"] = 164351,
		},
		[385419] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[316855] = {
			["npcID"] = 177206,
		},
		[340375] = {
			["npcID"] = 168148,
		},
		[389518] = {
			["npcID"] = 188180,
		},
		[297382] = {
			["encounterName"] = "King Gobbamak",
			["encounterID"] = 2290,
			["npcID"] = 153172,
		},
		[326021] = {
			["npcID"] = 172312,
		},
		[178412] = {
			["npcID"] = 83578,
		},
		[328069] = {
			["npcID"] = 172072,
		},
		[320243] = {
			["npcID"] = 160905,
		},
		[292264] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[376186] = {
			["source"] = "Overseer Lahar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189235,
		},
		[389495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terillod the Devout",
			["npcID"] = 193171,
		},
		[322977] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[330118] = {
			["npcID"] = 159755,
		},
		[277907] = {
			["npcID"] = 175672,
		},
		[295311] = {
			["npcID"] = 154033,
		},
		[360856] = {
			["npcID"] = 182392,
		},
		[395639] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[372093] = {
			["npcID"] = 191110,
		},
		[389497] = {
			["npcID"] = 187475,
		},
		[347548] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[316836] = {
			["npcID"] = 158992,
		},
		[392569] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[355049] = {
			["npcID"] = 176535,
		},
		[58053] = {
			["npcID"] = 30189,
		},
		[325360] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[396665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmas",
			["npcID"] = 199027,
		},
		[332169] = {
			["npcID"] = 170400,
		},
		[172771] = {
			["npcID"] = 86809,
		},
		[389524] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Lurking Lunker",
			["npcID"] = 196946,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[351621] = {
			["npcID"] = 176573,
		},
		[278935] = {
			["npcID"] = 170737,
		},
		[300434] = {
			["encounterName"] = "King Gobbamak",
			["encounterID"] = 2290,
			["npcID"] = 150160,
		},
		[257231] = {
			["npcID"] = 166057,
		},
		[338360] = {
			["npcID"] = 165290,
		},
		[355048] = {
			["npcID"] = 178139,
		},
		[394620] = {
			["source"] = "Nightrot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188707,
		},
		[325359] = {
			["npcID"] = 170317,
		},
		[368027] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[191735] = {
			["npcID"] = 98954,
		},
		[300436] = {
			["npcID"] = 150146,
		},
		[321935] = {
			["npcID"] = 164707,
		},
		[392574] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[383385] = {
			["source"] = "Filth Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185656,
		},
		[394622] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarls",
			["npcID"] = 197354,
		},
		[346506] = {
			["npcID"] = 178193,
		},
		[384385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prowling Frigidpelt",
			["npcID"] = 193062,
		},
		[360863] = {
			["npcID"] = 183249,
		},
		[365958] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[319916] = {
			["npcID"] = 161410,
		},
		[392576] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[389505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Korvelnor",
			["npcID"] = 196972,
		},
		[370054] = {
			["npcID"] = 181875,
		},
		[391553] = {
			["npcID"] = 199609,
		},
		[331152] = {
			["npcID"] = 167164,
		},
		[227545] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114316,
		},
		[398720] = {
			["source"] = "Irontide Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200850,
		},
		[361890] = {
			["npcID"] = 181453,
		},
		[368034] = {
			["npcID"] = 183722,
		},
		[321968] = {
			["npcID"] = 164929,
		},
		[365961] = {
			["npcID"] = 183406,
		},
		[395650] = {
			["source"] = "Conjured Nightmare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199014,
		},
		[392579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quarry Stonebreaker",
			["npcID"] = 197831,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[329107] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 169219,
		},
		[372449] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormfang Bonecaster",
			["npcID"] = 187931,
		},
		[322965] = {
			["npcID"] = 161971,
		},
		[295324] = {
			["npcID"] = 144562,
		},
		[242391] = {
			["npcID"] = 156212,
		},
		[229608] = {
			["npcID"] = 115486,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[360845] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181551,
		},
		[215433] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95834,
		},
		[228571] = {
			["npcID"] = 114794,
		},
		[175848] = {
			["npcID"] = 85225,
		},
		[332181] = {
			["npcID"] = 170418,
		},
		[329110] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[326039] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[322968] = {
			["npcID"] = 165111,
		},
		[336277] = {
			["npcID"] = 172265,
		},
		[353706] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176562,
		},
		[363965] = {
			["npcID"] = 183747,
		},
		[362210] = {
			["npcID"] = 181963,
		},
		[319898] = {
			["npcID"] = 168022,
		},
		[353682] = {
			["npcID"] = 176880,
		},
		[288210] = {
			["npcID"] = 163032,
		},
		[322970] = {
			["npcID"] = 178462,
		},
		[393609] = {
			["npcID"] = 187645,
		},
		[363967] = {
			["npcID"] = 185436,
		},
		[313757] = {
			["npcID"] = 160974,
		},
		[395685] = {
			["npcID"] = 184456,
		},
		[352660] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[322999] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[344496] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[368017] = {
			["npcID"] = 185663,
		},
		[348566] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176562,
		},
		[316830] = {
			["npcID"] = 158631,
		},
		[299474] = {
			["npcID"] = 150154,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[196838] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99868,
		},
		[13878] = {
			["npcID"] = 45569,
		},
		[350615] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175727,
			["encounterID"] = 2434,
		},
		[359829] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[352663] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[373184] = {
			["npcID"] = 189769,
		},
		[326046] = {
			["npcID"] = 167111,
		},
		[378282] = {
			["source"] = "Qalashi Thaumaturge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192788,
		},
		[356759] = {
			["npcID"] = 177129,
		},
		[228086] = {
			["npcID"] = 114584,
		},
		[152818] = {
			["source"] = "Shadowmoon Bone-Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75713,
		},
		[366001] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182074,
			["encounterID"] = 2539,
		},
		[393615] = {
			["source"] = "Huntmaster Amaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188715,
		},
		[341404] = {
			["npcID"] = 174017,
		},
		[387473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinetooth Bruiser",
			["npcID"] = 187285,
		},
		[355737] = {
			["npcID"] = 179446,
		},
		[319906] = {
			["npcID"] = 177252,
		},
		[395991] = {
			["source"] = "Raging Torrent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197221,
		},
		[399062] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[322978] = {
			["npcID"] = 159174,
		},
		[198888] = {
			["source"] = "Storm Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97068,
		},
		[357786] = {
			["npcID"] = 177718,
		},
		[313790] = {
			["npcID"] = 160974,
		},
		[392594] = {
			["source"] = "Meatgrinder Sotok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186777,
		},
		[80009] = {
			["npcID"] = 82991,
		},
		[351969] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[395692] = {
			["npcID"] = 184456,
		},
		[322980] = {
			["npcID"] = 163350,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186107,
		},
		[390548] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[173307] = {
			["npcID"] = 83390,
		},
		[351646] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[369050] = {
			["npcID"] = 187149,
		},
		[340707] = {
			["npcID"] = 172084,
		},
		[319957] = {
			["npcID"] = 177134,
		},
		[29928] = {
			["npcID"] = 114625,
		},
		[332196] = {
			["npcID"] = 167963,
		},
		[296365] = {
			["npcID"] = 152612,
		},
		[350922] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 179269,
		},
		[335268] = {
			["npcID"] = 170064,
		},
		[395694] = {
			["source"] = "Primalist Shocktrooper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199037,
		},
		[199050] = {
			["source"] = "Valarjar Shieldmaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95832,
		},
		[395670] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[351649] = {
			["npcID"] = 176576,
		},
		[299438] = {
			["npcID"] = 150249,
		},
		[372147] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balara",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[199915] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99651,
			["encounterID"] = 1850,
		},
		[339391] = {
			["npcID"] = 158259,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[325033] = {
			["npcID"] = 167951,
		},
		[265679] = {
			["npcID"] = 129525,
		},
		[320230] = {
			["encounterName"] = "Dealer Xy'exa",
			["npcID"] = 164450,
			["encounterID"] = 2400,
		},
		[369055] = {
			["npcID"] = 186638,
		},
		[325034] = {
			["npcID"] = 167951,
		},
		[372441] = {
			["npcID"] = 186515,
		},
		[342752] = {
			["npcID"] = 173633,
		},
		[125056] = {
			["npcID"] = 165189,
		},
		[333225] = {
			["encounterName"] = "Doctor Ickus",
			["npcID"] = 170851,
			["encounterID"] = 2384,
		},
		[341441] = {
			["npcID"] = 174069,
		},
		[310703] = {
			["npcID"] = 159459,
		},
		[389532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Laden Lasher",
			["npcID"] = 193541,
		},
		[325036] = {
			["npcID"] = 167951,
		},
		[395675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Embar Firepath",
			["npcID"] = 187767,
		},
		[294324] = {
			["npcID"] = 144293,
		},
		[377559] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[296372] = {
			["npcID"] = 152612,
		},
		[375201] = {
			["npcID"] = 191245,
		},
		[173311] = {
			["npcID"] = 83390,
		},
		[389534] = {
			["npcID"] = 183422,
		},
		[318181] = {
			["npcID"] = 157274,
		},
		[366297] = {
			["npcID"] = 184911,
		},
		[384416] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[80012] = {
			["npcID"] = 82991,
		},
		[398749] = {
			["source"] = "Irontide Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200850,
		},
		[395678] = {
			["npcID"] = 184456,
		},
		[368037] = {
			["npcID"] = 185677,
		},
		[397726] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrieking Whelp",
			["npcID"] = 187159,
		},
		[357083] = {
			["npcID"] = 180417,
		},
		[351680] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[355753] = {
			["npcID"] = 179894,
		},
		[385442] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[333231] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164461,
			["encounterID"] = 2391,
		},
		[368061] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[295438] = {
			["npcID"] = 154039,
		},
		[365272] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181551,
		},
		[341422] = {
			["npcID"] = 174194,
		},
		[392659] = {
			["npcID"] = 194224,
		},
		[343470] = {
			["npcID"] = 165919,
		},
		[393634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rakkesh of the Flow",
			["npcID"] = 193849,
		},
		[318949] = {
			["npcID"] = 163894,
		},
		[338407] = {
			["npcID"] = 165339,
		},
		[386555] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
		},
		[360875] = {
			["npcID"] = 180722,
		},
		[386490] = {
			["encounterName"] = "Granyth",
			["source"] = "Nokhud Saboteur",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195580,
		},
		[338353] = {
			["npcID"] = 173016,
		},
		[368042] = {
			["npcID"] = 178508,
		},
		[360876] = {
			["npcID"] = 182357,
		},
		[394660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bluescale",
			["npcID"] = 188723,
		},
		[334558] = {
			["npcID"] = 171448,
		},
		[302543] = {
			["npcID"] = 155483,
		},
		[328117] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 167406,
		},
		[335305] = {
			["npcID"] = 171799,
		},
		[317880] = {
			["npcID"] = 158992,
		},
		[396709] = {
			["source"] = "Gutchewer Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197134,
		},
		[229611] = {
			["npcID"] = 115486,
		},
		[394662] = {
			["npcID"] = 190761,
		},
		[356804] = {
			["npcID"] = 178578,
		},
		[324046] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[317905] = {
			["npcID"] = 159601,
		},
		[345523] = {
			["npcID"] = 156203,
		},
		[338357] = {
			["npcID"] = 172981,
		},
		[359856] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[332509] = {
			["npcID"] = 164555,
		},
		[316859] = {
			["npcID"] = 170042,
		},
		[334263] = {
			["npcID"] = 168977,
		},
		[368047] = {
			["npcID"] = 178508,
		},
		[381356] = {
			["npcID"] = 193292,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[257254] = {
			["npcID"] = 171302,
		},
		[339407] = {
			["npcID"] = 173280,
		},
		[381357] = {
			["npcID"] = 192854,
		},
		[333241] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 170850,
			["encounterID"] = 2391,
		},
		[358835] = {
			["npcID"] = 177444,
		},
		[321247] = {
			["encounterName"] = "Amarth, The Harvester",
			["npcID"] = 163157,
			["encounterID"] = 2388,
		},
		[364978] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 181047,
		},
		[342474] = {
			["npcID"] = 165759,
		},
		[334266] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[353769] = {
			["npcID"] = 179135,
		},
		[364979] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[162058] = {
			["encounterName"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["npcID"] = 80005,
		},
		[338362] = {
			["npcID"] = 165290,
		},
		[390624] = {
			["source"] = "Snarglebone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197344,
		},
		[299460] = {
			["npcID"] = 150250,
		},
		[396739] = {
			["source"] = "The Blue Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195976,
		},
		[345552] = {
			["npcID"] = 177168,
		},
		[396717] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[339444] = {
			["npcID"] = 173276,
		},
		[356812] = {
			["npcID"] = 180286,
		},
		[362934] = {
			["npcID"] = 182326,
		},
		[214771] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99651,
			["encounterID"] = 1850,
		},
		[227568] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114261,
		},
		[353721] = {
			["npcID"] = 179135,
		},
		[328411] = {
			["npcID"] = 159106,
		},
		[388529] = {
			["npcID"] = 192931,
		},
		[365044] = {
			["npcID"] = 182318,
		},
		[330458] = {
			["npcID"] = 151331,
		},
		[338456] = {
			["npcID"] = 172981,
		},
		[300514] = {
			["npcID"] = 150146,
		},
		[331481] = {
			["npcID"] = 167948,
		},
		[170751] = {
			["npcID"] = 156158,
		},
		[338636] = {
			["npcID"] = 167731,
		},
		[372151] = {
			["source"] = "Gutchewer Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186284,
		},
		[327130] = {
			["npcID"] = 165872,
		},
		[370104] = {
			["npcID"] = 190767,
		},
		[350653] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 177613,
		},
		[339392] = {
			["npcID"] = 158259,
		},
		[319941] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[369359] = {
			["source"] = "Infused Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189515,
		},
		[317894] = {
			["npcID"] = 170042,
		},
		[351678] = {
			["npcID"] = 178271,
		},
		[385462] = {
			["source"] = "Rellen, The Learned",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190949,
		},
		[394676] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Icecaller",
			["npcID"] = 198501,
		},
		[358845] = {
			["npcID"] = 181133,
		},
		[294349] = {
			["npcID"] = 144301,
		},
		[364240] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[320989] = {
			["npcID"] = 156561,
		},
		[329432] = {
			["npcID"] = 177861,
		},
		[388535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnawbone Chainchewer",
			["npcID"] = 196521,
		},
		[361023] = {
			["npcID"] = 181005,
		},
		[329181] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 167406,
		},
		[393718] = {
			["source"] = "Huntmaster Amaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188715,
		},
		[169730] = {
			["npcID"] = 84877,
		},
		[320008] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[339425] = {
			["npcID"] = 173447,
		},
		[349663] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[388537] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[344546] = {
			["npcID"] = 162880,
		},
		[394680] = {
			["source"] = "Reclaimer Makko",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191536,
		},
		[338406] = {
			["npcID"] = 173051,
		},
		[218871] = {
			["npcID"] = 152500,
		},
		[377277] = {
			["source"] = "Volethi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200727,
		},
		[383452] = {
			["source"] = "Snowscruff Bakar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193401,
		},
		[391610] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[355811] = {
			["npcID"] = 180031,
		},
		[361989] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[189200] = {
			["npcID"] = 156244,
		},
		[366272] = {
			["npcID"] = 185032,
		},
		[392635] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kaurdyth",
			["npcID"] = 197835,
		},
		[332234] = {
			["npcID"] = 167967,
		},
		[329163] = {
			["npcID"] = 168837,
		},
		[334282] = {
			["npcID"] = 154330,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Strife",
			["npcID"] = 59051,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1417,
		},
		[164102] = {
			["npcID"] = 81235,
		},
		[348648] = {
			["npcID"] = 176520,
		},
		[391613] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[355782] = {
			["npcID"] = 179842,
		},
		[227575] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114316,
		},
		[324079] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[321999] = {
			["npcID"] = 164705,
		},
		[335308] = {
			["npcID"] = 171799,
		},
		[320019] = {
			["npcID"] = 167022,
		},
		[321009] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 162059,
			["encounterID"] = 2357,
		},
		[189697] = {
			["npcID"] = 161785,
		},
		[388544] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[323057] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[309749] = {
			["npcID"] = 172556,
		},
		[346605] = {
			["npcID"] = 175801,
		},
		[392640] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[332239] = {
			["npcID"] = 170418,
		},
		[329168] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[328177] = {
			["npcID"] = 168572,
		},
		[218875] = {
			["npcID"] = 152500,
		},
		[182532] = {
			["npcID"] = 174183,
		},
		[295420] = {
			["npcID"] = 144580,
		},
		[285148] = {
			["npcID"] = 150734,
		},
		[355787] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[328146] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 164702,
			["encounterID"] = 2387,
		},
		[329170] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[158025] = {
			["encounterName"] = "Imperator Mar'gok",
			["encounterID"] = 1705,
			["npcID"] = 77428,
		},
		[323064] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[389572] = {
			["npcID"] = 187262,
		},
		[329171] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[296447] = {
			["npcID"] = 152644,
		},
		[171784] = {
			["npcID"] = 85768,
		},
		[315963] = {
			["npcID"] = 170146,
		},
		[329172] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[255220] = {
			["npcID"] = 166032,
		},
		[352752] = {
			["encounterName"] = "The Nine",
			["npcID"] = 178736,
			["encounterID"] = 2429,
		},
		[387564] = {
			["source"] = "Conjured Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196102,
		},
		[345553] = {
			["npcID"] = 174843,
		},
		[228603] = {
			["npcID"] = 114804,
		},
		[173866] = {
			["npcID"] = 79230,
		},
		[328221] = {
			["npcID"] = 166723,
		},
		[345554] = {
			["npcID"] = 177168,
		},
		[387528] = {
			["npcID"] = 186329,
		},
		[396742] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Slobberclaw",
			["npcID"] = 195972,
		},
		[384492] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[382410] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[362184] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[331223] = {
			["npcID"] = 162763,
		},
		[356817] = {
			["npcID"] = 178578,
		},
		[172810] = {
			["npcID"] = 81603,
		},
		[340474] = {
			["npcID"] = 169874,
		},
		[396991] = {
			["source"] = "Drakonid Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187240,
		},
		[365008] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183033,
		},
		[395967] = {
			["source"] = "Vicious Hyena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197123,
		},
		[317916] = {
			["npcID"] = 159112,
		},
		[339415] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[365009] = {
			["npcID"] = 184409,
		},
		[402888] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[325183] = {
			["npcID"] = 171622,
		},
		[355830] = {
			["npcID"] = 179893,
		},
		[360949] = {
			["npcID"] = 184268,
		},
		[386509] = {
			["source"] = "Ezrigeth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187666,
		},
		[228606] = {
			["npcID"] = 114803,
		},
		[376272] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["npcID"] = 191225,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[373201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windyfin Skybasher",
			["npcID"] = 187431,
		},
		[391871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskpaw Tendontearer",
			["npcID"] = 197820,
		},
		[375249] = {
			["npcID"] = 190708,
		},
		[329422] = {
			["npcID"] = 157571,
		},
		[369107] = {
			["npcID"] = 185272,
		},
		[320991] = {
			["npcID"] = 162038,
		},
		[340683] = {
			["npcID"] = 162708,
		},
		[347609] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[389583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Manipulator",
			["npcID"] = 188172,
		},
		[326171] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[375251] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[368085] = {
			["npcID"] = 183722,
		},
		[260344] = {
			["npcID"] = 166027,
		},
		[325119] = {
			["npcID"] = 157212,
		},
		[358872] = {
			["npcID"] = 178592,
		},
		[396751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Luumak the Insatiable",
			["npcID"] = 195971,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[345623] = {
			["npcID"] = 165824,
		},
		[356886] = {
			["npcID"] = 180331,
		},
		[387571] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[340446] = {
			["npcID"] = 167898,
		},
		[17843] = {
			["npcID"] = 189583,
		},
		[391634] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[377338] = {
			["source"] = "Aqualing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190406,
		},
		[356865] = {
			["npcID"] = 177271,
		},
		[394706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Frost",
			["npcID"] = 198702,
		},
		[285165] = {
			["npcID"] = 144578,
		},
		[169744] = {
			["npcID"] = 84878,
		},
		[162066] = {
			["encounterName"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["npcID"] = 80005,
		},
		[199433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormfang Bonecaster",
			["npcID"] = 187931,
		},
		[342496] = {
			["npcID"] = 168961,
		},
		[392660] = {
			["source"] = "Ancient Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187111,
		},
		[200969] = {
			["source"] = "King Tor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97084,
		},
		[390613] = {
			["source"] = "Snarglebone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197344,
		},
		[350687] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[355806] = {
			["npcID"] = 179891,
		},
		[360960] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[320999] = {
			["npcID"] = 164852,
		},
		[207642] = {
			["npcID"] = 175922,
		},
		[331237] = {
			["npcID"] = 162763,
		},
		[393686] = {
			["npcID"] = 187886,
		},
		[321000] = {
			["npcID"] = 177134,
		},
		[300560] = {
			["npcID"] = 150142,
		},
		[328395] = {
			["npcID"] = 171656,
		},
		[299502] = {
			["npcID"] = 155094,
		},
		[166675] = {
			["npcID"] = 80937,
		},
		[158997] = {
			["npcID"] = 81362,
		},
		[167699] = {
			["npcID"] = 83803,
		},
		[397783] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["npcID"] = 56448,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1418,
		},
		[172818] = {
			["npcID"] = 184074,
		},
		[362976] = {
			["npcID"] = 183721,
		},
		[392665] = {
			["npcID"] = 187258,
		},
		[389594] = {
			["npcID"] = 186430,
		},
		[353763] = {
			["npcID"] = 179135,
		},
		[268792] = {
			["npcID"] = 130242,
		},
		[384476] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[328170] = {
			["npcID"] = 162057,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[331274] = {
			["npcID"] = 167923,
		},
		[332329] = {
			["npcID"] = 170486,
		},
		[365026] = {
			["npcID"] = 182318,
		},
		[176514] = {
			["npcID"] = 83694,
		},
		[346599] = {
			["npcID"] = 168975,
		},
		[347623] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[386559] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[386526] = {
			["source"] = "Nullmagic Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187246,
		},
		[391866] = {
			["source"] = "Brackenhide Putrifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192057,
		},
		[256878] = {
			["npcID"] = 171303,
		},
		[381408] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shiverweb Crawler",
			["npcID"] = 192591,
		},
		[357862] = {
			["npcID"] = 177903,
		},
		[317936] = {
			["npcID"] = 163459,
		},
		[318995] = {
			["npcID"] = 155945,
		},
		[352744] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[381444] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[346807] = {
			["npcID"] = 175700,
		},
		[227592] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[333294] = {
			["npcID"] = 169893,
		},
		[322236] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 165430,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[393696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vadne Bleakheart",
			["npcID"] = 195764,
		},
		[382435] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[367079] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[331248] = {
			["npcID"] = 171745,
		},
		[332272] = {
			["npcID"] = 180028,
		},
		[364073] = {
			["npcID"] = 184735,
		},
		[362985] = {
			["npcID"] = 183714,
		},
		[323059] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164804,
			["encounterID"] = 2397,
		},
		[365033] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[326319] = {
			["npcID"] = 164921,
		},
		[268801] = {
			["npcID"] = 125460,
		},
		[171394] = {
			["npcID"] = 80379,
		},
		[369129] = {
			["npcID"] = 186509,
		},
		[382474] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[346607] = {
			["npcID"] = 175857,
		},
		[372201] = {
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189464,
		},
		[328180] = {
			["npcID"] = 168627,
		},
		[333299] = {
			["npcID"] = 169893,
		},
		[317943] = {
			["npcID"] = 163457,
		},
		[396807] = {
			["npcID"] = 192759,
		},
		[365036] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 184126,
		},
		[347668] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[387559] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[320028] = {
			["npcID"] = 177252,
		},
		[340467] = {
			["npcID"] = 173756,
		},
		[357871] = {
			["npcID"] = 177903,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[396774] = {
			["npcID"] = 187209,
		},
		[340468] = {
			["npcID"] = 159105,
		},
		[366062] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[334326] = {
			["npcID"] = 171376,
		},
		[396775] = {
			["npcID"] = 187209,
		},
		[319994] = {
			["npcID"] = 162258,
		},
		[176512] = {
			["npcID"] = 83692,
		},
		[328248] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[294401] = {
			["npcID"] = 168102,
		},
		[295425] = {
			["npcID"] = 154039,
		},
		[395957] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[394763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Private Shikzar",
			["npcID"] = 193127,
		},
		[392682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadzigeth",
			["npcID"] = 188447,
		},
		[397801] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["npcID"] = 56448,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1418,
		},
		[199034] = {
			["source"] = "Valarjar Aspirant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101637,
		},
		[334329] = {
			["npcID"] = 171376,
		},
		[384493] = {
			["npcID"] = 184657,
		},
		[385517] = {
			["source"] = "Rotbow Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187021,
		},
		[394731] = {
			["source"] = "Unstable Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198709,
		},
		[358963] = {
			["npcID"] = 180864,
		},
		[175899] = {
			["npcID"] = 81272,
		},
		[356853] = {
			["npcID"] = 178577,
		},
		[353782] = {
			["npcID"] = 179136,
		},
		[395756] = {
			["npcID"] = 196336,
		},
		[396780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Subjugator",
			["npcID"] = 191658,
		},
		[198934] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95834,
		},
		[353783] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[308803] = {
			["npcID"] = 158259,
		},
		[392686] = {
			["source"] = "Gamgus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194240,
		},
		[299525] = {
			["npcID"] = 150250,
		},
		[296454] = {
			["npcID"] = 152656,
		},
		[277035] = {
			["npcID"] = 154018,
		},
		[269837] = {
			["npcID"] = 120843,
		},
		[332318] = {
			["encounterName"] = "Sludgefist",
			["encounterID"] = 2399,
			["npcID"] = 164407,
		},
		[321025] = {
			["npcID"] = 157754,
		},
		[345627] = {
			["npcID"] = 159174,
		},
		[391696] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Thundering Ravager",
			["npcID"] = 190690,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[319010] = {
			["npcID"] = 161917,
		},
		[386546] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[337587] = {
			["npcID"] = 162880,
		},
		[161090] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77816,
		},
		[336383] = {
			["npcID"] = 179755,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[228625] = {
			["npcID"] = 183425,
		},
		[222499] = {
			["npcID"] = 162829,
		},
		[377512] = {
			["npcID"] = 191628,
		},
		[275983] = {
			["npcID"] = 157571,
		},
		[392724] = {
			["npcID"] = 188447,
		},
		[396786] = {
			["npcID"] = 191654,
		},
		[381430] = {
			["npcID"] = 186849,
		},
		[366074] = {
			["npcID"] = 183927,
		},
		[395763] = {
			["npcID"] = 196336,
		},
		[368155] = {
			["npcID"] = 185505,
		},
		[371383] = {
			["npcID"] = 189378,
		},
		[393781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[317959] = {
			["npcID"] = 163458,
		},
		[361024] = {
			["npcID"] = 181007,
		},
		[315076] = {
			["npcID"] = 173414,
		},
		[357953] = {
			["npcID"] = 180013,
		},
		[393783] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iskakx",
			["npcID"] = 192761,
		},
		[356897] = {
			["npcID"] = 177294,
		},
		[324103] = {
			["npcID"] = 162133,
		},
		[366077] = {
			["npcID"] = 183925,
		},
		[373405] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[171390] = {
			["npcID"] = 80380,
		},
		[338471] = {
			["npcID"] = 162100,
		},
		[340655] = {
			["npcID"] = 172077,
		},
		[174403] = {
			["npcID"] = 86330,
		},
		[343556] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[168227] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 83612,
		},
		[329224] = {
			["npcID"] = 168022,
		},
		[317963] = {
			["npcID"] = 163458,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[377341] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[337415] = {
			["npcID"] = 165339,
		},
		[391855] = {
			["npcID"] = 183422,
		},
		[372223] = {
			["source"] = "Qalashi Bonetender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189265,
		},
		[374451] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burning Chain Caster",
			["npcID"] = 195919,
		},
		[394746] = {
			["source"] = "Liskron the Dazzling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193273,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Volatile Spark",
			["npcID"] = 194999,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[265754] = {
			["npcID"] = 125458,
		},
		[381438] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Subdued Steamdrop",
			["npcID"] = 182455,
		},
		[338606] = {
			["npcID"] = 167731,
		},
		[375296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skulking Bruiser",
			["npcID"] = 196384,
		},
		[372225] = {
			["source"] = "Qalashi Bonesplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189467,
		},
		[377344] = {
			["source"] = "Territorial Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192329,
		},
		[321038] = {
			["npcID"] = 162039,
		},
		[363042] = {
			["npcID"] = 185759,
		},
		[392701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zerimek",
			["npcID"] = 188451,
		},
		[364068] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183666,
		},
		[394749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Storm",
			["npcID"] = 198716,
		},
		[367108] = {
			["npcID"] = 184413,
		},
		[192288] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97202,
		},
		[328206] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[397897] = {
			["source"] = "Jazshariu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[394782] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ty'foon the Ascended",
			["npcID"] = 191354,
		},
		[396798] = {
			["source"] = "Ohn'ir Windcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199498,
		},
		[369157] = {
			["npcID"] = 188372,
		},
		[334381] = {
			["npcID"] = 171384,
		},
		[387585] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[278044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrathful Orchid",
			["npcID"] = 186321,
		},
		[376356] = {
			["source"] = "Scout Watu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190025,
		},
		[396861] = {
			["source"] = "Arcane Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190779,
		},
		[358921] = {
			["npcID"] = 178615,
		},
		[364040] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 184140,
		},
		[198944] = {
			["source"] = "Valarjar Shieldmaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95832,
		},
		[356021] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177891,
			["encounterID"] = 2435,
		},
		[350732] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[334522] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[351787] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 177594,
			["encounterID"] = 2434,
		},
		[373424] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[193826] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[396802] = {
			["source"] = "Ohn'ir Windcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199498,
		},
		[393731] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flayfist",
			["npcID"] = 187505,
		},
		[341520] = {
			["npcID"] = 173973,
		},
		[342544] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[365067] = {
			["npcID"] = 182318,
		},
		[366091] = {
			["npcID"] = 181011,
		},
		[395946] = {
			["source"] = "Filth Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197122,
		},
		[397899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sha-Touched Guardian",
			["npcID"] = 200131,
		},
		[346698] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166971,
		},
		[320081] = {
			["npcID"] = 177217,
		},
		[383496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[396805] = {
			["npcID"] = 192759,
		},
		[353836] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[325143] = {
			["npcID"] = 157212,
		},
		[353971] = {
			["npcID"] = 178949,
		},
		[336567] = {
			["npcID"] = 165976,
		},
		[395934] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197119,
		},
		[329239] = {
			["npcID"] = 163882,
		},
		[396836] = {
			["npcID"] = 194798,
		},
		[351762] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[377384] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[284223] = {
			["npcID"] = 144564,
		},
		[363024] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183671,
		},
		[331288] = {
			["npcID"] = 167532,
		},
		[360977] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[367176] = {
			["npcID"] = 184409,
		},
		[228637] = {
			["npcID"] = 114802,
		},
		[384524] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[332313] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[347726] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[387596] = {
			["source"] = "Risen Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195877,
		},
		[314942] = {
			["npcID"] = 166869,
		},
		[395841] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197120,
		},
		[183081] = {
			["npcID"] = 165793,
		},
		[357938] = {
			["npcID"] = 177336,
		},
		[391726] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[356885] = {
			["npcID"] = 179851,
		},
		[391723] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[378420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crudely Bound Elemental",
			["npcID"] = 187723,
		},
		[396812] = {
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196576,
		},
		[385551] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[394765] = {
			["source"] = "Morgg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189244,
		},
		[340642] = {
			["npcID"] = 170872,
		},
		[388623] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[358971] = {
			["npcID"] = 179890,
		},
		[205605] = {
			["npcID"] = 166137,
		},
		[317985] = {
			["npcID"] = 163520,
		},
		[396814] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 195836,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Stormseeker Acolyte",
			["npcID"] = 194990,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[252698] = {
			["npcID"] = 126470,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[359960] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181398,
			["encounterID"] = 2543,
		},
		[394917] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199233,
		},
		[320069] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164451,
			["encounterID"] = 2391,
		},
		[326177] = {
			["npcID"] = 167437,
		},
		[153395] = {
			["source"] = "Carrion Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76057,
		},
		[356014] = {
			["npcID"] = 177356,
		},
		[328362] = {
			["npcID"] = 167834,
		},
		[358938] = {
			["npcID"] = 180840,
		},
		[372247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskpaw Hidestitcher",
			["npcID"] = 187941,
		},
		[163665] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80805,
		},
		[357915] = {
			["npcID"] = 177903,
		},
		[346654] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166969,
		},
		[250213] = {
			["npcID"] = 161527,
		},
		[340512] = {
			["npcID"] = 167078,
		},
		[321061] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[389686] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187160,
		},
		[347679] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[336418] = {
			["npcID"] = 175857,
		},
		[350894] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[277041] = {
			["npcID"] = 154020,
		},
		[198442] = {
			["npcID"] = 165909,
		},
		[350803] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[397878] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Living Water",
			["npcID"] = 59873,
		},
		[395797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Frostsculptor",
			["npcID"] = 198424,
		},
		[340646] = {
			["npcID"] = 173802,
		},
		[393750] = {
			["source"] = "Taresh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188711,
		},
		[378428] = {
			["npcID"] = 187082,
		},
		[277043] = {
			["npcID"] = 154018,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["npcID"] = 56439,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1439,
		},
		[347716] = {
			["npcID"] = 176394,
		},
		[357920] = {
			["npcID"] = 179684,
		},
		[381605] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[381517] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[393752] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vadne Bleakheart",
			["npcID"] = 195764,
		},
		[329256] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 169271,
		},
		[330417] = {
			["npcID"] = 169696,
		},
		[358058] = {
			["npcID"] = 178002,
		},
		[390715] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[378397] = {
			["npcID"] = 187322,
		},
		[159030] = {
			["npcID"] = 81396,
		},
		[331305] = {
			["npcID"] = 161599,
		},
		[373279] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 189988,
		},
		[325163] = {
			["npcID"] = 171772,
		},
		[375327] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[356010] = {
			["npcID"] = 178041,
		},
		[381470] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[395936] = {
			["source"] = "Clearwater Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192652,
		},
		[387613] = {
			["source"] = "Ukhel Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195842,
		},
		[319022] = {
			["npcID"] = 158259,
		},
		[356901] = {
			["npcID"] = 177004,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[387614] = {
			["source"] = "Ukhel Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195851,
		},
		[392733] = {
			["npcID"] = 192637,
		},
		[386722] = {
			["npcID"] = 192236,
		},
		[357926] = {
			["npcID"] = 177336,
		},
		[393787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iskakx",
			["npcID"] = 192761,
		},
		[368294] = {
			["npcID"] = 185752,
		},
		[377500] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[284217] = {
			["npcID"] = 144564,
		},
		[375331] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[359975] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[385569] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[284218] = {
			["npcID"] = 144564,
		},
		[355910] = {
			["npcID"] = 178666,
		},
		[368166] = {
			["npcID"] = 183814,
		},
		[332335] = {
			["npcID"] = 170488,
		},
		[284219] = {
			["npcID"] = 150297,
		},
		[387618] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primalist Infuser",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196043,
		},
		[372262] = {
			["source"] = "Qalashi Bonesplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189467,
		},
		[361001] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 184522,
		},
		[353835] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[347721] = {
			["npcID"] = 176396,
		},
		[392738] = {
			["npcID"] = 186660,
		},
		[399933] = {
			["source"] = "Tukkaraq's Boat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201121,
		},
		[325171] = {
			["npcID"] = 157212,
		},
		[375459] = {
			["npcID"] = 191827,
		},
		[359979] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[377383] = {
			["source"] = "Alpha Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192333,
		},
		[357932] = {
			["npcID"] = 178810,
		},
		[395811] = {
			["npcID"] = 187599,
		},
		[314935] = {
			["npcID"] = 160409,
		},
		[385574] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[362028] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[377411] = {
			["npcID"] = 192938,
		},
		[331316] = {
			["npcID"] = 167538,
		},
		[198962] = {
			["source"] = "Valarjar Runecarver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96664,
		},
		[191284] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[393886] = {
			["source"] = "Aizir the Inflamed",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191306,
		},
		[335412] = {
			["npcID"] = 178660,
		},
		[351912] = {
			["npcID"] = 178366,
		},
		[321105] = {
			["npcID"] = 168591,
		},
		[301629] = {
			["npcID"] = 150297,
		},
		[355888] = {
			["npcID"] = 177807,
		},
		[369197] = {
			["source"] = "Dragonbane Firebinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186605,
		},
		[381521] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Downpour",
			["npcID"] = 192462,
		},
		[277060] = {
			["npcID"] = 154020,
		},
		[212784] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[356913] = {
			["npcID"] = 179851,
		},
		[397888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fallen Waterspeaker",
			["npcID"] = 200126,
		},
		[395816] = {
			["npcID"] = 191524,
		},
		[387652] = {
			["npcID"] = 187203,
		},
		[377389] = {
			["source"] = "Alpha Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192333,
		},
		[378413] = {
			["npcID"] = 191111,
		},
		[375457] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["npcID"] = 191222,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[355915] = {
			["npcID"] = 177816,
		},
		[340649] = {
			["npcID"] = 180096,
		},
		[353952] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
		},
		[338488] = {
			["npcID"] = 173066,
		},
		[327227] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
		},
		[340536] = {
			["npcID"] = 173783,
		},
		[394795] = {
			["npcID"] = 193443,
		},
		[395819] = {
			["npcID"] = 187602,
		},
		[380487] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[393772] = {
			["source"] = "Hihveer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188717,
		},
		[172860] = {
			["npcID"] = 83025,
		},
		[338490] = {
			["npcID"] = 162875,
		},
		[381512] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[320063] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164451,
			["encounterID"] = 2391,
		},
		[355930] = {
			["npcID"] = 177816,
		},
		[387631] = {
			["source"] = "Gamgus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194240,
		},
		[356004] = {
			["npcID"] = 177514,
		},
		[328254] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 168700,
		},
		[357943] = {
			["npcID"] = 180013,
		},
		[358967] = {
			["npcID"] = 179446,
		},
		[400941] = {
			["source"] = "Blazing Bones",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203472,
		},
		[365110] = {
			["npcID"] = 183746,
		},
		[357944] = {
			["npcID"] = 179768,
		},
		[375348] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[323137] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164804,
			["encounterID"] = 2397,
		},
		[361016] = {
			["npcID"] = 183253,
		},
		[394800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Earthcaller",
			["npcID"] = 198500,
		},
		[346790] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 169924,
		},
		[327233] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 168393,
		},
		[320067] = {
			["npcID"] = 177217,
		},
		[191290] = {
			["npcID"] = 76642,
		},
		[358970] = {
			["npcID"] = 179891,
		},
		[372279] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[356923] = {
			["npcID"] = 179890,
		},
		[394802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Council Stormcaller",
			["npcID"] = 198502,
		},
		[375351] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[355900] = {
			["npcID"] = 177807,
		},
		[356924] = {
			["npcID"] = 179890,
		},
		[296523] = {
			["npcID"] = 152708,
		},
		[365212] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[298571] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153756,
		},
		[393780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flame Guardian",
			["npcID"] = 192764,
		},
		[377502] = {
			["npcID"] = 187271,
		},
		[381516] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[392757] = {
			["npcID"] = 195094,
		},
		[336451] = {
			["npcID"] = 163862,
		},
		[373327] = {
			["encounterName"] = "Eranog",
			["source"] = "Primal Flame",
			["npcID"] = 187593,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[334404] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[351808] = {
			["npcID"] = 176577,
		},
		[377402] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[382620] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[346690] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166971,
		},
		[396854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Sentinel",
			["npcID"] = 188173,
		},
		[352833] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[366142] = {
			["npcID"] = 184651,
		},
		[320171] = {
			["encounterName"] = "Amarth, The Harvester",
			["npcID"] = 163157,
			["encounterID"] = 2388,
		},
		[327240] = {
			["npcID"] = 165911,
		},
		[356929] = {
			["npcID"] = 179837,
		},
		[366143] = {
			["npcID"] = 184651,
		},
		[177473] = {
			["npcID"] = 82876,
		},
		[396856] = {
			["npcID"] = 195915,
		},
		[365120] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[364114] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[395833] = {
			["npcID"] = 196913,
		},
		[339527] = {
			["npcID"] = 173469,
		},
		[397881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Living Water",
			["npcID"] = 59873,
		},
		[185152] = {
			["npcID"] = 157820,
		},
		[395834] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197121,
		},
		[371358] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[227638] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[394811] = {
			["source"] = "Seeker Teryx",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193188,
		},
		[358980] = {
			["npcID"] = 180864,
		},
		[339529] = {
			["npcID"] = 173448,
		},
		[387670] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Time-Lost Chieftain",
			["npcID"] = 187266,
		},
		[333387] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[365215] = {
			["npcID"] = 178563,
		},
		[323150] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[361044] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182305,
		},
		[373329] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[358982] = {
			["npcID"] = 180865,
		},
		[360006] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181398,
			["encounterID"] = 2543,
		},
		[394903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lookout Mordren",
			["npcID"] = 193668,
		},
		[374339] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[358983] = {
			["npcID"] = 180865,
		},
		[356951] = {
			["npcID"] = 177004,
		},
		[397886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corrupt Droplet",
			["npcID"] = 62358,
		},
		[366150] = {
			["npcID"] = 180906,
		},
		[167239] = {
			["npcID"] = 83028,
		},
		[386640] = {
			["source"] = "Tarasek Looter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187242,
		},
		[164168] = {
			["npcID"] = 81212,
		},
		[362056] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 181447,
		},
		[354904] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[355914] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[352843] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[183108] = {
			["npcID"] = 193292,
		},
		[350796] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[290395] = {
			["npcID"] = 144536,
		},
		[397889] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fallen Waterspeaker",
			["npcID"] = 200126,
		},
		[374343] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[165193] = {
			["source"] = "Stele",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72627,
		},
		[372296] = {
			["source"] = "Irontorch Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189466,
		},
		[333477] = {
			["npcID"] = 163621,
		},
		[381593] = {
			["source"] = "Ebonstone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184300,
		},
		[371273] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 188302,
		},
		[302682] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[356941] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178081,
			["encounterID"] = 2435,
		},
		[325205] = {
			["npcID"] = 166936,
		},
		[173384] = {
			["npcID"] = 83392,
		},
		[294493] = {
			["npcID"] = 186464,
		},
		[356942] = {
			["npcID"] = 179837,
		},
		[298669] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[326230] = {
			["npcID"] = 165829,
		},
		[347741] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[378454] = {
			["npcID"] = 187082,
		},
		[357967] = {
			["npcID"] = 178897,
		},
		[9053] = {
			["npcID"] = 41272,
		},
		[335445] = {
			["npcID"] = 180032,
		},
		[340564] = {
			["npcID"] = 169206,
		},
		[183111] = {
			["npcID"] = 165793,
		},
		[387657] = {
			["npcID"] = 186329,
		},
		[316072] = {
			["npcID"] = 159174,
		},
		[372311] = {
			["source"] = "Qalashi Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189266,
		},
		[395859] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haunting Sha",
			["npcID"] = 59555,
		},
		[363088] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[361052] = {
			["npcID"] = 180722,
		},
		[377421] = {
			["npcID"] = 192938,
		},
		[357981] = {
			["npcID"] = 177562,
		},
		[29492] = {
			["npcID"] = 114625,
		},
		[330403] = {
			["npcID"] = 168153,
		},
		[332377] = {
			["npcID"] = 170513,
		},
		[337520] = {
			["npcID"] = 159412,
		},
		[354900] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[376399] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192188,
		},
		[227646] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114318,
		},
		[394827] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windseeker Avash",
			["npcID"] = 192045,
		},
		[349797] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[319070] = {
			["npcID"] = 163891,
		},
		[381519] = {
			["npcID"] = 191047,
		},
		[325223] = {
			["npcID"] = 166304,
		},
		[301667] = {
			["npcID"] = 150292,
		},
		[323166] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[328295] = {
			["npcID"] = 168718,
		},
		[370259] = {
			["npcID"] = 187322,
		},
		[322143] = {
			["npcID"] = 156559,
		},
		[327262] = {
			["npcID"] = 167524,
		},
		[393806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stoneheart",
			["npcID"] = 187387,
		},
		[329310] = {
			["npcID"] = 158813,
		},
		[358999] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
		},
		[340581] = {
			["npcID"] = 166279,
		},
		[328287] = {
			["npcID"] = 167550,
		},
		[252730] = {
			["npcID"] = 126493,
		},
		[395855] = {
			["source"] = "The Blue Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195976,
		},
		[396879] = {
			["npcID"] = 196155,
		},
		[328288] = {
			["npcID"] = 168718,
		},
		[382555] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[361066] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181551,
		},
		[351835] = {
			["npcID"] = 179894,
		},
		[397904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sha-Touched Guardian",
			["npcID"] = 200131,
		},
		[394833] = {
			["npcID"] = 187937,
		},
		[395857] = {
			["npcID"] = 189834,
		},
		[290411] = {
			["npcID"] = 144536,
		},
		[356955] = {
			["npcID"] = 176880,
		},
		[357979] = {
			["npcID"] = 178897,
		},
		[197961] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[396882] = {
			["npcID"] = 196155,
		},
		[356956] = {
			["npcID"] = 177551,
		},
		[300650] = {
			["npcID"] = 150169,
		},
		[375384] = {
			["source"] = "Primalist Earthshaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190371,
		},
		[375446] = {
			["npcID"] = 187960,
		},
		[397907] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[366171] = {
			["npcID"] = 184952,
		},
		[395860] = {
			["source"] = "Gargantuan Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191606,
		},
		[355934] = {
			["npcID"] = 177817,
		},
		[366185] = {
			["npcID"] = 183499,
		},
		[329322] = {
			["npcID"] = 155830,
		},
		[350816] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 176531,
		},
		[372315] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["npcID"] = 187771,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[191823] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[394838] = {
			["npcID"] = 193229,
		},
		[391825] = {
			["npcID"] = 190995,
		},
		[358041] = {
			["npcID"] = 180160,
		},
		[381530] = {
			["source"] = "Nokhud Thunderfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193373,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[375388] = {
			["npcID"] = 190995,
		},
		[171858] = {
			["npcID"] = 177877,
		},
		[295536] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[374365] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[324205] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[340588] = {
			["npcID"] = 166467,
		},
		[327280] = {
			["npcID"] = 167524,
		},
		[387683] = {
			["npcID"] = 187203,
		},
		[229705] = {
			["npcID"] = 115418,
		},
		[327274] = {
			["npcID"] = 167524,
		},
		[349805] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176973,
		},
		[357987] = {
			["npcID"] = 178757,
		},
		[301681] = {
			["npcID"] = 150292,
		},
		[355950] = {
			["npcID"] = 178029,
		},
		[397914] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Depraved Mistweaver",
			["npcID"] = 200137,
		},
		[337513] = {
			["npcID"] = 158259,
		},
		[387677] = {
			["npcID"] = 190214,
		},
		[225100] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[365155] = {
			["npcID"] = 183746,
		},
		[362084] = {
			["npcID"] = 181324,
		},
		[354918] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[294517] = {
			["npcID"] = 151816,
		},
		[373395] = {
			["source"] = "Nokhud Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199717,
		},
		[329325] = {
			["npcID"] = 155831,
		},
		[164187] = {
			["npcID"] = 81407,
		},
		[290423] = {
			["npcID"] = 144536,
		},
		[356967] = {
			["npcID"] = 180348,
		},
		[329326] = {
			["npcID"] = 155831,
		},
		[290435] = {
			["npcID"] = 144536,
		},
		[166766] = {
			["npcID"] = 171172,
		},
		[68799] = {
			["npcID"] = 36272,
		},
		[325232] = {
			["npcID"] = 177214,
		},
		[395871] = {
			["npcID"] = 189834,
		},
		[355945] = {
			["npcID"] = 179940,
		},
		[320114] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[382563] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[395872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Talking Fish",
			["npcID"] = 59546,
		},
		[388706] = {
			["npcID"] = 187819,
		},
		[174422] = {
			["npcID"] = 86330,
		},
		[346742] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[350828] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[355947] = {
			["npcID"] = 179802,
		},
		[356971] = {
			["npcID"] = 180087,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[359028] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[335473] = {
			["encounterName"] = "Sludgefist",
			["encounterID"] = 2399,
			["npcID"] = 164407,
		},
		[377447] = {
			["npcID"] = 192220,
		},
		[321141] = {
			["npcID"] = 156562,
		},
		[85692] = {
			["npcID"] = 11859,
		},
		[343664] = {
			["npcID"] = 162452,
		},
		[229706] = {
			["npcID"] = 115418,
		},
		[366187] = {
			["npcID"] = 183499,
		},
		[371306] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[323190] = {
			["npcID"] = 163121,
		},
		[336499] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[356981] = {
			["npcID"] = 177529,
		},
		[354927] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178081,
			["encounterID"] = 2435,
		},
		[294526] = {
			["npcID"] = 151817,
		},
		[320120] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164463,
			["encounterID"] = 2391,
		},
		[366189] = {
			["npcID"] = 183500,
		},
		[395878] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Talking Fish",
			["npcID"] = 59546,
		},
		[337562] = {
			["npcID"] = 162875,
		},
		[329340] = {
			["npcID"] = 165410,
		},
		[366190] = {
			["npcID"] = 183495,
		},
		[135029] = {
			["npcID"] = 78116,
		},
		[339573] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[294533] = {
			["npcID"] = 151817,
		},
		[341621] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[367215] = {
			["npcID"] = 184395,
		},
		[400999] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[320123] = {
			["npcID"] = 168966,
		},
		[394891] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Braekkas",
			["npcID"] = 196855,
		},
		[322171] = {
			["npcID"] = 172596,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[365169] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[341623] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[354932] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178081,
			["encounterID"] = 2435,
		},
		[388716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[373392] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192796,
		},
		[291463] = {
			["npcID"] = 150738,
		},
		[354933] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[396907] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Yu'lon",
			["npcID"] = 56762,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[397931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minion of Doubt",
			["npcID"] = 57109,
		},
		[341625] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 165521,
		},
		[373364] = {
			["npcID"] = 189878,
		},
		[384623] = {
			["source"] = "Qalashi Blacksmith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189471,
		},
		[386700] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hailbringer Marauder",
			["npcID"] = 189228,
		},
		[358006] = {
			["npcID"] = 179608,
		},
		[395885] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[340631] = {
			["npcID"] = 173800,
		},
		[328318] = {
			["npcID"] = 177912,
		},
		[366197] = {
			["npcID"] = 183500,
		},
		[363126] = {
			["npcID"] = 181027,
		},
		[335485] = {
			["npcID"] = 179029,
		},
		[356984] = {
			["npcID"] = 178402,
		},
		[382578] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[210261] = {
			["source"] = "Duskwatch Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104251,
		},
		[327296] = {
			["npcID"] = 156561,
		},
		[164192] = {
			["npcID"] = 81236,
		},
		[366199] = {
			["npcID"] = 183495,
		},
		[391793] = {
			["source"] = "Furious Deluge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197220,
		},
		[41448] = {
			["npcID"] = 177637,
		},
		[354938] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[386675] = {
			["npcID"] = 189583,
		},
		[358011] = {
			["npcID"] = 178789,
		},
		[355963] = {
			["npcID"] = 152594,
		},
		[328322] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164363,
		},
		[272016] = {
			["npcID"] = 154014,
		},
		[363130] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[337530] = {
			["npcID"] = 158259,
		},
		[372369] = {
			["npcID"] = 186490,
		},
		[330400] = {
			["npcID"] = 161553,
		},
		[365168] = {
			["npcID"] = 184530,
		},
		[347775] = {
			["npcID"] = 176395,
		},
		[352914] = {
			["npcID"] = 177397,
		},
		[320135] = {
			["npcID"] = 167470,
		},
		[350847] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[330391] = {
			["npcID"] = 159178,
		},
		[373370] = {
			["npcID"] = 189878,
		},
		[394869] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boneshaper Jardak",
			["npcID"] = 188693,
		},
		[367228] = {
			["npcID"] = 184767,
		},
		[395893] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[325254] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[331398] = {
			["npcID"] = 170147,
		},
		[391799] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197131,
		},
		[384633] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[350865] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177154,
			["encounterID"] = 2435,
		},
		[398981] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Broodwarden",
			["npcID"] = 198263,
		},
		[375420] = {
			["source"] = "Tenacious Timbertooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196185,
		},
		[360064] = {
			["npcID"] = 184216,
		},
		[361088] = {
			["npcID"] = 181027,
		},
		[300687] = {
			["npcID"] = 154744,
		},
		[334485] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[355970] = {
			["npcID"] = 152594,
		},
		[384648] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarls",
			["npcID"] = 197354,
		},
		[325258] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[375422] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbend Gnasher",
			["npcID"] = 189337,
		},
		[335495] = {
			["npcID"] = 180032,
		},
		[365185] = {
			["npcID"] = 184659,
		},
		[328331] = {
			["npcID"] = 168717,
		},
		[387708] = {
			["source"] = "Tyrhold Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192696,
		},
		[331402] = {
			["npcID"] = 180028,
		},
		[320141] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[275112] = {
			["source"] = "Blisterhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197353,
		},
		[395899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Chillblaster",
			["npcID"] = 199124,
		},
		[319127] = {
			["npcID"] = 170335,
		},
		[340617] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 173112,
		},
		[205660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Observant Inquisitor",
			["npcID"] = 107449,
		},
		[285335] = {
			["npcID"] = 177131,
		},
		[330388] = {
			["npcID"] = 159178,
		},
		[377473] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[370307] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[334476] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[396925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 197149,
		},
		[320144] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[382593] = {
			["source"] = "Cruel Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186206,
		},
		[332430] = {
			["npcID"] = 177132,
		},
		[206685] = {
			["npcID"] = 104493,
		},
		[381570] = {
			["npcID"] = 186849,
		},
		[227672] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114321,
		},
		[322193] = {
			["npcID"] = 171255,
		},
		[360076] = {
			["npcID"] = 184061,
		},
		[332431] = {
			["npcID"] = 170513,
		},
		[298651] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153756,
		},
		[163689] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80816,
		},
		[328338] = {
			["npcID"] = 167493,
		},
		[340622] = {
			["npcID"] = 173798,
		},
		[360075] = {
			["npcID"] = 182210,
		},
		[330386] = {
			["npcID"] = 158976,
		},
		[355979] = {
			["npcID"] = 177804,
		},
		[340623] = {
			["npcID"] = 173798,
		},
		[337552] = {
			["npcID"] = 162853,
		},
		[346766] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[335505] = {
			["npcID"] = 179108,
		},
		[393859] = {
			["source"] = "Skittering Woodborer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189762,
		},
		[390788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chief Grrlgllmesh",
			["npcID"] = 186678,
		},
		[330387] = {
			["npcID"] = 159178,
		},
		[388741] = {
			["source"] = "Ukhel Gravestirrer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189928,
		},
		[381575] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rustpine Immolator",
			["npcID"] = 187396,
		},
		[386694] = {
			["source"] = "Stormsurge Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194897,
		},
		[395908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Icebulk",
			["npcID"] = 192767,
		},
		[331412] = {
			["npcID"] = 177130,
		},
		[358023] = {
			["npcID"] = 180474,
		},
		[353935] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[351894] = {
			["npcID"] = 178180,
		},
		[388743] = {
			["source"] = "Risen Bakar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188510,
		},
		[340627] = {
			["npcID"] = 173798,
		},
		[337556] = {
			["npcID"] = 162853,
		},
		[342675] = {
			["npcID"] = 170882,
		},
		[331414] = {
			["npcID"] = 157754,
		},
		[377483] = {
			["source"] = "Shadeslash Trakken",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193271,
		},
		[377486] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[228700] = {
			["npcID"] = 114338,
		},
		[388745] = {
			["source"] = "Icy Blue Crab",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197862,
		},
		[393864] = {
			["npcID"] = 186516,
		},
		[321178] = {
			["npcID"] = 162047,
		},
		[320132] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[391791] = {
			["source"] = "Furious Deluge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197220,
		},
		[174442] = {
			["npcID"] = 86256,
		},
		[290438] = {
			["npcID"] = 144536,
		},
		[334488] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[388747] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boggy Bullfrog",
			["npcID"] = 193699,
		},
		[357011] = {
			["npcID"] = 177514,
		},
		[398985] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Broodguardian Ziruss",
			["npcID"] = 198214,
		},
		[375439] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[331418] = {
			["npcID"] = 170160,
		},
		[381582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Sentinel",
			["npcID"] = 188173,
		},
		[122301] = {
			["npcID"] = 62930,
		},
		[394861] = {
			["npcID"] = 193229,
		},
		[323229] = {
			["npcID"] = 164875,
		},
		[377488] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[366227] = {
			["npcID"] = 183496,
		},
		[391821] = {
			["npcID"] = 189654,
		},
		[364180] = {
			["npcID"] = 183596,
		},
		[211299] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[358038] = {
			["npcID"] = 179802,
		},
		[330397] = {
			["npcID"] = 178281,
		},
		[390760] = {
			["npcID"] = 186678,
		},
		[377490] = {
			["npcID"] = 191057,
		},
		[358039] = {
			["npcID"] = 178002,
		},
		[334493] = {
			["npcID"] = 164862,
		},
		[331379] = {
			["npcID"] = 167965,
		},
		[371313] = {
			["npcID"] = 186336,
		},
		[345755] = {
			["npcID"] = 165663,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Image of Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105754,
		},
		[366182] = {
			["npcID"] = 183498,
		},
		[394893] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lookout Mordren",
			["npcID"] = 193668,
		},
		[329376] = {
			["npcID"] = 165060,
		},
		[350875] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[382561] = {
			["npcID"] = 189654,
		},
		[381535] = {
			["npcID"] = 187079,
		},
		[376426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Falling Water",
			["npcID"] = 186968,
		},
		[338591] = {
			["npcID"] = 173066,
		},
		[330347] = {
			["npcID"] = 157583,
		},
		[386658] = {
			["source"] = "Uranto the Swift",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191103,
		},
		[339557] = {
			["npcID"] = 173464,
		},
		[387732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 190780,
		},
		[323236] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[375385] = {
			["npcID"] = 190739,
		},
		[374361] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[334498] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[327332] = {
			["npcID"] = 163459,
		},
		[384597] = {
			["source"] = "Qalashi Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193293,
		},
		[321124] = {
			["npcID"] = 156815,
		},
		[381525] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[384663] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgewrought Monstrosity",
			["npcID"] = 194816,
		},
		[381592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Sentinel",
			["npcID"] = 188173,
		},
		[372310] = {
			["npcID"] = 188447,
		},
		[366183] = {
			["npcID"] = 183498,
		},
		[392854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Scythid Queen",
			["npcID"] = 184853,
		},
		[320168] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[358047] = {
			["npcID"] = 179931,
		},
		[355929] = {
			["npcID"] = 177803,
		},
		[388760] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[396877] = {
			["npcID"] = 196155,
		},
		[329383] = {
			["npcID"] = 153882,
		},
		[377435] = {
			["npcID"] = 187265,
		},
		[356001] = {
			["npcID"] = 177808,
		},
		[320170] = {
			["encounterName"] = "Amarth, The Harvester",
			["npcID"] = 162692,
			["encounterID"] = 2388,
		},
		[333479] = {
			["npcID"] = 163620,
		},
		[391833] = {
			["source"] = "Sherath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188710,
		},
		[368287] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[393881] = {
			["source"] = "Nezascar the Sightless",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196535,
		},
		[374430] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Tectonic Crusher",
			["npcID"] = 190588,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[330409] = {
			["npcID"] = 158420,
		},
		[335528] = {
			["npcID"] = 159755,
		},
		[250208] = {
			["npcID"] = 170122,
		},
		[354898] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[387740] = {
			["source"] = "Tyrhold Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192696,
		},
		[347814] = {
			["npcID"] = 176396,
		},
		[377503] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[397892] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[294491] = {
			["npcID"] = 186479,
		},
		[326227] = {
			["npcID"] = 157558,
		},
		[357029] = {
			["npcID"] = 180335,
		},
		[358053] = {
			["npcID"] = 180160,
		},
		[391837] = {
			["npcID"] = 191252,
		},
		[167240] = {
			["npcID"] = 83028,
		},
		[328365] = {
			["npcID"] = 167493,
		},
		[352842] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["source"] = "Ner'zhul",
			["encounterID"] = 1682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76407,
		},
		[343722] = {
			["npcID"] = 162965,
		},
		[336556] = {
			["npcID"] = 164897,
		},
		[358055] = {
			["npcID"] = 179254,
		},
		[338604] = {
			["npcID"] = 173066,
		},
		[376483] = {
			["source"] = "Charred Cinderling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187404,
		},
		[381602] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[256865] = {
			["npcID"] = 171303,
		},
		[391840] = {
			["source"] = "Taresh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188711,
		},
		[339629] = {
			["npcID"] = 173145,
		},
		[323149] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[345772] = {
			["npcID"] = 175579,
		},
		[383651] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[368295] = {
			["npcID"] = 183953,
		},
		[361027] = {
			["npcID"] = 181093,
		},
		[333488] = {
			["encounterName"] = "Amarth, The Harvester",
			["npcID"] = 163157,
			["encounterID"] = 2388,
		},
		[391842] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormfang Shaman",
			["npcID"] = 187552,
		},
		[348756] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[336560] = {
			["npcID"] = 180627,
		},
		[362154] = {
			["npcID"] = 182879,
		},
		[387748] = {
			["source"] = "Overseer Zambul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191145,
		},
		[352834] = {
			["npcID"] = 176959,
		},
		[356928] = {
			["npcID"] = 177131,
		},
		[329395] = {
			["npcID"] = 170044,
		},
		[395939] = {
			["source"] = "Clearwater Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192652,
		},
		[388773] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[164218] = {
			["npcID"] = 81407,
		},
		[329396] = {
			["npcID"] = 178287,
		},
		[346800] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166970,
		},
		[372394] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["npcID"] = 187768,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[162171] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77803,
		},
		[362157] = {
			["npcID"] = 182879,
		},
		[395941] = {
			["source"] = "Clearwater Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192652,
		},
		[323138] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[393894] = {
			["source"] = "Nezascar the Sightless",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196535,
		},
		[316993] = {
			["npcID"] = 167443,
		},
		[322232] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 164267,
		},
		[299588] = {
			["npcID"] = 150251,
		},
		[387629] = {
			["source"] = "Desecrated Ohuna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195876,
		},
		[353969] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[330423] = {
			["npcID"] = 168572,
		},
		[372397] = {
			["npcID"] = 190188,
		},
		[303678] = {
			["npcID"] = 155793,
		},
		[355887] = {
			["npcID"] = 177293,
		},
		[391849] = {
			["npcID"] = 186438,
		},
		[365126] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181548,
		},
		[340662] = {
			["npcID"] = 172078,
		},
		[304831] = {
			["npcID"] = 185100,
		},
		[192307] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95833,
		},
		[369193] = {
			["npcID"] = 191597,
		},
		[334509] = {
			["npcID"] = 177294,
		},
		[358067] = {
			["npcID"] = 178877,
		},
		[161150] = {
			["npcID"] = 80936,
		},
		[360115] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[389804] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[162617] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77816,
		},
		[395947] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197124,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[324146] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[329404] = {
			["npcID"] = 185123,
		},
		[327246] = {
			["npcID"] = 167524,
		},
		[198959] = {
			["source"] = "Valarjar Runecarver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96664,
		},
		[370212] = {
			["npcID"] = 190767,
		},
		[394912] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalus",
			["npcID"] = 193645,
		},
		[368163] = {
			["npcID"] = 178229,
		},
		[356023] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 179963,
		},
		[334377] = {
			["npcID"] = 171805,
		},
		[321216] = {
			["npcID"] = 172601,
		},
		[375475] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["npcID"] = 191222,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[340519] = {
			["npcID"] = 161857,
		},
		[396825] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[325312] = {
			["npcID"] = 177214,
		},
		[346811] = {
			["npcID"] = 177735,
		},
		[396975] = {
			["npcID"] = 195915,
		},
		[373429] = {
			["npcID"] = 189878,
		},
		[176502] = {
			["npcID"] = 83689,
		},
		[395952] = {
			["source"] = "Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197125,
		},
		[351931] = {
			["npcID"] = 176598,
		},
		[369335] = {
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184107,
		},
		[285232] = {
			["npcID"] = 150734,
		},
		[285388] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 145185,
		},
		[79825] = {
			["npcID"] = 41424,
		},
		[320196] = {
			["npcID"] = 175605,
		},
		[399025] = {
			["source"] = "Arcane Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200720,
		},
		[152964] = {
			["source"] = "Void Spawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75652,
		},
		[212773] = {
			["source"] = "Duskwatch Reinforcement",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107073,
		},
		[285228] = {
			["npcID"] = 150734,
		},
		[384531] = {
			["encounterName"] = "Gutshot",
			["source"] = "Rotfang Hyena",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194745,
		},
		[367290] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[315079] = {
			["npcID"] = 161388,
		},
		[324293] = {
			["npcID"] = 165919,
		},
		[366267] = {
			["npcID"] = 185008,
		},
		[82641] = {
			["npcID"] = 41272,
		},
		[229151] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["encounterID"] = 2017,
			["npcID"] = 114790,
		},
		[340674] = {
			["npcID"] = 165053,
		},
		[227615] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[359102] = {
			["npcID"] = 176533,
		},
		[356031] = {
			["npcID"] = 177816,
		},
		[320200] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[379406] = {
			["source"] = "Qalashi Lavabearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189472,
		},
		[330438] = {
			["npcID"] = 165976,
		},
		[315082] = {
			["npcID"] = 158259,
		},
		[395784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[386745] = {
			["npcID"] = 194884,
		},
		[334534] = {
			["npcID"] = 171805,
		},
		[363021] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183463,
		},
		[377532] = {
			["source"] = "Thunderspine Crasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191057,
		},
		[349891] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 177268,
			["encounterID"] = 2432,
		},
		[375485] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["npcID"] = 191230,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[351939] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177891,
			["encounterID"] = 2435,
		},
		[340678] = {
			["npcID"] = 172079,
		},
		[358082] = {
			["npcID"] = 179608,
		},
		[350916] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 179269,
		},
		[356035] = {
			["npcID"] = 179608,
		},
		[336584] = {
			["npcID"] = 164476,
		},
		[372226] = {
			["source"] = "Qalashi Bonetender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189265,
		},
		[331275] = {
			["npcID"] = 167533,
		},
		[346631] = {
			["npcID"] = 175930,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["npcID"] = 95887,
			["encounterID"] = 1817,
		},
		[274968] = {
			["npcID"] = 170414,
		},
		[334538] = {
			["npcID"] = 171422,
		},
		[385531] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[344776] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 175205,
		},
		[358085] = {
			["npcID"] = 179859,
		},
		[350919] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[336453] = {
			["npcID"] = 176002,
		},
		[338434] = {
			["npcID"] = 162875,
		},
		[346813] = {
			["npcID"] = 152905,
		},
		[275984] = {
			["npcID"] = 166936,
		},
		[326146] = {
			["npcID"] = 157558,
		},
		[320208] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 164578,
			["encounterID"] = 2389,
		},
		[267997] = {
			["npcID"] = 135816,
		},
		[60781] = {
			["npcID"] = 30205,
		},
		[366102] = {
			["npcID"] = 181011,
		},
		[356888] = {
			["npcID"] = 177813,
		},
		[366278] = {
			["npcID"] = 185032,
		},
		[334542] = {
			["npcID"] = 171422,
		},
		[388801] = {
			["source"] = "Risen Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195855,
		},
		[328400] = {
			["npcID"] = 164737,
		},
		[341709] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[300547] = {
			["npcID"] = 150142,
		},
		[396779] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[319997] = {
			["npcID"] = 164510,
		},
		[329425] = {
			["npcID"] = 157824,
		},
		[352756] = {
			["encounterName"] = "The Nine",
			["npcID"] = 178738,
			["encounterID"] = 2429,
		},
		[354801] = {
			["npcID"] = 179580,
		},
		[365257] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182071,
		},
		[337616] = {
			["npcID"] = 158989,
		},
		[358894] = {
			["npcID"] = 179892,
		},
		[388804] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[356843] = {
			["npcID"] = 179388,
		},
		[386757] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[323058] = {
			["npcID"] = 165609,
		},
		[346604] = {
			["npcID"] = 175792,
		},
		[279264] = {
			["npcID"] = 176434,
		},
		[394948] = {
			["npcID"] = 192344,
		},
		[346832] = {
			["npcID"] = 176262,
		},
		[153485] = {
			["source"] = "Carrion Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76057,
		},
		[332500] = {
			["npcID"] = 173582,
		},
		[300764] = {
			["npcID"] = 150165,
		},
		[387783] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windseeker Avash",
			["npcID"] = 192045,
		},
		[265721] = {
			["source"] = "Terrorachna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200349,
		},
		[310765] = {
			["npcID"] = 159677,
		},
		[341715] = {
			["encounterName"] = "Sludgefist",
			["source"] = "Countess Gloomveil",
			["encounterID"] = 2399,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 174162,
		},
		[300525] = {
			["npcID"] = 150142,
		},
		[384471] = {
			["npcID"] = 191672,
		},
		[376279] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[358096] = {
			["npcID"] = 177425,
		},
		[347610] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[331479] = {
			["npcID"] = 167923,
		},
		[319966] = {
			["npcID"] = 167078,
		},
		[366287] = {
			["npcID"] = 185032,
		},
		[342741] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 172858,
		},
		[360145] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181399,
			["encounterID"] = 2543,
		},
		[361169] = {
			["npcID"] = 182466,
		},
		[366288] = {
			["npcID"] = 184911,
		},
		[338637] = {
			["npcID"] = 185105,
		},
		[364241] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181546,
		},
		[167815] = {
			["npcID"] = 83390,
		},
		[334324] = {
			["npcID"] = 171376,
		},
		[383693] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[271841] = {
			["npcID"] = 157002,
		},
		[336601] = {
			["npcID"] = 164476,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[374215] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[319956] = {
			["npcID"] = 172217,
		},
		[167688] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 82721,
		},
		[333531] = {
			["npcID"] = 172210,
		},
		[322000] = {
			["npcID"] = 166357,
		},
		[178059] = {
			["npcID"] = 80491,
		},
		[328413] = {
			["npcID"] = 158473,
		},
		[329437] = {
			["npcID"] = 182791,
		},
		[376257] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["npcID"] = 191225,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[299475] = {
			["npcID"] = 150254,
		},
		[328414] = {
			["npcID"] = 159106,
		},
		[395707] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[361923] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 183138,
			["encounterID"] = 2543,
		},
		[178060] = {
			["npcID"] = 80491,
		},
		[369365] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[321249] = {
			["npcID"] = 162051,
		},
		[338653] = {
			["npcID"] = 173044,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[357081] = {
			["npcID"] = 176956,
		},
		[167683] = {
			["npcID"] = 83687,
		},
		[322274] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 164815,
			["encounterID"] = 2390,
		},
		[327393] = {
			["npcID"] = 163618,
		},
		[357082] = {
			["npcID"] = 178733,
		},
		[354011] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[165122] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80816,
		},
		[320966] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 162059,
			["encounterID"] = 2357,
		},
		[279278] = {
			["npcID"] = 152500,
		},
		[300777] = {
			["npcID"] = 150165,
		},
		[342751] = {
			["npcID"] = 171596,
		},
		[397010] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Honor Guard",
			["npcID"] = 197147,
		},
		[357084] = {
			["npcID"] = 180379,
		},
		[361913] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181398,
			["encounterID"] = 2543,
		},
		[395987] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jumping Spiderling",
			["npcID"] = 199182,
		},
		[397011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Honor Guard",
			["npcID"] = 197147,
		},
		[357085] = {
			["npcID"] = 176959,
		},
		[399059] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Electrified Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200943,
		},
		[387504] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[388822] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[357086] = {
			["npcID"] = 180392,
		},
		[353741] = {
			["npcID"] = 178958,
		},
		[294362] = {
			["npcID"] = 155908,
		},
		[358836] = {
			["npcID"] = 180664,
		},
		[357087] = {
			["npcID"] = 178731,
		},
		[399061] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[369072] = {
			["npcID"] = 181875,
		},
		[397014] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Emissary",
			["npcID"] = 197146,
		},
		[338358] = {
			["npcID"] = 165290,
		},
		[284402] = {
			["npcID"] = 144566,
		},
		[391896] = {
			["source"] = "Ruby Lifeguardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187101,
		},
		[387497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Time-Lost Destroyer",
			["npcID"] = 187244,
		},
		[381659] = {
			["npcID"] = 186962,
		},
		[366303] = {
			["npcID"] = 183927,
		},
		[334567] = {
			["npcID"] = 171448,
		},
		[345520] = {
			["npcID"] = 157833,
		},
		[256382] = {
			["npcID"] = 127807,
		},
		[359852] = {
			["npcID"] = 181981,
		},
		[169732] = {
			["npcID"] = 84877,
		},
		[360162] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[357091] = {
			["npcID"] = 178731,
		},
		[341735] = {
			["npcID"] = 174336,
		},
		[368062] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[387508] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Time-Lost Destroyer",
			["npcID"] = 187244,
		},
		[340712] = {
			["npcID"] = 162697,
		},
		[358116] = {
			["npcID"] = 180627,
		},
		[324323] = {
			["npcID"] = 165919,
		},
		[323309] = {
			["npcID"] = 177859,
		},
		[381663] = {
			["source"] = "Apex Blazewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193291,
		},
		[394972] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavabearer",
			["npcID"] = 197148,
		},
		[333227] = {
			["npcID"] = 169905,
		},
		[372129] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["npcID"] = 187967,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2592,
		},
		[328429] = {
			["npcID"] = 168022,
		},
		[198892] = {
			["source"] = "Storm Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97068,
		},
		[387481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinetooth Bruiser",
			["npcID"] = 187285,
		},
		[351976] = {
			["npcID"] = 176598,
		},
		[332525] = {
			["npcID"] = 171396,
		},
		[284409] = {
			["npcID"] = 144566,
		},
		[391903] = {
			["npcID"] = 186582,
		},
		[356072] = {
			["npcID"] = 177394,
		},
		[332526] = {
			["npcID"] = 171396,
		},
		[329455] = {
			["encounterName"] = "Hungering Destroyer",
			["encounterID"] = 2383,
			["npcID"] = 164261,
		},
		[330479] = {
			["npcID"] = 153382,
		},
		[396689] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[322281] = {
			["npcID"] = 156559,
		},
		[325361] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[355050] = {
			["npcID"] = 176535,
		},
		[161689] = {
			["source"] = "Lost Icehoof Calf",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80136,
		},
		[240006] = {
			["npcID"] = 182863,
		},
		[341742] = {
			["npcID"] = 174336,
		},
		[396001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Songbird Queen",
			["npcID"] = 59553,
		},
		[328094] = {
			["npcID"] = 168627,
		},
		[342425] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168113,
		},
		[345495] = {
			["npcID"] = 175519,
		},
		[355732] = {
			["npcID"] = 179446,
		},
		[372456] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[364942] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[349934] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[341395] = {
			["npcID"] = 174012,
		},
		[372107] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189232,
		},
		[346513] = {
			["npcID"] = 171581,
		},
		[172952] = {
			["npcID"] = 83026,
		},
		[326389] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[327413] = {
			["npcID"] = 168318,
		},
		[328437] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[170905] = {
			["npcID"] = 82201,
		},
		[355055] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[341390] = {
			["npcID"] = 174012,
		},
		[329104] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[341747] = {
			["npcID"] = 174158,
		},
		[346866] = {
			["npcID"] = 174175,
		},
		[331510] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 170838,
			["encounterID"] = 2391,
		},
		[340724] = {
			["npcID"] = 177217,
		},
		[228567] = {
			["npcID"] = 114794,
		},
		[396007] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Songbird Queen",
			["npcID"] = 59553,
		},
		[356081] = {
			["npcID"] = 177390,
		},
		[365295] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[356764] = {
			["npcID"] = 175697,
		},
		[391913] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnawbone Splintershield",
			["npcID"] = 197847,
		},
		[387453] = {
			["source"] = "Professor Maxdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[294290] = {
			["npcID"] = 144293,
		},
		[118905] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 61245,
			["encounterID"] = 2435,
		},
		[296355] = {
			["npcID"] = 152612,
		},
		[399065] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[152814] = {
			["source"] = "Shadowmoon Bone-Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75713,
		},
		[377204] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[391915] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cragsworn Stoneshaper",
			["npcID"] = 191661,
		},
		[384365] = {
			["source"] = "Nokhud Lancemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192800,
		},
		[365298] = {
			["npcID"] = 184539,
		},
		[324987] = {
			["npcID"] = 166301,
		},
		[355057] = {
			["npcID"] = 178139,
		},
		[346484] = {
			["npcID"] = 173580,
		},
		[365299] = {
			["npcID"] = 184539,
		},
		[346483] = {
			["npcID"] = 173580,
		},
		[355062] = {
			["npcID"] = 178623,
		},
		[339706] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 173549,
			["encounterID"] = 2404,
		},
		[389870] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["npcID"] = 197145,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[228239] = {
			["npcID"] = 114627,
		},
		[355063] = {
			["npcID"] = 178623,
		},
		[176025] = {
			["npcID"] = 88163,
		},
		[381681] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rustpine Immolator",
			["npcID"] = 187396,
		},
		[376171] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[326399] = {
			["npcID"] = 155251,
		},
		[356088] = {
			["npcID"] = 177984,
		},
		[357112] = {
			["npcID"] = 177831,
		},
		[386801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cragsworn Stoneshaper",
			["npcID"] = 191661,
		},
		[392539] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Awakened Terrasentry",
			["npcID"] = 197801,
		},
		[154839] = {
			["npcID"] = 84110,
		},
		[381683] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[390897] = {
			["source"] = "Scalepiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186632,
		},
		[338686] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 173163,
		},
		[360185] = {
			["npcID"] = 181879,
		},
		[361209] = {
			["npcID"] = 182466,
		},
		[382708] = {
			["source"] = "Qalashi Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193293,
		},
		[393559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gethrel the South Wind",
			["npcID"] = 193848,
		},
		[350564] = {
			["npcID"] = 177114,
		},
		[357115] = {
			["npcID"] = 177915,
		},
		[316779] = {
			["npcID"] = 178043,
		},
		[396018] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Crybaby Hozen",
			["npcID"] = 59552,
		},
		[330496] = {
			["npcID"] = 155250,
		},
		[354653] = {
			["npcID"] = 179560,
		},
		[183197] = {
			["npcID"] = 155221,
		},
		[396019] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Golden Beetle",
			["npcID"] = 59545,
		},
		[397043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[387411] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195927,
		},
		[385363] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lounging Mudstomper",
			["npcID"] = 192594,
		},
		[396020] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Golden Beetle",
			["npcID"] = 59545,
		},
		[368379] = {
			["npcID"] = 183516,
		},
		[340738] = {
			["npcID"] = 167848,
		},
		[382712] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wilted Oak",
			["npcID"] = 186229,
		},
		[310026] = {
			["npcID"] = 166159,
		},
		[176032] = {
			["npcID"] = 88163,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[372047] = {
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187897,
		},
		[355072] = {
			["npcID"] = 178628,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[332550] = {
			["npcID"] = 169875,
		},
		[349954] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[396023] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["npcID"] = 184972,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2587,
		},
		[196508] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99657,
			["encounterID"] = 1850,
		},
		[335187] = {
			["npcID"] = 177645,
		},
		[355070] = {
			["npcID"] = 178625,
		},
		[326409] = {
			["npcID"] = 164557,
		},
		[397048] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frostbreath Arachnid",
			["npcID"] = 199333,
		},
		[394563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Death's Shadow",
			["npcID"] = 190985,
		},
		[325386] = {
			["npcID"] = 167115,
		},
		[340304] = {
			["npcID"] = 173720,
		},
		[356099] = {
			["npcID"] = 177395,
		},
		[295698] = {
			["npcID"] = 154041,
		},
		[389443] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[224953] = {
			["npcID"] = 163662,
		},
		[392955] = {
			["npcID"] = 183422,
		},
		[357124] = {
			["npcID"] = 180780,
		},
		[300818] = {
			["npcID"] = 150195,
		},
		[394558] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Flame",
			["npcID"] = 198577,
		},
		[397051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cyclas",
			["npcID"] = 199029,
		},
		[357125] = {
			["npcID"] = 176879,
		},
		[359747] = {
			["npcID"] = 181453,
		},
		[193951] = {
			["npcID"] = 97677,
		},
		[392957] = {
			["npcID"] = 190216,
		},
		[340746] = {
			["npcID"] = 167848,
		},
		[173762] = {
			["npcID"] = 155216,
		},
		[342794] = {
			["npcID"] = 174336,
		},
		[388863] = {
			["source"] = "Corrupted Manafiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196045,
		},
		[328462] = {
			["npcID"] = 168845,
		},
		[160680] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79548,
		},
		[350541] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[320838] = {
			["npcID"] = 160356,
		},
		[357128] = {
			["npcID"] = 176879,
		},
		[390912] = {
			["source"] = "Vile Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197219,
		},
		[356680] = {
			["npcID"] = 177133,
		},
		[196512] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["npcID"] = 95674,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1807,
		},
		[73958] = {
			["npcID"] = 39464,
		},
		[374533] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[310037] = {
			["npcID"] = 166159,
		},
		[372486] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Waste Water Elemental",
			["npcID"] = 187497,
		},
		[340750] = {
			["npcID"] = 167548,
		},
		[396600] = {
			["npcID"] = 192759,
		},
		[387843] = {
			["source"] = "Spectral Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196202,
		},
		[323347] = {
			["npcID"] = 165137,
		},
		[381701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Augmented Flood",
			["npcID"] = 192457,
		},
		[341775] = {
			["npcID"] = 167528,
		},
		[172736] = {
			["npcID"] = 79230,
		},
		[227736] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114312,
		},
		[130265] = {
			["npcID"] = 66291,
		},
		[390916] = {
			["source"] = "Melkhop",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193311,
		},
		[273185] = {
			["npcID"] = 150251,
		},
		[373034] = {
			["npcID"] = 186690,
		},
		[291613] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[59638] = {
			["npcID"] = 31216,
		},
		[173480] = {
			["npcID"] = 83389,
		},
		[375079] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Squallbringer Cyraz",
			["npcID"] = 190370,
		},
		[377609] = {
			["npcID"] = 185594,
		},
		[290106] = {
			["npcID"] = 144570,
		},
		[22883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Novice Timewalker",
			["npcID"] = 189583,
		},
		[352016] = {
			["npcID"] = 176578,
		},
		[361230] = {
			["npcID"] = 182561,
		},
		[325399] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2405,
			["npcID"] = 166644,
		},
		[283422] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 145185,
		},
		[227493] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[68841] = {
			["npcID"] = 36272,
		},
		[331048] = {
			["npcID"] = 170932,
		},
		[387849] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[331543] = {
			["npcID"] = 170196,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[288546] = {
			["npcID"] = 170495,
		},
		[355090] = {
			["npcID"] = 178628,
		},
		[365850] = {
			["npcID"] = 181652,
		},
		[369423] = {
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184303,
		},
		[272167] = {
			["npcID"] = 136404,
		},
		[396041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cracked Concretion",
			["npcID"] = 197074,
		},
		[372495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muck Elemental",
			["npcID"] = 187498,
		},
		[340759] = {
			["npcID"] = 169889,
		},
		[288548] = {
			["npcID"] = 170495,
		},
		[394512] = {
			["source"] = "Void Spawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75652,
		},
		[396559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth",
			["npcID"] = 199031,
		},
		[328475] = {
			["npcID"] = 164737,
		},
		[228254] = {
			["npcID"] = 114626,
		},
		[391948] = {
			["source"] = "Steam Coalescence",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190110,
		},
		[297254] = {
			["encounterName"] = "King Gobbamak",
			["encounterID"] = 2290,
			["npcID"] = 150159,
		},
		[336666] = {
			["npcID"] = 166012,
		},
		[389898] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196992,
		},
		[396044] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[331548] = {
			["npcID"] = 167964,
		},
		[294180] = {
			["npcID"] = 151773,
		},
		[390926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Barker",
			["npcID"] = 194515,
		},
		[293670] = {
			["npcID"] = 144299,
		},
		[332569] = {
			["npcID"] = 156559,
		},
		[357143] = {
			["npcID"] = 178646,
		},
		[347414] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[350482] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[331550] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 170197,
		},
		[340764] = {
			["npcID"] = 173864,
		},
		[191401] = {
			["source"] = "Valarjar Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96640,
		},
		[335129] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[319266] = {
			["npcID"] = 165747,
		},
		[320787] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[364808] = {
			["npcID"] = 181145,
		},
		[318243] = {
			["npcID"] = 166357,
		},
		[388882] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[357146] = {
			["npcID"] = 177938,
		},
		[341790] = {
			["npcID"] = 167528,
		},
		[29120] = {
			["npcID"] = 18147,
		},
		[356123] = {
			["npcID"] = 177395,
		},
		[385812] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 192934,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[294171] = {
			["npcID"] = 150959,
		},
		[375575] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["npcID"] = 191230,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[153524] = {
			["source"] = "Plagued Bat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75459,
		},
		[320293] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164461,
			["encounterID"] = 2391,
		},
		[333602] = {
			["npcID"] = 163126,
		},
		[379134] = {
			["npcID"] = 187172,
		},
		[353540] = {
			["npcID"] = 179152,
		},
		[343302] = {
			["npcID"] = 173446,
		},
		[296748] = {
			["npcID"] = 152875,
		},
		[330532] = {
			["npcID"] = 164510,
		},
		[327461] = {
			["npcID"] = 153165,
		},
		[191132] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "God-King Skovald",
			["npcID"] = 92307,
		},
		[363772] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[391958] = {
			["npcID"] = 194159,
		},
		[320771] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["npcID"] = 162693,
			["encounterID"] = 2390,
		},
		[300296] = {
			["npcID"] = 150143,
		},
		[354080] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[391959] = {
			["npcID"] = 195846,
		},
		[279564] = {
			["npcID"] = 167826,
		},
		[350453] = {
			["npcID"] = 179894,
		},
		[341796] = {
			["npcID"] = 165066,
		},
		[375580] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[29579] = {
			["npcID"] = 114625,
		},
		[338868] = {
			["npcID"] = 167526,
		},
		[349987] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[326441] = {
			["npcID"] = 164557,
		},
		[319275] = {
			["npcID"] = 159601,
		},
		[324394] = {
			["npcID"] = 165197,
		},
		[325418] = {
			["npcID"] = 167113,
		},
		[324427] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[200205] = {
			["npcID"] = 101462,
		},
		[320300] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164461,
			["encounterID"] = 2391,
		},
		[382749] = {
			["npcID"] = 187111,
		},
		[359203] = {
			["npcID"] = 184059,
		},
		[327467] = {
			["npcID"] = 153165,
		},
		[319733] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[362275] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[364778] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[356133] = {
			["npcID"] = 180015,
		},
		[369442] = {
			["source"] = "Maddened Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190032,
		},
		[317231] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[318255] = {
			["npcID"] = 163575,
		},
		[360229] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181399,
			["encounterID"] = 2543,
		},
		[162231] = {
			["npcID"] = 80071,
		},
		[333612] = {
			["npcID"] = 168374,
		},
		[332717] = {
			["npcID"] = 162614,
		},
		[319685] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[303924] = {
			["npcID"] = 155911,
		},
		[329518] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[336868] = {
			["npcID"] = 184606,
		},
		[365707] = {
			["npcID"] = 183429,
		},
		[344875] = {
			["npcID"] = 171317,
		},
		[366374] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[188046] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 198489,
		},
		[388897] = {
			["source"] = "Scavenging Pincher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200949,
		},
		[330676] = {
			["npcID"] = 168862,
		},
		[172982] = {
			["npcID"] = 83026,
		},
		[330965] = {
			["encounterName"] = "The Council of Blood",
			["encounterID"] = 2412,
			["npcID"] = 166971,
		},
		[351075] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177154,
			["encounterID"] = 2435,
		},
		[385827] = {
			["source"] = "Rageclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187192,
		},
		[347151] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[326450] = {
			["npcID"] = 164562,
		},
		[356139] = {
			["npcID"] = 178043,
		},
		[205231] = {
			["npcID"] = 103673,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[375591] = {
			["source"] = "Bubbling Sapling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191313,
		},
		[364330] = {
			["npcID"] = 184737,
		},
		[348974] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 175725,
		},
		[354223] = {
			["npcID"] = 177514,
		},
		[330597] = {
			["npcID"] = 177418,
		},
		[319286] = {
			["npcID"] = 164084,
		},
		[341143] = {
			["npcID"] = 164476,
		},
		[374569] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Decay",
			["npcID"] = 186227,
		},
		[355118] = {
			["npcID"] = 178133,
		},
		[389327] = {
			["npcID"] = 188141,
		},
		[308026] = {
			["npcID"] = 157634,
		},
		[176267] = {
			["npcID"] = 88224,
		},
		[396069] = {
			["npcID"] = 187090,
		},
		[331573] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["encounterID"] = 2406,
			["npcID"] = 170199,
		},
		[385832] = {
			["source"] = "Rageclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187192,
		},
		[355540] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[326455] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165805,
		},
		[331574] = {
			["npcID"] = 170217,
		},
		[316218] = {
			["npcID"] = 178056,
		},
		[350002] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[396071] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197142,
		},
		[357586] = {
			["npcID"] = 178653,
		},
		[373549] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grimy Skimmer",
			["npcID"] = 189614,
		},
		[241784] = {
			["npcID"] = 114629,
		},
		[359629] = {
			["npcID"] = 181359,
		},
		[327481] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 162059,
			["encounterID"] = 2357,
		},
		[327891] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 169506,
			["encounterID"] = 2396,
		},
		[228269] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[355123] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[326829] = {
			["npcID"] = 167876,
		},
		[168380] = {
			["npcID"] = 84201,
		},
		[194611] = {
			["npcID"] = 98926,
		},
		[343069] = {
			["npcID"] = 178478,
		},
		[339768] = {
			["npcID"] = 166012,
		},
		[357172] = {
			["npcID"] = 178575,
		},
		[224375] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[396075] = {
			["source"] = "Raging Torrent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197221,
		},
		[372529] = {
			["npcID"] = 183343,
		},
		[168381] = {
			["npcID"] = 84201,
		},
		[197558] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[330953] = {
			["npcID"] = 161531,
		},
		[397100] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmas",
			["npcID"] = 199027,
		},
		[224374] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[303308] = {
			["source"] = "Primalist Infuser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186112,
		},
		[355127] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[388911] = {
			["source"] = "Spellbound Battleaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196577,
		},
		[365365] = {
			["npcID"] = 184603,
		},
		[333629] = {
			["encounterName"] = "Amarth, The Harvester",
			["npcID"] = 168246,
			["encounterID"] = 2388,
		},
		[334653] = {
			["npcID"] = 165076,
		},
		[359222] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180158,
		},
		[340796] = {
			["npcID"] = 166139,
		},
		[325440] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165764,
		},
		[326464] = {
			["npcID"] = 164036,
		},
		[323393] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[324417] = {
			["npcID"] = 162133,
		},
		[386866] = {
			["source"] = "Gorging Stagbeetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195709,
		},
		[322370] = {
			["npcID"] = 157054,
		},
		[326848] = {
			["npcID"] = 163992,
		},
		[332608] = {
			["npcID"] = 170572,
		},
		[228273] = {
			["npcID"] = 114637,
		},
		[367798] = {
			["npcID"] = 181249,
		},
		[335680] = {
			["npcID"] = 157807,
		},
		[340799] = {
			["npcID"] = 166139,
		},
		[378029] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[355132] = {
			["npcID"] = 178141,
		},
		[339776] = {
			["npcID"] = 173568,
		},
		[332610] = {
			["npcID"] = 156333,
		},
		[321349] = {
			["npcID"] = 164857,
		},
		[339122] = {
			["npcID"] = 167525,
		},
		[329908] = {
			["npcID"] = 157017,
		},
		[180670] = {
			["npcID"] = 90215,
		},
		[358205] = {
			["npcID"] = 178862,
		},
		[177599] = {
			["npcID"] = 88224,
		},
		[384823] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[332612] = {
			["npcID"] = 170572,
		},
		[395061] = {
			["npcID"] = 193443,
		},
		[330565] = {
			["npcID"] = 164506,
		},
		[79858] = {
			["npcID"] = 155283,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["npcID"] = 189492,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2607,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["npcID"] = 56732,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1416,
		},
		[366759] = {
			["npcID"] = 183498,
		},
		[397110] = {
			["npcID"] = 187843,
		},
		[396447] = {
			["source"] = "Apex Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192717,
		},
		[341828] = {
			["npcID"] = 172637,
		},
		[346947] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[326830] = {
			["npcID"] = 163316,
		},
		[324425] = {
			["npcID"] = 177211,
		},
		[354114] = {
			["npcID"] = 179234,
		},
		[359233] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 181047,
		},
		[397112] = {
			["npcID"] = 189798,
		},
		[377661] = {
			["npcID"] = 190216,
		},
		[228277] = {
			["npcID"] = 114634,
		},
		[351044] = {
			["npcID"] = 177797,
		},
		[388923] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2563,
		},
		[389947] = {
			["npcID"] = 190932,
		},
		[333641] = {
			["npcID"] = 169905,
		},
		[351045] = {
			["npcID"] = 177797,
		},
		[326824] = {
			["encounterName"] = "Sire Denathrius",
			["encounterID"] = 2407,
			["npcID"] = 167999,
		},
		[357188] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[354117] = {
			["npcID"] = 179234,
		},
		[359236] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[373912] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[389949] = {
			["npcID"] = 187299,
		},
		[362308] = {
			["npcID"] = 185755,
		},
		[351047] = {
			["npcID"] = 178392,
		},
		[210875] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96574,
		},
		[394045] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vadne Bleakheart",
			["npcID"] = 195764,
		},
		[162759] = {
			["npcID"] = 85131,
		},
		[367428] = {
			["npcID"] = 184962,
		},
		[79860] = {
			["npcID"] = 155283,
		},
		[320336] = {
			["npcID"] = 163126,
		},
		[358215] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177787,
			["encounterID"] = 2435,
		},
		[330574] = {
			["npcID"] = 179755,
		},
		[378003] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[357192] = {
			["npcID"] = 178576,
		},
		[284506] = {
			["npcID"] = 144566,
		},
		[359235] = {
			["npcID"] = 180906,
		},
		[335694] = {
			["npcID"] = 177360,
		},
		[305136] = {
			["npcID"] = 156212,
		},
		[382787] = {
			["source"] = "Disease Slasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187315,
		},
		[342168] = {
			["npcID"] = 156331,
		},
		[345237] = {
			["npcID"] = 165124,
		},
		[316244] = {
			["npcID"] = 162056,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[346957] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175667,
			["encounterID"] = 2426,
		},
		[176070] = {
			["npcID"] = 173114,
		},
		[381765] = {
			["npcID"] = 194798,
		},
		[366409] = {
			["npcID"] = 184908,
		},
		[342863] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[345232] = {
			["npcID"] = 168693,
		},
		[357196] = {
			["npcID"] = 180336,
		},
		[339789] = {
			["npcID"] = 166046,
		},
		[330919] = {
			["npcID"] = 169912,
		},
		[372553] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hyena Matriarch",
			["npcID"] = 187566,
		},
		[385862] = {
			["npcID"] = 195218,
		},
		[345936] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[387910] = {
			["source"] = "Algeth'ar Echoknight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196200,
		},
		[298844] = {
			["npcID"] = 153885,
		},
		[328533] = {
			["npcID"] = 163862,
		},
		[321367] = {
			["npcID"] = 156562,
		},
		[392006] = {
			["npcID"] = 186668,
		},
		[360270] = {
			["npcID"] = 181625,
		},
		[352390] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 179334,
		},
		[354128] = {
			["npcID"] = 178949,
		},
		[351057] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[393031] = {
			["npcID"] = 186672,
		},
		[381770] = {
			["encounterName"] = "Treemouth",
			["source"] = "Decaying Slime",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192481,
		},
		[390984] = {
			["source"] = "Custodial Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192694,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[372557] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hyena Matriarch",
			["npcID"] = 187566,
		},
		[199772] = {
			["source"] = "Valarjar Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97087,
		},
		[395080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enkine the Voracious",
			["npcID"] = 193134,
		},
		[342869] = {
			["npcID"] = 168934,
		},
		[343893] = {
			["npcID"] = 162829,
		},
		[385145] = {
			["npcID"] = 187256,
		},
		[358226] = {
			["npcID"] = 176949,
		},
		[375630] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["npcID"] = 191232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[298849] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[357203] = {
			["npcID"] = 178056,
		},
		[358227] = {
			["npcID"] = 176959,
		},
		[330586] = {
			["npcID"] = 169927,
		},
		[327515] = {
			["npcID"] = 168361,
		},
		[398154] = {
			["source"] = "Defiled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75451,
		},
		[390988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalus",
			["npcID"] = 193645,
		},
		[396107] = {
			["source"] = "Shadeslash Trakken",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193271,
		},
		[339801] = {
			["npcID"] = 166046,
		},
		[394060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Productive Pollinator",
			["npcID"] = 193809,
		},
		[325469] = {
			["npcID"] = 166928,
		},
		[383823] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192796,
		},
		[388942] = {
			["source"] = "Arcane Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196671,
		},
		[396400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glacias",
			["npcID"] = 199028,
		},
		[337755] = {
			["npcID"] = 163213,
		},
		[369806] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Hulking Berserker",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[394348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mordigan Ironjaw",
			["npcID"] = 187353,
		},
		[324447] = {
			["npcID"] = 177211,
		},
		[320637] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 162691,
			["encounterID"] = 2387,
		},
		[342875] = {
			["npcID"] = 166981,
		},
		[397134] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["npcID"] = 187772,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2590,
		},
		[167516] = {
			["npcID"] = 86809,
		},
		[341852] = {
			["npcID"] = 173832,
		},
		[351066] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[373869] = {
			["source"] = "Scorchling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190205,
		},
		[361304] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 183421,
		},
		[372862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Churning Splash",
			["npcID"] = 187318,
		},
		[346972] = {
			["npcID"] = 169605,
		},
		[372566] = {
			["source"] = "Qalashi Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189227,
		},
		[365400] = {
			["npcID"] = 184413,
		},
		[317284] = {
			["npcID"] = 162880,
		},
		[330593] = {
			["npcID"] = 168724,
		},
		[330868] = {
			["npcID"] = 160495,
		},
		[176727] = {
			["npcID"] = 83812,
		},
		[301177] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[297834] = {
			["encounterName"] = "Gunker",
			["encounterID"] = 2292,
			["npcID"] = 150222,
		},
		[374885] = {
			["source"] = "Astral Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189555,
		},
		[329838] = {
			["npcID"] = 159027,
		},
		[358236] = {
			["npcID"] = 178856,
		},
		[297835] = {
			["encounterName"] = "Gunker",
			["encounterID"] = 2292,
			["npcID"] = 150222,
		},
		[360284] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181399,
			["encounterID"] = 2543,
		},
		[320358] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[354142] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[355166] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 177289,
			["encounterID"] = 2432,
		},
		[393045] = {
			["npcID"] = 186672,
		},
		[227779] = {
			["encounterName"] = "Shade of Medivh",
			["encounterID"] = 1965,
			["npcID"] = 114350,
		},
		[358238] = {
			["npcID"] = 178851,
		},
		[318312] = {
			["npcID"] = 166426,
		},
		[393305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Earthwarden",
			["npcID"] = 193709,
		},
		[361568] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181546,
		},
		[358239] = {
			["npcID"] = 178851,
		},
		[351073] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[388952] = {
			["source"] = "Ravenous Riversnapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192684,
		},
		[332646] = {
			["npcID"] = 162872,
		},
		[365682] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 184140,
		},
		[360538] = {
			["npcID"] = 182120,
		},
		[291946] = {
			["encounterName"] = "K.U.-J.0.",
			["encounterID"] = 2258,
			["npcID"] = 144246,
		},
		[357217] = {
			["npcID"] = 180415,
		},
		[334942] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165067,
		},
		[346980] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[321633] = {
			["npcID"] = 171562,
		},
		[211401] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[374622] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Thundering Ravager",
			["npcID"] = 190690,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[371551] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormfang Dustcaller",
			["npcID"] = 187551,
		},
		[335720] = {
			["npcID"] = 155812,
		},
		[357219] = {
			["npcID"] = 176957,
		},
		[374623] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frozen Destroyer",
			["npcID"] = 190686,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[358232] = {
			["npcID"] = 180104,
		},
		[364386] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182823,
		},
		[332650] = {
			["npcID"] = 161857,
		},
		[374624] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frozen Destroyer",
			["npcID"] = 190686,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[320631] = {
			["encounterName"] = "Blightbone",
			["npcID"] = 164702,
			["encounterID"] = 2387,
		},
		[323437] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[344936] = {
			["npcID"] = 168975,
		},
		[341865] = {
			["npcID"] = 174194,
		},
		[330604] = {
			["npcID"] = 168724,
		},
		[323438] = {
			["npcID"] = 166073,
		},
		[227783] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114260,
		},
		[391006] = {
			["source"] = "Blisterhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197353,
		},
		[346985] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[328791] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[328558] = {
			["npcID"] = 159027,
		},
		[341867] = {
			["npcID"] = 165469,
		},
		[340073] = {
			["npcID"] = 168697,
		},
		[360295] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[364616] = {
			["npcID"] = 183596,
		},
		[350283] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 177094,
		},
		[375652] = {
			["source"] = "Arcane Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196115,
		},
		[343916] = {
			["npcID"] = 169102,
		},
		[194112] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[352355] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[375653] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["npcID"] = 191232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[214988] = {
			["npcID"] = 100364,
		},
		[357226] = {
			["npcID"] = 180429,
		},
		[389179] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[365632] = {
			["npcID"] = 184742,
		},
		[384868] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[334918] = {
			["npcID"] = 162047,
		},
		[198715] = {
			["npcID"] = 100876,
		},
		[338800] = {
			["npcID"] = 173202,
		},
		[214989] = {
			["npcID"] = 100364,
		},
		[211406] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[328772] = {
			["npcID"] = 159460,
		},
		[383846] = {
			["npcID"] = 188667,
		},
		[360300] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181398,
			["encounterID"] = 2543,
		},
		[361324] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[393265] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tombcaller Ganzaya",
			["npcID"] = 188509,
		},
		[338802] = {
			["npcID"] = 173202,
		},
		[356206] = {
			["npcID"] = 177372,
		},
		[386096] = {
			["npcID"] = 183954,
		},
		[358254] = {
			["npcID"] = 178002,
		},
		[342898] = {
			["npcID"] = 162123,
		},
		[356207] = {
			["npcID"] = 177372,
		},
		[320376] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 164578,
			["encounterID"] = 2389,
		},
		[396330] = {
			["source"] = "Nokhud Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185357,
		},
		[330614] = {
			["npcID"] = 163086,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[357232] = {
			["npcID"] = 179108,
		},
		[378731] = {
			["npcID"] = 189217,
		},
		[351090] = {
			["npcID"] = 176574,
		},
		[360304] = {
			["encounterName"] = "Lords of Dread",
			["npcID"] = 181399,
			["encounterID"] = 2543,
		},
		[340018] = {
			["npcID"] = 172523,
		},
		[395112] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enkine the Voracious",
			["npcID"] = 193134,
		},
		[351091] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177787,
			["encounterID"] = 2435,
		},
		[340016] = {
			["npcID"] = 171184,
		},
		[227789] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[325498] = {
			["npcID"] = 157212,
		},
		[359282] = {
			["npcID"] = 185415,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[362565] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[391019] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[366629] = {
			["npcID"] = 185155,
		},
		[354367] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[365426] = {
			["npcID"] = 184413,
		},
		[337785] = {
			["npcID"] = 171160,
		},
		[322429] = {
			["npcID"] = 162057,
		},
		[391195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[396313] = {
			["source"] = "Entropic Diruption",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201598,
		},
		[350071] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 177117,
			["encounterID"] = 2432,
		},
		[387950] = {
			["npcID"] = 195160,
		},
		[348024] = {
			["npcID"] = 176520,
		},
		[357238] = {
			["npcID"] = 180429,
		},
		[377912] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[351096] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[79872] = {
			["npcID"] = 177586,
		},
		[357239] = {
			["npcID"] = 180407,
		},
		[332836] = {
			["npcID"] = 169927,
		},
		[368662] = {
			["npcID"] = 180015,
		},
		[388976] = {
			["source"] = "Arcane Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196671,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[296839] = {
			["npcID"] = 152898,
		},
		[322433] = {
			["npcID"] = 162057,
		},
		[327552] = {
			["npcID"] = 168573,
		},
		[332671] = {
			["npcID"] = 170480,
		},
		[395273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Stormsentry",
			["npcID"] = 196856,
		},
		[173098] = {
			["npcID"] = 78638,
		},
		[164907] = {
			["source"] = "Reanimated Ritual Bones",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75715,
		},
		[330793] = {
			["npcID"] = 179911,
		},
		[325506] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165764,
		},
		[387955] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Ethereal Restorer",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196203,
		},
		[390150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[357243] = {
			["npcID"] = 180433,
		},
		[272272] = {
			["npcID"] = 161692,
		},
		[342911] = {
			["npcID"] = 162123,
		},
		[372600] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[347149] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[301088] = {
			["npcID"] = 151657,
		},
		[339975] = {
			["npcID"] = 173609,
		},
		[357245] = {
			["npcID"] = 180407,
		},
		[168929] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["encounterID"] = 1754,
			["npcID"] = 83612,
		},
		[367481] = {
			["source"] = "Claw Fighter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185508,
		},
		[338959] = {
			["npcID"] = 168697,
		},
		[387083] = {
			["npcID"] = 187264,
		},
		[189469] = {
			["npcID"] = 100364,
		},
		[383864] = {
			["npcID"] = 192274,
		},
		[343040] = {
			["npcID"] = 165869,
		},
		[394102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terillod the Devout",
			["npcID"] = 193171,
		},
		[358271] = {
			["npcID"] = 179914,
		},
		[387960] = {
			["npcID"] = 195160,
		},
		[393079] = {
			["npcID"] = 188180,
		},
		[361343] = {
			["npcID"] = 178963,
		},
		[183263] = {
			["npcID"] = 155219,
		},
		[330631] = {
			["npcID"] = 180013,
		},
		[360320] = {
			["npcID"] = 181942,
		},
		[396269] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[329608] = {
			["npcID"] = 155828,
		},
		[347094] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[319371] = {
			["npcID"] = 163512,
		},
		[324490] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[329609] = {
			["npcID"] = 155828,
		},
		[295939] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["encounterID"] = 2291,
			["npcID"] = 150190,
		},
		[298897] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 150712,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[341895] = {
			["npcID"] = 168647,
		},
		[371584] = {
			["npcID"] = 191318,
		},
		[298898] = {
			["encounterName"] = "Trixie & Naeno",
			["encounterID"] = 2312,
			["npcID"] = 153755,
		},
		[395240] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enkine the Voracious",
			["npcID"] = 193134,
		},
		[350086] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176705,
		},
		[387965] = {
			["npcID"] = 187232,
		},
		[368514] = {
			["npcID"] = 183764,
		},
		[332683] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 169835,
		},
		[387045] = {
			["source"] = "Ezrigeth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187666,
		},
		[363396] = {
			["npcID"] = 181572,
		},
		[331689] = {
			["npcID"] = 165181,
		},
		[340975] = {
			["npcID"] = 163363,
		},
		[330699] = {
			["npcID"] = 170932,
		},
		[383872] = {
			["npcID"] = 188667,
		},
		[376706] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["npcID"] = 190294,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[366566] = {
			["npcID"] = 184910,
		},
		[364488] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[227809] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[334792] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165066,
		},
		[373636] = {
			["npcID"] = 192949,
		},
		[293861] = {
			["npcID"] = 151613,
		},
		[396159] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Burster",
			["npcID"] = 186836,
		},
		[341969] = {
			["npcID"] = 174210,
		},
		[377732] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Refti Custodian",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184319,
		},
		[372683] = {
			["source"] = "Infused Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187894,
		},
		[363400] = {
			["npcID"] = 178158,
		},
		[384899] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[329703] = {
			["npcID"] = 159106,
		},
		[341902] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 174197,
			["encounterID"] = 2391,
		},
		[367496] = {
			["npcID"] = 185537,
		},
		[372615] = {
			["source"] = "Tamed Phoenix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189247,
		},
		[394114] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "S.A.V.I.O.R.",
			["npcID"] = 195328,
		},
		[325523] = {
			["npcID"] = 165515,
		},
		[375687] = {
			["source"] = "Decay Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190426,
		},
		[364426] = {
			["npcID"] = 180088,
		},
		[357260] = {
			["npcID"] = 180431,
		},
		[329619] = {
			["npcID"] = 185123,
		},
		[378827] = {
			["source"] = "Qalashi Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192786,
		},
		[368522] = {
			["npcID"] = 183764,
		},
		[283551] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[378835] = {
			["npcID"] = 186362,
		},
		[351119] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177716,
			["encounterID"] = 2442,
		},
		[385950] = {
			["npcID"] = 195314,
		},
		[331743] = {
			["npcID"] = 166276,
		},
		[330711] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[367500] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[364429] = {
			["npcID"] = 180085,
		},
		[163334] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80808,
		},
		[330716] = {
			["npcID"] = 167998,
		},
		[342931] = {
			["npcID"] = 169410,
		},
		[333787] = {
			["npcID"] = 168934,
		},
		[381834] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[396180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Burster",
			["npcID"] = 186836,
		},
		[367502] = {
			["npcID"] = 181059,
		},
		[270246] = {
			["npcID"] = 154128,
		},
		[356260] = {
			["npcID"] = 179388,
		},
		[386991] = {
			["npcID"] = 184869,
		},
		[359313] = {
			["npcID"] = 185759,
		},
		[270248] = {
			["npcID"] = 154129,
		},
		[166380] = {
			["npcID"] = 82597,
		},
		[391050] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[351124] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[368528] = {
			["npcID"] = 183764,
		},
		[209378] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[346006] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[367505] = {
			["npcID"] = 181059,
		},
		[368529] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[365458] = {
			["npcID"] = 184651,
		},
		[395196] = {
			["npcID"] = 185883,
		},
		[342936] = {
			["npcID"] = 173387,
		},
		[360340] = {
			["npcID"] = 182425,
		},
		[392111] = {
			["source"] = "Shiverweb Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185814,
		},
		[354198] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[334747] = {
			["npcID"] = 166302,
		},
		[327581] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 168396,
		},
		[388000] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bertinuat",
			["npcID"] = 196288,
		},
		[388002] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bertinuat",
			["npcID"] = 196288,
		},
		[334748] = {
			["npcID"] = 166302,
		},
		[396189] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197129,
		},
		[344986] = {
			["npcID"] = 158314,
		},
		[362390] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[355224] = {
			["npcID"] = 151818,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[373678] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[203750] = {
			["source"] = "Arcane Chronomaton",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111622,
		},
		[392098] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
	},
	["profileKeys"] = {
		["Atrocitys - Illidan"] = "AtrocityUI",
		["Atrocitysix - Illidan"] = "AtrocityUI",
		["Atrocityjr - Illidan"] = "AtrocityUI",
		["Atrocitymagi - Illidan"] = "AtrocityUI",
		["Atrocityr - Illidan"] = "AtrocityUI",
		["Atrocityxe - US Mythic Dungeons"] = "AtrocityUI",
		["Atrocitydk - Illidan"] = "AtrocityUI",
		["Atrocitywar - Illidan"] = "AtrocityUI",
		["Atrocity - US Mythic Dungeons"] = "AtrocityUI",
		["Atrocitywarr - Illidan"] = "AtrocityUI",
		["Atrocitytres - Illidan"] = "AtrocityUI",
		["Atrocitysp - Illidan"] = "AtrocityUI",
		["Atrocityw - Illidan"] = "AtrocityUI",
		["Atrocityev - Illidan"] = "AtrocityUI",
		["Atrocityloki - Mal'Ganis"] = "AtrocityUI",
		["Atrocitykfk - Illidan"] = "AtrocityUI",
		["Atrocityp - Illidan"] = "AtrocityUI",
		["Atrocity - Illidan"] = "AtrocityUI",
		["Atrocityfour - Illidan"] = "AtrocityUI",
		["Atrocitysake - Mal'Ganis"] = "AtrocityUI",
		["Atrocitywl - Illidan"] = "AtrocityUI",
		["Padmaster - Illidan"] = "AtrocityUI",
		["Atrocitysoju - Mal'Ganis"] = "AtrocityUI",
		["Atrocitytwo - Illidan"] = "AtrocityUI",
		["Atrocitydh - Illidan"] = "AtrocityUI",
		["Atrocityhunt - Illidan"] = "AtrocityUI",
		["Atrocityfive - Illidan"] = "AtrocityUI",
		["Atrocityx - Illidan"] = "AtrocityUI",
		["Atrocitydr - Illidan"] = "AtrocityUI",
	},
	["profiles"] = {
		["AtrocityUI"] = {
			["target_shady_combat_only"] = false,
			["aura_breakline_space"] = 2,
			["aura_sort"] = true,
			["saved_cvars_last_change"] = {
				["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
				["NamePlateClassificationScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1442",
				["NamePlateHorizontalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1440",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6522",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
				["nameplateShowOnlyNames"] = "Interface\\AddOns\\WeakAuras\\AuraEnvironment.lua:297",
				["NamePlateVerticalScale"] = "Interface\\FrameXML\\InterfaceOptionsPanels.lua:1441",
			},
			["aura_cache_by_name"] = {
				["ultimate form"] = {
					323095, -- [1]
					323524, -- [2]
				},
				["insidious chill"] = {
					391566, -- [1]
					391568, -- [2]
				},
				["fear"] = {
					5782, -- [1]
					12096, -- [2]
					12542, -- [3]
					22678, -- [4]
					26070, -- [5]
					26580, -- [6]
					26661, -- [7]
					27641, -- [8]
					27990, -- [9]
					29168, -- [10]
					29321, -- [11]
					30002, -- [12]
					30530, -- [13]
					30584, -- [14]
					30615, -- [15]
					31358, -- [16]
					31970, -- [17]
					32241, -- [18]
					33547, -- [19]
					33924, -- [20]
					34259, -- [21]
					38154, -- [22]
					38595, -- [23]
					38660, -- [24]
					39119, -- [25]
					39176, -- [26]
					39210, -- [27]
					39415, -- [28]
					41150, -- [29]
					46561, -- [30]
					51240, -- [31]
					59669, -- [32]
					65809, -- [33]
					68950, -- [34]
					70171, -- [35]
					81442, -- [36]
					83613, -- [37]
					113712, -- [38]
					115186, -- [39]
					117573, -- [40]
					118699, -- [41]
					125204, -- [42]
					128098, -- [43]
					130616, -- [44]
					130940, -- [45]
					134938, -- [46]
					142884, -- [47]
					144062, -- [48]
					173093, -- [49]
					182806, -- [50]
					204730, -- [51]
					205398, -- [52]
					214304, -- [53]
					220540, -- [54]
					221424, -- [55]
					223170, -- [56]
					240136, -- [57]
					242084, -- [58]
					242739, -- [59]
					245902, -- [60]
					246277, -- [61]
					246307, -- [62]
					248028, -- [63]
					251419, -- [64]
					259874, -- [65]
					259995, -- [66]
					266918, -- [67]
					287685, -- [68]
					287687, -- [69]
					288545, -- [70]
					331741, -- [71]
					342914, -- [72]
					344887, -- [73]
				},
				["exsanguinated"] = {
					294100, -- [1]
					328897, -- [2]
					356372, -- [3]
				},
				["celestial alignment"] = {
					173562, -- [1]
					194223, -- [2]
				},
				["flame dominance"] = {
					374881, -- [1]
					396056, -- [2]
					396062, -- [3]
					396105, -- [4]
					396106, -- [5]
				},
				["cloak of shadows"] = {
					31224, -- [1]
					39666, -- [2]
					65961, -- [3]
					81549, -- [4]
					178055, -- [5]
					196518, -- [6]
					248773, -- [7]
					283106, -- [8]
					283108, -- [9]
					333920, -- [10]
				},
				["loyal beasts"] = {
					326450, -- [1]
				},
				["commanding presence"] = {
					328839, -- [1]
					330545, -- [2]
					330546, -- [3]
				},
				["blessing of freedom"] = {
					1044, -- [1]
					234878, -- [2]
					262618, -- [3]
					299256, -- [4]
					305395, -- [5]
				},
				["ice barrier"] = {
					11426, -- [1]
					33245, -- [2]
					69787, -- [3]
					198094, -- [4]
					201565, -- [5]
					240074, -- [6]
					262251, -- [7]
					264458, -- [8]
					267504, -- [9]
					284882, -- [10]
				},
				["nether ward"] = {
					212295, -- [1]
				},
				["spectral"] = {
					290506, -- [1]
					344739, -- [2]
					346603, -- [3]
				},
				["concentrated flame"] = {
					295368, -- [1]
					295373, -- [2]
					295374, -- [3]
					295375, -- [4]
					295376, -- [5]
					295377, -- [6]
					295378, -- [7]
					295379, -- [8]
					295380, -- [9]
					295384, -- [10]
					299349, -- [11]
					299353, -- [12]
					302564, -- [13]
				},
				["frost dominance"] = {
					374916, -- [1]
					396072, -- [2]
					396074, -- [3]
					396108, -- [4]
					396109, -- [5]
				},
				["chaos brand"] = {
					1490, -- [1]
					255260, -- [2]
					281242, -- [3]
				},
				["whip rage"] = {
					29340, -- [1]
					233210, -- [2]
				},
				["bursting with pride"] = {
					340873, -- [1]
					342332, -- [2]
				},
				["entangling roots"] = {
					339, -- [1]
					11922, -- [2]
					12747, -- [3]
					20654, -- [4]
					20699, -- [5]
					21331, -- [6]
					22127, -- [7]
					22415, -- [8]
					22800, -- [9]
					24648, -- [10]
					26071, -- [11]
					28858, -- [12]
					31287, -- [13]
					32173, -- [14]
					33844, -- [15]
					37823, -- [16]
					40363, -- [17]
					57095, -- [18]
					65857, -- [19]
					66070, -- [20]
					66967, -- [21]
					96633, -- [22]
					101155, -- [23]
					105143, -- [24]
					132743, -- [25]
					149065, -- [26]
					168248, -- [27]
					170855, -- [28]
					173089, -- [29]
					177606, -- [30]
					177607, -- [31]
					186456, -- [32]
					196216, -- [33]
					201192, -- [34]
					201589, -- [35]
					233873, -- [36]
					235963, -- [37]
					247564, -- [38]
					272681, -- [39]
					278176, -- [40]
					288581, -- [41]
					311634, -- [42]
					311761, -- [43]
					330873, -- [44]
					343238, -- [45]
				},
				["guardian spirit"] = {
					47788, -- [1]
					48153, -- [2]
					97983, -- [3]
					122845, -- [4]
					255312, -- [5]
					289623, -- [6]
					289626, -- [7]
				},
				["drain soul"] = {
					32862, -- [1]
					35839, -- [2]
					60452, -- [3]
					74402, -- [4]
					79094, -- [5]
					129562, -- [6]
					136378, -- [7]
					139420, -- [8]
					161718, -- [9]
					171893, -- [10]
					181965, -- [11]
					182065, -- [12]
					185181, -- [13]
					190711, -- [14]
					197801, -- [15]
					198590, -- [16]
					205292, -- [17]
					209200, -- [18]
					209264, -- [19]
					231853, -- [20]
					242938, -- [21]
					251528, -- [22]
					328785, -- [23]
					346562, -- [24]
				},
				["divine protection"] = {
					498, -- [1]
					13007, -- [2]
					27778, -- [3]
					27779, -- [4]
					138250, -- [5]
					149150, -- [6]
					174967, -- [7]
					174968, -- [8]
					174987, -- [9]
					288292, -- [10]
					288294, -- [11]
				},
				["hungering void"] = {
					339426, -- [1]
					339958, -- [2]
					339969, -- [3]
					339980, -- [4]
					345218, -- [5]
					345219, -- [6]
				},
				["power word: shield"] = {
					17, -- [1]
					11647, -- [2]
					11835, -- [3]
					11974, -- [4]
					17139, -- [5]
					20697, -- [6]
					22187, -- [7]
					27607, -- [8]
					29408, -- [9]
					32595, -- [10]
					35944, -- [11]
					36052, -- [12]
					41373, -- [13]
					44175, -- [14]
					44291, -- [15]
					46193, -- [16]
					66099, -- [17]
					71548, -- [18]
					71780, -- [19]
					83842, -- [20]
					84039, -- [21]
					102409, -- [22]
					113734, -- [23]
					122808, -- [24]
					123258, -- [25]
					127399, -- [26]
					135313, -- [27]
					136100, -- [28]
					165718, -- [29]
					211558, -- [30]
					226076, -- [31]
					248441, -- [32]
					284471, -- [33]
					318158, -- [34]
					344426, -- [35]
				},
				["defensive stance"] = {
					7164, -- [1]
					41101, -- [2]
					53790, -- [3]
					143593, -- [4]
					145044, -- [5]
					146127, -- [6]
					147925, -- [7]
					164363, -- [8]
					193580, -- [9]
					197690, -- [10]
					212520, -- [11]
					219484, -- [12]
					238245, -- [13]
				},
				["spell reflection"] = {
					9943, -- [1]
					10074, -- [2]
					21118, -- [3]
					23920, -- [4]
					31533, -- [5]
					31534, -- [6]
					31554, -- [7]
					33961, -- [8]
					34783, -- [9]
					35399, -- [10]
					36096, -- [11]
					37885, -- [12]
					38331, -- [13]
					38592, -- [14]
					38599, -- [15]
					43443, -- [16]
					47981, -- [17]
					57643, -- [18]
					146120, -- [19]
					146122, -- [20]
					147923, -- [21]
					169339, -- [22]
					186704, -- [23]
					186705, -- [24]
					186706, -- [25]
					224740, -- [26]
					329267, -- [27]
					335255, -- [28]
				},
				["guessing game"] = {
					321471, -- [1]
					336499, -- [2]
				},
				["alter time"] = {
					108978, -- [1]
					110909, -- [2]
					127140, -- [3]
					342245, -- [4]
					342246, -- [5]
					342247, -- [6]
					347402, -- [7]
				},
				["ancient flame"] = {
					144691, -- [1]
					144695, -- [2]
					144699, -- [3]
					295365, -- [4]
					295367, -- [5]
					295369, -- [6]
					295372, -- [7]
					295381, -- [8]
					299348, -- [9]
					299350, -- [10]
					303380, -- [11]
					369990, -- [12]
					375583, -- [13]
				},
				["blessing of sacrifice"] = {
					6940, -- [1]
					199448, -- [2]
					200327, -- [3]
				},
				["scouring touch"] = {
					356329, -- [1]
				},
				["pistol shot"] = {
					185763, -- [1]
					207820, -- [2]
					214779, -- [3]
					223933, -- [4]
					240073, -- [5]
					255966, -- [6]
					267241, -- [7]
					267452, -- [8]
					268229, -- [9]
					274253, -- [10]
					275000, -- [11]
					285167, -- [12]
					294934, -- [13]
				},
				["morbid fixation"] = {
					338504, -- [1]
					338606, -- [2]
					338610, -- [3]
					343555, -- [4]
					343556, -- [5]
					343558, -- [6]
				},
				["enveloping mist"] = {
					124682, -- [1]
					209193, -- [2]
					212414, -- [3]
					227345, -- [4]
					231605, -- [5]
					274062, -- [6]
					317602, -- [7]
					344008, -- [8]
					344240, -- [9]
				},
				["coordinated assault"] = {
					266779, -- [1]
				},
				["selfless healer"] = {
					85804, -- [1]
					114250, -- [2]
					128863, -- [3]
					216777, -- [4]
				},
				["eternal torment"] = {
					292926, -- [1]
					295777, -- [2]
					318449, -- [3]
					318450, -- [4]
					318451, -- [5]
					318464, -- [6]
					350075, -- [7]
					355790, -- [8]
					358962, -- [9]
				},
				["effusive anima accelerator"] = {
					352188, -- [1]
					353248, -- [2]
					353349, -- [3]
					360277, -- [4]
				},
				["dampen harm"] = {
					122278, -- [1]
					123715, -- [2]
					175395, -- [3]
				},
				["dream delver"] = {
					352786, -- [1]
					353353, -- [2]
					353354, -- [3]
				},
				["haunted urn"] = {
					228626, -- [1]
					348723, -- [2]
				},
				["pillar of frost"] = {
					51271, -- [1]
					167171, -- [2]
					281214, -- [3]
					316849, -- [4]
				},
				["arcane intellect"] = {
					1459, -- [1]
					13326, -- [2]
					36880, -- [3]
					45525, -- [4]
					129171, -- [5]
					266499, -- [6]
					367803, -- [7]
				},
				["spiritwalker's grace"] = {
					79206, -- [1]
				},
				["dark soul: instability"] = {
					113858, -- [1]
				},
				["weapons of order"] = {
					310454, -- [1]
					311054, -- [2]
					311075, -- [3]
					311123, -- [4]
					312106, -- [5]
					312951, -- [6]
					314473, -- [7]
				},
				["astral shift"] = {
					74312, -- [1]
					108271, -- [2]
					263786, -- [3]
					292158, -- [4]
					343196, -- [5]
				},
				["divine favor"] = {
					210294, -- [1]
					210303, -- [2]
				},
				["spiteful"] = {
					338510, -- [1]
				},
				["touch of karma"] = {
					122470, -- [1]
					124280, -- [2]
					125174, -- [3]
				},
				["boneshatter shield"] = {
					343470, -- [1]
					344423, -- [2]
				},
				["ritual of desecration"] = {
					388104, -- [1]
					389029, -- [2]
					395680, -- [3]
				},
				["icebound aegis"] = {
					321368, -- [1]
					321370, -- [2]
					321754, -- [3]
					321755, -- [4]
				},
				["mort'regar's echoes"] = {
					333575, -- [1]
				},
				["regrowth"] = {
					8936, -- [1]
					16561, -- [2]
					20665, -- [3]
					22373, -- [4]
					22695, -- [5]
					27637, -- [6]
					28744, -- [7]
					34361, -- [8]
					39000, -- [9]
					39125, -- [10]
					66067, -- [11]
					69882, -- [12]
					72922, -- [13]
					72932, -- [14]
					84158, -- [15]
					97426, -- [16]
					98099, -- [17]
					102047, -- [18]
					165753, -- [19]
					173791, -- [20]
					176218, -- [21]
					187697, -- [22]
					188905, -- [23]
					224527, -- [24]
					265532, -- [25]
					283745, -- [26]
					292627, -- [27]
					292734, -- [28]
					311571, -- [29]
					326689, -- [30]
					338857, -- [31]
				},
				["engorge"] = {
					321402, -- [1]
					334653, -- [2]
				},
				["divine shield"] = {
					642, -- [1]
					13874, -- [2]
					29382, -- [3]
					33581, -- [4]
					40733, -- [5]
					41367, -- [6]
					54322, -- [7]
					63148, -- [8]
					66010, -- [9]
					67251, -- [10]
					71550, -- [11]
					133093, -- [12]
					164410, -- [13]
					169631, -- [14]
					173086, -- [15]
					179493, -- [16]
					183248, -- [17]
					184028, -- [18]
					186521, -- [19]
					189679, -- [20]
					210377, -- [21]
					218344, -- [22]
					228050, -- [23]
					228177, -- [24]
					263323, -- [25]
					264115, -- [26]
					283627, -- [27]
					317131, -- [28]
					335103, -- [29]
					343150, -- [30]
				},
				["metamorphosis"] = {
					36298, -- [1]
					37673, -- [2]
					37768, -- [3]
					37905, -- [4]
					131451, -- [5]
					138033, -- [6]
					138555, -- [7]
					162264, -- [8]
					173685, -- [9]
					181968, -- [10]
					184895, -- [11]
					187827, -- [12]
					189743, -- [13]
					191427, -- [14]
					191428, -- [15]
					192504, -- [16]
					193435, -- [17]
					193502, -- [18]
					193803, -- [19]
					194611, -- [20]
					195449, -- [21]
					196787, -- [22]
					200166, -- [23]
					201453, -- [24]
					202740, -- [25]
					223903, -- [26]
					224282, -- [27]
					225191, -- [28]
					225193, -- [29]
					225195, -- [30]
					225205, -- [31]
					225323, -- [32]
					225852, -- [33]
					225853, -- [34]
					226681, -- [35]
					247121, -- [36]
					260416, -- [37]
					268257, -- [38]
					268353, -- [39]
					320103, -- [40]
					320104, -- [41]
					320421, -- [42]
					320422, -- [43]
					320645, -- [44]
					321067, -- [45]
					321068, -- [46]
					321259, -- [47]
					321260, -- [48]
					321315, -- [49]
					321316, -- [50]
					321671, -- [51]
					321672, -- [52]
					333390, -- [53]
					333391, -- [54]
					335878, -- [55]
					343774, -- [56]
					343775, -- [57]
					343776, -- [58]
					343777, -- [59]
					343783, -- [60]
					343784, -- [61]
				},
				["dispersion"] = {
					47585, -- [1]
					65544, -- [2]
					79811, -- [3]
					120044, -- [4]
					156868, -- [5]
					164444, -- [6]
					165766, -- [7]
					173206, -- [8]
					201250, -- [9]
					201251, -- [10]
					201257, -- [11]
					322108, -- [12]
				},
				["sanguine ichor"] = {
					226489, -- [1]
					226510, -- [2]
					226512, -- [3]
					340299, -- [4]
					340324, -- [5]
					342073, -- [6]
				},
				["crippling poison"] = {
					3408, -- [1]
					3409, -- [2]
					25809, -- [3]
					30981, -- [4]
					44289, -- [5]
					115196, -- [6]
					132747, -- [7]
					132748, -- [8]
					169622, -- [9]
					169623, -- [10]
					283648, -- [11]
					283649, -- [12]
				},
				["intervene"] = {
					3411, -- [1]
					34784, -- [2]
					41198, -- [3]
					122506, -- [4]
					147833, -- [5]
					199114, -- [6]
					203388, -- [7]
					316531, -- [8]
				},
				["ironbark"] = {
					102342, -- [1]
					197061, -- [2]
				},
				["thorns"] = {
					467, -- [1]
					15438, -- [2]
					21335, -- [3]
					21337, -- [4]
					22128, -- [5]
					22351, -- [6]
					22696, -- [7]
					25640, -- [8]
					25777, -- [9]
					31271, -- [10]
					33907, -- [11]
					34343, -- [12]
					34663, -- [13]
					35361, -- [14]
					43420, -- [15]
					66068, -- [16]
					113966, -- [17]
					165771, -- [18]
					188652, -- [19]
					203728, -- [20]
					209334, -- [21]
					232559, -- [22]
					236696, -- [23]
					258985, -- [24]
					288273, -- [25]
					305496, -- [26]
					305497, -- [27]
				},
				["sphere of suppression"] = {
					294906, -- [1]
					294907, -- [2]
					294908, -- [3]
					294909, -- [4]
					294910, -- [5]
					294912, -- [6]
					294919, -- [7]
					294920, -- [8]
					294922, -- [9]
					298292, -- [10]
					298418, -- [11]
					298419, -- [12]
					298420, -- [13]
					300012, -- [14]
					300013, -- [15]
				},
				["evasion"] = {
					4086, -- [1]
					5277, -- [2]
					15087, -- [3]
					31379, -- [4]
					37683, -- [5]
					38541, -- [6]
					70190, -- [7]
					78826, -- [8]
					79853, -- [9]
					84122, -- [10]
					90958, -- [11]
					128919, -- [12]
					173103, -- [13]
					203868, -- [14]
					226364, -- [15]
					257742, -- [16]
					259331, -- [17]
					292230, -- [18]
					329977, -- [19]
					344363, -- [20]
				},
				["atrophic poison"] = {
					83609, -- [1]
					381637, -- [2]
					392388, -- [3]
				},
				["congealed contagion"] = {
					321268, -- [1]
					328175, -- [2]
					333737, -- [3]
					340271, -- [4]
					340273, -- [5]
				},
				["icebound fortitude"] = {
					48792, -- [1]
					58130, -- [2]
					58837, -- [3]
					66023, -- [4]
					292152, -- [5]
				},
				["sanguine sphere"] = {
					163689, -- [1]
					166591, -- [2]
				},
				["rallying cry"] = {
					31115, -- [1]
					31732, -- [2]
					85527, -- [3]
					97462, -- [4]
					97463, -- [5]
					122507, -- [6]
					148868, -- [7]
					290046, -- [8]
					316825, -- [9]
				},
				["bolster"] = {
					209859, -- [1]
					280001, -- [2]
				},
				["wracking pain"] = {
					93720, -- [1]
					100865, -- [2]
					101221, -- [3]
					101257, -- [4]
					101258, -- [5]
					250096, -- [6]
					265148, -- [7]
					273045, -- [8]
					329181, -- [9]
					329183, -- [10]
					335372, -- [11]
					345010, -- [12]
					361689, -- [13]
					365126, -- [14]
					367670, -- [15]
				},
				["blood barrier"] = {
					262980, -- [1]
					269185, -- [2]
					269281, -- [3]
					322759, -- [4]
					322766, -- [5]
					322773, -- [6]
					323482, -- [7]
					329840, -- [8]
					329849, -- [9]
					329852, -- [10]
				},
				["kevin's wrath"] = {
					352520, -- [1]
					352528, -- [2]
					352533, -- [3]
					352534, -- [4]
				},
				["echoing void"] = {
					307232, -- [1]
					307236, -- [2]
					317014, -- [3]
					317020, -- [4]
					317022, -- [5]
					317029, -- [6]
					318280, -- [7]
					318485, -- [8]
					318486, -- [9]
					373281, -- [10]
					373304, -- [11]
					373305, -- [12]
				},
				["storm dominance"] = {
					374918, -- [1]
					396076, -- [2]
					396077, -- [3]
					396111, -- [4]
					396113, -- [5]
				},
				["power word: fortitude"] = {
					13864, -- [1]
					21562, -- [2]
					23947, -- [3]
					23948, -- [4]
					36004, -- [5]
					58921, -- [6]
					74973, -- [7]
					94366, -- [8]
					133538, -- [9]
					160637, -- [10]
					165739, -- [11]
					183585, -- [12]
					206629, -- [13]
					211681, -- [14]
					266501, -- [15]
					267528, -- [16]
					284466, -- [17]
					286145, -- [18]
				},
				["die by the sword"] = {
					118038, -- [1]
					236385, -- [2]
					315948, -- [3]
				},
				["sinful revelation"] = {
					309623, -- [1]
					324260, -- [2]
				},
				["earth dominance"] = {
					374917, -- [1]
					396067, -- [2]
					396068, -- [3]
					396085, -- [4]
					396098, -- [5]
				},
				["predatory instincts"] = {
					389808, -- [1]
				},
				["enslaved"] = {
					201089, -- [1]
					204831, -- [2]
					211680, -- [3]
					222424, -- [4]
					268192, -- [5]
					299156, -- [6]
					303622, -- [7]
					323961, -- [8]
				},
				["iron wire"] = {
					196861, -- [1]
					256148, -- [2]
				},
				["stygia tap"] = {
					343224, -- [1]
					343613, -- [2]
				},
				["pain suppression"] = {
					33206, -- [1]
					69910, -- [2]
					122844, -- [3]
					129035, -- [4]
				},
				["avenging wrath"] = {
					31884, -- [1]
					43430, -- [2]
					50837, -- [3]
					66011, -- [4]
					113127, -- [5]
					121163, -- [6]
					158405, -- [7]
					162762, -- [8]
					164397, -- [9]
					167917, -- [10]
					173312, -- [11]
					181043, -- [12]
					185413, -- [13]
					189292, -- [14]
					195272, -- [15]
					218346, -- [16]
					242743, -- [17]
					252856, -- [18]
					267511, -- [19]
					282113, -- [20]
					292266, -- [21]
					317872, -- [22]
					327979, -- [23]
					339044, -- [24]
					343029, -- [25]
				},
				["holy ward"] = {
					213610, -- [1]
					233473, -- [2]
					234682, -- [3]
					240521, -- [4]
				},
				["earth shield"] = {
					379, -- [1]
					974, -- [2]
					32734, -- [3]
					38590, -- [4]
					54479, -- [5]
					54480, -- [6]
					55599, -- [7]
					55600, -- [8]
					56451, -- [9]
					57802, -- [10]
					57803, -- [11]
					58981, -- [12]
					58982, -- [13]
					59471, -- [14]
					59472, -- [15]
					60013, -- [16]
					60014, -- [17]
					66063, -- [18]
					66064, -- [19]
					67530, -- [20]
					67537, -- [21]
					69568, -- [22]
					69569, -- [23]
					69925, -- [24]
					69926, -- [25]
					77905, -- [26]
					79927, -- [27]
					79928, -- [28]
					101649, -- [29]
					101650, -- [30]
					143475, -- [31]
					143479, -- [32]
					145559, -- [33]
					145560, -- [34]
					159981, -- [35]
					159982, -- [36]
					165773, -- [37]
					199355, -- [38]
					199356, -- [39]
					204288, -- [40]
					204290, -- [41]
					226078, -- [42]
					254417, -- [43]
					254425, -- [44]
					268709, -- [45]
					268710, -- [46]
					374066, -- [47]
					374067, -- [48]
					377874, -- [49]
					377875, -- [50]
					383648, -- [51]
				},
				["all-consuming spite"] = {
					343553, -- [1]
				},
				["life cocoon"] = {
					116849, -- [1]
					165128, -- [2]
					209194, -- [3]
				},
				["shadowfury"] = {
					30283, -- [1]
					35373, -- [2]
					39082, -- [3]
					45270, -- [4]
					56733, -- [5]
					61463, -- [6]
					81441, -- [7]
					320132, -- [8]
					326475, -- [9]
				},
				["blur"] = {
					81216, -- [1]
					177566, -- [2]
					195450, -- [3]
					198589, -- [4]
					202818, -- [5]
					202819, -- [6]
					212800, -- [7]
					292222, -- [8]
					320407, -- [9]
				},
				["unending resolve"] = {
					104773, -- [1]
					173189, -- [2]
					317138, -- [3]
				},
				["diffuse magic"] = {
					122783, -- [1]
				},
				["recharge anima"] = {
					321367, -- [1]
					324046, -- [2]
					327280, -- [3]
					327416, -- [4]
				},
				["shadow's grasp"] = {
					206760, -- [1]
					263656, -- [2]
					263658, -- [3]
					306965, -- [4]
				},
				["survival instincts"] = {
					50322, -- [1]
					61336, -- [2]
					85842, -- [3]
					236156, -- [4]
					236157, -- [5]
					328767, -- [6]
				},
				["consecration"] = {
					26573, -- [1]
					32773, -- [2]
					33559, -- [3]
					36946, -- [4]
					37553, -- [5]
					38385, -- [6]
					41541, -- [7]
					43429, -- [8]
					57798, -- [9]
					59998, -- [10]
					69930, -- [11]
					79966, -- [12]
					81297, -- [13]
					107100, -- [14]
					111365, -- [15]
					153441, -- [16]
					158416, -- [17]
					162642, -- [18]
					165711, -- [19]
					184047, -- [20]
					188370, -- [21]
					190010, -- [22]
					200667, -- [23]
					200678, -- [24]
					200679, -- [25]
					204242, -- [26]
					205228, -- [27]
					216217, -- [28]
					221645, -- [29]
					221730, -- [30]
					233390, -- [31]
					243597, -- [32]
					251151, -- [33]
					251152, -- [34]
					251549, -- [35]
					251550, -- [36]
					264082, -- [37]
					283579, -- [38]
					283582, -- [39]
					283583, -- [40]
					288807, -- [41]
					288808, -- [42]
					288809, -- [43]
					290496, -- [44]
					290497, -- [45]
					290498, -- [46]
					294346, -- [47]
					294347, -- [48]
					327980, -- [49]
					344172, -- [50]
					382484, -- [51]
					387881, -- [52]
				},
				["strength of the pack"] = {
					64369, -- [1]
					64381, -- [2]
					171114, -- [3]
					178149, -- [4]
					178150, -- [5]
					189715, -- [6]
					199184, -- [7]
					199186, -- [8]
					200922, -- [9]
					260057, -- [10]
					341222, -- [11]
					341223, -- [12]
					359768, -- [13]
					365338, -- [14]
				},
				["numbing poison"] = {
					5760, -- [1]
					5761, -- [2]
					158873, -- [3]
					158876, -- [4]
					311373, -- [5]
					342947, -- [6]
					359078, -- [7]
				},
				["netherwalk"] = {
					31599, -- [1]
					196555, -- [2]
				},
				["voidform"] = {
					126733, -- [1]
					126738, -- [2]
					185916, -- [3]
					194249, -- [4]
					199415, -- [5]
					218413, -- [6]
					227386, -- [7]
					228264, -- [8]
					250844, -- [9]
					284508, -- [10]
				},
				["lunar empowerment"] = {
					211091, -- [1]
					292664, -- [2]
				},
				["incarnation: chosen of elune"] = {
					102560, -- [1]
					184747, -- [2]
				},
				["crackling shield"] = {
					376705, -- [1]
					376724, -- [2]
				},
				["anti-magic zone"] = {
					50461, -- [1]
					50462, -- [2]
					51052, -- [3]
					52893, -- [4]
					52894, -- [5]
					53636, -- [6]
					53637, -- [7]
					79907, -- [8]
					135233, -- [9]
					145629, -- [10]
					162624, -- [11]
					162625, -- [12]
					164065, -- [13]
					164225, -- [14]
					165775, -- [15]
					222791, -- [16]
					332829, -- [17]
					332831, -- [18]
				},
				["bulwark of maldraxxus"] = {
					336449, -- [1]
					336450, -- [2]
					336451, -- [3]
				},
				["bubbling pox"] = {
					331016, -- [1]
				},
				["nimble steps"] = {
					352366, -- [1]
					354050, -- [2]
					354051, -- [3]
					354052, -- [4]
				},
				["deadly poison"] = {
					2818, -- [1]
					2823, -- [2]
					3583, -- [3]
					10022, -- [4]
					13582, -- [5]
					21787, -- [6]
					21788, -- [7]
					32970, -- [8]
					32971, -- [9]
					34616, -- [10]
					34655, -- [11]
					34657, -- [12]
					36872, -- [13]
					38519, -- [14]
					38520, -- [15]
					41191, -- [16]
					41192, -- [17]
					41485, -- [18]
					43580, -- [19]
					43581, -- [20]
					56145, -- [21]
					56149, -- [22]
					59479, -- [23]
					59482, -- [24]
					63755, -- [25]
					63756, -- [26]
					67710, -- [27]
					67711, -- [28]
					72329, -- [29]
					82632, -- [30]
					82633, -- [31]
					96648, -- [32]
					113780, -- [33]
					129410, -- [34]
					130980, -- [35]
					130981, -- [36]
					132745, -- [37]
					132746, -- [38]
					145419, -- [39]
					145420, -- [40]
					145421, -- [41]
					177918, -- [42]
					177919, -- [43]
					177920, -- [44]
					289078, -- [45]
					314113, -- [46]
					373774, -- [47]
					377030, -- [48]
					377036, -- [49]
					394324, -- [50]
					394325, -- [51]
				},
				["spectral sight"] = {
					188501, -- [1]
					199461, -- [2]
					199490, -- [3]
					202688, -- [4]
					215725, -- [5]
					220239, -- [6]
					220243, -- [7]
					233028, -- [8]
					320379, -- [9]
				},
				["mind sear"] = {
					32000, -- [1]
					36447, -- [2]
					48045, -- [3]
					49821, -- [4]
					60440, -- [5]
					60441, -- [6]
					85643, -- [7]
					85647, -- [8]
					135513, -- [9]
					157170, -- [10]
					157172, -- [11]
					172877, -- [12]
					172878, -- [13]
					177402, -- [14]
					177403, -- [15]
					208232, -- [16]
					237388, -- [17]
					284430, -- [18]
					284431, -- [19]
					294009, -- [20]
					294018, -- [21]
					344752, -- [22]
					344754, -- [23]
				},
				["tidebringer"] = {
					236501, -- [1]
					236502, -- [2]
				},
				["prey on the weak"] = {
					131511, -- [1]
					255909, -- [2]
					389788, -- [3]
					389806, -- [4]
				},
				["greater fade"] = {
					213602, -- [1]
				},
				["inspiring presence"] = {
					185089, -- [1]
					185090, -- [2]
					192944, -- [3]
					320973, -- [4]
					320980, -- [5]
					327808, -- [6]
					327812, -- [7]
					335034, -- [8]
					343502, -- [9]
				},
				["fixate"] = {
					12021, -- [1]
					34719, -- [2]
					40414, -- [3]
					40607, -- [4]
					40892, -- [5]
					41294, -- [6]
					41295, -- [7]
					41614, -- [8]
					41951, -- [9]
					41976, -- [10]
					49026, -- [11]
					52537, -- [12]
					53626, -- [13]
					73544, -- [14]
					73545, -- [15]
					73686, -- [16]
					73687, -- [17]
					78617, -- [18]
					78618, -- [19]
					78625, -- [20]
					80093, -- [21]
					80094, -- [22]
					91829, -- [23]
					91830, -- [24]
					97025, -- [25]
					97027, -- [26]
					97486, -- [27]
					99284, -- [28]
					99526, -- [29]
					99559, -- [30]
					99849, -- [31]
					99999, -- [32]
					100007, -- [33]
					100011, -- [34]
					100014, -- [35]
					100288, -- [36]
					100548, -- [37]
					105695, -- [38]
					111723, -- [39]
					111725, -- [40]
					118303, -- [41]
					118448, -- [42]
					118964, -- [43]
					120434, -- [44]
					120831, -- [45]
					120837, -- [46]
					120839, -- [47]
					122477, -- [48]
					124070, -- [49]
					125390, -- [50]
					125393, -- [51]
					125895, -- [52]
					125896, -- [53]
					129149, -- [54]
					132760, -- [55]
					132984, -- [56]
					133042, -- [57]
					133112, -- [58]
					133196, -- [59]
					133843, -- [60]
					136594, -- [61]
					137686, -- [62]
					137687, -- [63]
					138486, -- [64]
					139034, -- [65]
					140189, -- [66]
					140547, -- [67]
					141918, -- [68]
					142097, -- [69]
					142388, -- [70]
					142870, -- [71]
					143292, -- [72]
					143445, -- [73]
					143682, -- [74]
					143864, -- [75]
					144036, -- [76]
					146540, -- [77]
					146581, -- [78]
					147665, -- [79]
					147712, -- [80]
					148243, -- [81]
					149337, -- [82]
					150702, -- [83]
					152310, -- [84]
					153787, -- [85]
					154769, -- [86]
					154952, -- [87]
					155196, -- [88]
					155207, -- [89]
					156652, -- [90]
					156653, -- [91]
					156665, -- [92]
					157168, -- [93]
					157625, -- [94]
					157763, -- [95]
					158702, -- [96]
					159373, -- [97]
					167757, -- [98]
					172866, -- [99]
					173079, -- [100]
					173080, -- [101]
					174627, -- [102]
					176544, -- [103]
					177643, -- [104]
					178139, -- [105]
					186572, -- [106]
					186574, -- [107]
					187621, -- [108]
					197849, -- [109]
					197850, -- [110]
					198161, -- [111]
					198477, -- [112]
					199618, -- [113]
					199619, -- [114]
					200349, -- [115]
					201015, -- [116]
					202081, -- [117]
					202453, -- [118]
					203983, -- [119]
					204873, -- [120]
					205011, -- [121]
					205054, -- [122]
					206364, -- [123]
					208739, -- [124]
					210099, -- [125]
					213466, -- [126]
					216115, -- [127]
					218369, -- [128]
					220727, -- [129]
					224072, -- [130]
					224307, -- [131]
					224532, -- [132]
					225388, -- [133]
					226044, -- [134]
					226088, -- [135]
					227221, -- [136]
					229593, -- [137]
					234189, -- [138]
					238674, -- [139]
					239280, -- [140]
					239556, -- [141]
					241657, -- [142]
					243461, -- [143]
					243590, -- [144]
					243613, -- [145]
					244653, -- [146]
					244657, -- [147]
					244860, -- [148]
					245406, -- [149]
					253001, -- [150]
					254491, -- [151]
					255860, -- [152]
					256311, -- [153]
					257858, -- [154]
					262240, -- [155]
					262241, -- [156]
					262242, -- [157]
					262243, -- [158]
					262244, -- [159]
					262245, -- [160]
					264215, -- [161]
					264219, -- [162]
					267406, -- [163]
					269103, -- [164]
					269936, -- [165]
					270509, -- [166]
					272427, -- [167]
					272482, -- [168]
					275269, -- [169]
					275270, -- [170]
					276020, -- [171]
					277556, -- [172]
					285694, -- [173]
					285696, -- [174]
					285697, -- [175]
					285702, -- [176]
					285703, -- [177]
					285813, -- [178]
					286135, -- [179]
					286539, -- [180]
					286974, -- [181]
					287845, -- [182]
					288390, -- [183]
					288623, -- [184]
					289925, -- [185]
					291917, -- [186]
					296524, -- [187]
					299484, -- [188]
					304298, -- [189]
					305699, -- [190]
					306957, -- [191]
					307260, -- [192]
					308360, -- [193]
					309859, -- [194]
					314729, -- [195]
					315093, -- [196]
					315094, -- [197]
					318059, -- [198]
					318078, -- [199]
					318540, -- [200]
					319781, -- [201]
					320740, -- [202]
					326082, -- [203]
					326892, -- [204]
					327902, -- [205]
					330115, -- [206]
					330966, -- [207]
					330967, -- [208]
					331343, -- [209]
					337617, -- [210]
					340797, -- [211]
					340827, -- [212]
					343496, -- [213]
				},
				["double tap"] = {
					203412, -- [1]
					203414, -- [2]
					203486, -- [3]
					260402, -- [4]
				},
				["ascendance"] = {
					28200, -- [1]
					28204, -- [2]
					114049, -- [3]
					114050, -- [4]
					114051, -- [5]
					114052, -- [6]
					147059, -- [7]
					163296, -- [8]
					173160, -- [9]
					191475, -- [10]
					191478, -- [11]
					344548, -- [12]
				},
				["anti-magic shell"] = {
					31662, -- [1]
					48707, -- [2]
					49088, -- [3]
					53766, -- [4]
					171465, -- [5]
					173097, -- [6]
					181425, -- [7]
					203272, -- [8]
					218977, -- [9]
					218988, -- [10]
					292150, -- [11]
					311975, -- [12]
				},
				["destabilize"] = {
					123059, -- [1]
					157657, -- [2]
					163466, -- [3]
					263902, -- [4]
					334688, -- [5]
					334695, -- [6]
				},
				["enrage"] = {
					8599, -- [1]
					12686, -- [2]
					15061, -- [3]
					15097, -- [4]
					15716, -- [5]
					18501, -- [6]
					19451, -- [7]
					19812, -- [8]
					22428, -- [9]
					23128, -- [10]
					23342, -- [11]
					26041, -- [12]
					26051, -- [13]
					28371, -- [14]
					30485, -- [15]
					31540, -- [16]
					31915, -- [17]
					32714, -- [18]
					33958, -- [19]
					34670, -- [20]
					37605, -- [21]
					37648, -- [22]
					37975, -- [23]
					38046, -- [24]
					38166, -- [25]
					38664, -- [26]
					39031, -- [27]
					41254, -- [28]
					41447, -- [29]
					42705, -- [30]
					42745, -- [31]
					43139, -- [32]
					44427, -- [33]
					45111, -- [34]
					47399, -- [35]
					48138, -- [36]
					48142, -- [37]
					48193, -- [38]
					50420, -- [39]
					51513, -- [40]
					52470, -- [41]
					54287, -- [42]
					54427, -- [43]
					55285, -- [44]
					56646, -- [45]
					59697, -- [46]
					59707, -- [47]
					59828, -- [48]
					60075, -- [49]
					61369, -- [50]
					63227, -- [51]
					68335, -- [52]
					68541, -- [53]
					70371, -- [54]
					71205, -- [55]
					72143, -- [56]
					75998, -- [57]
					76100, -- [58]
					76862, -- [59]
					78722, -- [60]
					78943, -- [61]
					80084, -- [62]
					80467, -- [63]
					86736, -- [64]
					102134, -- [65]
					108169, -- [66]
					109889, -- [67]
					109890, -- [68]
					115430, -- [69]
					119629, -- [70]
					126370, -- [71]
					127823, -- [72]
					129016, -- [73]
					130196, -- [74]
					133052, -- [75]
					140758, -- [76]
					144404, -- [77]
					145411, -- [78]
					145554, -- [79]
					145692, -- [80]
					145974, -- [81]
					150498, -- [82]
					150500, -- [83]
					154982, -- [84]
					156314, -- [85]
					163483, -- [86]
					164257, -- [87]
					164811, -- [88]
					165947, -- [89]
					172360, -- [90]
					172781, -- [91]
					175192, -- [92]
					175337, -- [93]
					176048, -- [94]
					178658, -- [95]
					179681, -- [96]
					184361, -- [97]
					184362, -- [98]
					186882, -- [99]
					188480, -- [100]
					190225, -- [101]
					197064, -- [102]
					201279, -- [103]
					207680, -- [104]
					212561, -- [105]
					214037, -- [106]
					216363, -- [107]
					218121, -- [108]
					222022, -- [109]
					222042, -- [110]
					224604, -- [111]
					225319, -- [112]
					225320, -- [113]
					228318, -- [114]
					228895, -- [115]
					237689, -- [116]
					245566, -- [117]
					257260, -- [118]
					257391, -- [119]
					257609, -- [120]
					258463, -- [121]
					259975, -- [122]
					260355, -- [123]
					261893, -- [124]
					266095, -- [125]
					271369, -- [126]
					273422, -- [127]
					273874, -- [128]
					275091, -- [129]
					275667, -- [130]
					277573, -- [131]
					297152, -- [132]
					298078, -- [133]
					300414, -- [134]
					302483, -- [135]
					304178, -- [136]
					307506, -- [137]
					311086, -- [138]
					313675, -- [139]
					314466, -- [140]
					316133, -- [141]
					316424, -- [142]
					316425, -- [143]
					317535, -- [144]
					317553, -- [145]
					319147, -- [146]
					321820, -- [147]
					323599, -- [148]
					323828, -- [149]
					324085, -- [150]
					329989, -- [151]
					330631, -- [152]
					332169, -- [153]
					334800, -- [154]
					343484, -- [155]
				},
				["moonkin aura"] = {
					209740, -- [1]
					209746, -- [2]
				},
				["amplifying poison"] = {
					381664, -- [1]
					383414, -- [2]
					394328, -- [3]
				},
				["filthy transfusion"] = {
					273834, -- [1]
					273835, -- [2]
					273836, -- [3]
				},
				["eye for an eye"] = {
					25988, -- [1]
					25997, -- [2]
					205191, -- [3]
					205202, -- [4]
				},
				["nothing personal"] = {
					286573, -- [1]
					286579, -- [2]
					286581, -- [3]
					289467, -- [4]
				},
				["butcher cut"] = {
					279416, -- [1]
					279426, -- [2]
				},
				["mutilated flesh"] = {
					211672, -- [1]
					340431, -- [2]
					381672, -- [3]
					394021, -- [4]
				},
				["aspect of the turtle"] = {
					186265, -- [1]
					189949, -- [2]
					210761, -- [3]
				},
				["defensive countermeasure"] = {
					297133, -- [1]
					299428, -- [2]
					300996, -- [3]
					303941, -- [4]
				},
				["might of the upper reaches"] = {
					333579, -- [1]
				},
				["prideful"] = {
					340186, -- [1]
					340384, -- [2]
					340880, -- [3]
					342333, -- [4]
				},
				["ice block"] = {
					27619, -- [1]
					36911, -- [2]
					41590, -- [3]
					45438, -- [4]
					45776, -- [5]
					46604, -- [6]
					46882, -- [7]
					56124, -- [8]
					56644, -- [9]
					62766, -- [10]
					65802, -- [11]
					68252, -- [12]
					91686, -- [13]
					99247, -- [14]
					121548, -- [15]
					145533, -- [16]
					167415, -- [17]
					172987, -- [18]
					176269, -- [19]
					188839, -- [20]
					211011, -- [21]
					211014, -- [22]
					240133, -- [23]
					241720, -- [24]
					241722, -- [25]
					251345, -- [26]
					256590, -- [27]
					256730, -- [28]
					262192, -- [29]
					271527, -- [30]
					278960, -- [31]
					287322, -- [32]
					287347, -- [33]
					290049, -- [34]
					304344, -- [35]
					304345, -- [36]
					304463, -- [37]
					314908, -- [38]
					322683, -- [39]
					329007, -- [40]
					341857, -- [41]
				},
				["mind soothe"] = {
					453, -- [1]
				},
				["abomination limb"] = {
					315443, -- [1]
					323710, -- [2]
					323798, -- [3]
					323950, -- [4]
					335486, -- [5]
					335933, -- [6]
					340735, -- [7]
				},
				["fortifying brew"] = {
					115203, -- [1]
					120954, -- [2]
					122498, -- [3]
					201318, -- [4]
					243435, -- [5]
					292300, -- [6]
					322960, -- [7]
					325208, -- [8]
				},
				["mystic touch"] = {
					8647, -- [1]
					113746, -- [2]
					331653, -- [3]
				},
				["droman's wrath"] = {
					323059, -- [1]
				},
				["raging tantrum"] = {
					333241, -- [1]
					333242, -- [2]
				},
				["forsworn doctrine"] = {
					317936, -- [1]
					331213, -- [2]
				},
				["undying rage"] = {
					333227, -- [1]
				},
				["combustion"] = {
					29977, -- [1]
					74630, -- [2]
					99303, -- [3]
					100271, -- [4]
					190319, -- [5]
					197889, -- [6]
					304888, -- [7]
					321710, -- [8]
					323048, -- [9]
				},
				["mind flay"] = {
					15407, -- [1]
					16568, -- [2]
					17165, -- [3]
					22919, -- [4]
					23953, -- [5]
					26044, -- [6]
					26143, -- [7]
					28310, -- [8]
					29407, -- [9]
					29570, -- [10]
					32417, -- [11]
					35507, -- [12]
					37276, -- [13]
					37330, -- [14]
					37621, -- [15]
					38243, -- [16]
					40842, -- [17]
					42396, -- [18]
					43512, -- [19]
					46562, -- [20]
					52586, -- [21]
					54339, -- [22]
					54805, -- [23]
					57779, -- [24]
					57941, -- [25]
					59367, -- [26]
					59974, -- [27]
					60006, -- [28]
					60472, -- [29]
					65488, -- [30]
					78751, -- [31]
					79541, -- [32]
					79711, -- [33]
					89032, -- [34]
					91134, -- [35]
					103024, -- [36]
					129033, -- [37]
					144293, -- [38]
					149984, -- [39]
					150886, -- [40]
					150893, -- [41]
					154125, -- [42]
					164445, -- [43]
					172670, -- [44]
					183324, -- [45]
					189873, -- [46]
					193473, -- [47]
					196508, -- [48]
					196509, -- [49]
					201520, -- [50]
					202894, -- [51]
					203037, -- [52]
					203313, -- [53]
					203375, -- [54]
					208697, -- [55]
					216513, -- [56]
					218510, -- [57]
					222075, -- [58]
					234696, -- [59]
					241934, -- [60]
					254123, -- [61]
					260182, -- [62]
					260304, -- [63]
					263117, -- [64]
					264892, -- [65]
					271649, -- [66]
					274019, -- [67]
					274032, -- [68]
					277358, -- [69]
					277521, -- [70]
					278311, -- [71]
					284414, -- [72]
					290402, -- [73]
					292974, -- [74]
					299301, -- [75]
					303566, -- [76]
					306391, -- [77]
					308172, -- [78]
					308884, -- [79]
					308885, -- [80]
					310552, -- [81]
					310555, -- [82]
					312526, -- [83]
					312679, -- [84]
					314187, -- [85]
					314188, -- [86]
					314592, -- [87]
					315949, -- [88]
					316835, -- [89]
					317490, -- [90]
					319027, -- [91]
					321330, -- [92]
				},
				["in the spotlight"] = {
					227931, -- [1]
					312926, -- [2]
				},
				["soulglow spectrometer"] = {
					352186, -- [1]
					352938, -- [2]
					352939, -- [3]
					352940, -- [4]
					358379, -- [5]
				},
				["thunder clap"] = {
					6343, -- [1]
					57832, -- [2]
					60019, -- [3]
					69304, -- [4]
					85216, -- [5]
					145046, -- [6]
					147683, -- [7]
					183543, -- [8]
					236389, -- [9]
					237917, -- [10]
					262538, -- [11]
					267578, -- [12]
					283929, -- [13]
					316143, -- [14]
					316414, -- [15]
					316490, -- [16]
					382590, -- [17]
					386028, -- [18]
					396719, -- [19]
				},
				["barkskin"] = {
					20655, -- [1]
					22812, -- [2]
					173558, -- [3]
					182872, -- [4]
					327993, -- [5]
				},
				["blessing of protection"] = {
					1022, -- [1]
					41450, -- [2]
				},
				["seraphim"] = {
					152262, -- [1]
					172320, -- [2]
					172321, -- [3]
				},
				["enraged regeneration"] = {
					184364, -- [1]
					316474, -- [2]
				},
				["dark soul: misery"] = {
					113860, -- [1]
				},
				["cyclone"] = {
					29538, -- [1]
					32334, -- [2]
					33786, -- [3]
					38516, -- [4]
					38517, -- [5]
					39594, -- [6]
					40578, -- [7]
					43528, -- [8]
					60236, -- [9]
					61662, -- [10]
					62632, -- [11]
					62633, -- [12]
					65859, -- [13]
					88010, -- [14]
					92371, -- [15]
					143499, -- [16]
					143551, -- [17]
					151165, -- [18]
					160209, -- [19]
					189454, -- [20]
					189947, -- [21]
					189950, -- [22]
					193121, -- [23]
					193244, -- [24]
					203562, -- [25]
					203596, -- [26]
					204832, -- [27]
					208056, -- [28]
					208060, -- [29]
					233946, -- [30]
					234175, -- [31]
					255793, -- [32]
					261521, -- [33]
					268341, -- [34]
				},
			},
			["cast_statusbar_fadein_time"] = 0.009999999776482582,
			["aura2_y_offset"] = 18.19999694824219,
			["aura_timer_text_anchor"] = {
				["x"] = 0.5,
			},
			["buffs_on_aura2"] = true,
			["indicator_quest"] = false,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.7803922295570374, -- [1]
				0.250980406999588, -- [2]
				0.250980406999588, -- [3]
				0.9600000008940697, -- [4]
			},
			["show_interrupt_author"] = false,
			["npc_cache"] = {
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[169421] = {
					"Felguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[188100] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[167119] = {
					"Beckoned Wraith", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[183496] = {
					"Foul Gorger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180171] = {
					"Brooding Cleric", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180427] = {
					"Loom Guardian", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[183498] = {
					"Illicit Collector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[169425] = {
					"Felhound", -- [1]
					"Castle Nathria", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180428] = {
					"Tortured Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"Castle Nathria", -- [2]
				},
				[88967] = {
					"Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[121975] = {
					"Aggramar", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[201155] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183500] = {
					"Thieveing Agent", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[200388] = {
					"Malformed Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[183501] = {
					"Artificer Xy'mox", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[170452] = {
					"Essence Orb", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[416] = {
					"Rupuri", -- [1]
					"Castle Nathria", -- [2]
				},
				[417] = {
					"Kreefenn", -- [1]
					"Theater of Pain", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Castle Nathria", -- [2]
				},
				[97285] = {
					"Wind Rush Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[189901] = {
					"Warlord Sargha", -- [1]
					"Neltharus", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[180690] = {
					"Vazzaren the Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[196043] = {
					"Primalist Infuser", -- [1]
					"Halls of Infusion", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[152033] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197835] = {
					"Kaurdyth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[81806] = {
					"Gorian Royal Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[178133] = {
					"Murkbrine Wavejumper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184530] = {
					"Eternal Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184019] = {
					"Burly Rock-Thrower", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[79888] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[196559] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[58959] = {
					"핍툴", -- [1]
					"Castle Nathria", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[177114] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[173276] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[178394] = {
					"Cartel Lackey", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[145898] = {
					"Anointed Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"Theater of Pain", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[177372] = {
					"Mawsworn Realmbinder", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[172255] = {
					"Gravestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176605] = {
					"Scottbrexit", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[173280] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[177886] = {
					"Arthas Menethil", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184539] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[145903] = {
					"Darkforged Crusader", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[147439] = {
					"Molten Hound", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[137716] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150254] = {
					"Scraphound", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[147440] = {
					"Blazing Fireguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[172005] = {
					"Furrowed Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[121985] = {
					"Flame of Taeshalach", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[31216] = {
					"Imfiredup", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[156142] = {
					"Seeker of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190686] = {
					"Frozen Destroyer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[177893] = {
					"Mawforged Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178661] = {
					"Mawsworn Interceptor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[168683] = {
					"Gorak Zhar", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[179942] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[173802] = {
					"Carved Assistant", -- [1]
					"Castle Nathria", -- [2]
				},
				[192481] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[198878] = {
					"Primalist Tempestmaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[114312] = {
					"Moroes", -- [1]
					"Return to Karazhan", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[53206] = {
					"Hell Hound", -- [1]
					"Firelands", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[179177] = {
					"Mawsworn Overlord", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179433] = {
					"Vault Aegis", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[69791] = {
					"Vilww", -- [1]
					"Castle Nathria", -- [2]
				},
				[164338] = {
					"Mawsworn Guard", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[78491] = {
					"Brackenspore", -- [1]
					"Highmaul", -- [2]
				},
				[58964] = {
					"Xordus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164339] = {
					"Mawsworn Bowman", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[69792] = {
					"Vilww", -- [1]
					"Castle Nathria", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[167923] = {
					"Diseased Remnant", -- [1]
					"Plaguefall", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[166644] = {
					"Artificer Xy'mox", -- [1]
					"Castle Nathria", -- [2]
				},
				[184300] = {
					"Ebonstone Golem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[178671] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[78237] = {
					"Phemos", -- [1]
					"Highmaul", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164343] = {
					"Mawsworn Debilitator", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[78238] = {
					"Pol", -- [1]
					"Highmaul", -- [2]
				},
				[175091] = {
					"Necrotic Droplet", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[185582] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177650] = {
					"Lordaeron Knight", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162298] = {
					"Yulkatar the Cruel", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[200936] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[156158] = {
					"Adjutant Felipos", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185584] = {
					"Blasphemy", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[78623] = {
					"Cho'gall", -- [1]
					"Highmaul", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Castle Nathria", -- [2]
				},
				[143622] = {
					"Wild Imp", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164348] = {
					"Wandering Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[191215] = {
					"Tarasek Legionnaire", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[179446] = {
					"Incinerator Arkolath", -- [1]
					"Plaguefall", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168700] = {
					"Pestering Fiend", -- [1]
					"Castle Nathria", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164351] = {
					"Fading Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114320] = {
					"Lord Robin Daris", -- [1]
					"Return to Karazhan", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[186357] = {
					"Stellar Mote", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[175611] = {
					"The Tarragrue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167935] = {
					"Contagious Droplet", -- [1]
					"Plaguefall", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173053] = {
					"Afterimage of Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[187894] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[182777] = {
					"Rygelon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168960] = {
					"Fulfir the Scarred", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[179963] = {
					"Terror Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168961] = {
					"The Hungering Ones", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[126604] = {
					"Curious Voidstalker", -- [1]
					"Outland", -- [2]
				},
				[171520] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[186105] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[168962] = {
					"Reborn Phoenix", -- [1]
					"Castle Nathria", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173568] = {
					"Anima Crazed Worker", -- [1]
					"Castle Nathria", -- [2]
				},
				[186106] = {
					"Overthrown Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[115730] = {
					"Felguard Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[174336] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[174592] = {
					"Territorial Wader", -- [1]
					"Halls of Atonement", -- [2]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175616] = {
					"Zo'phex", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186107] = {
					"Vault Keeper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[200948] = {
					"Nokhud Apprentice", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[94621] = {
					"Invisible Stalker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166917] = {
					"Grove Wrecker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[169476] = {
					"Highway Serf", -- [1]
					"Halls of Atonement", -- [2]
				},
				[200943] = {
					"Electrified Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[172803] = {
					"Afterimage of Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[101639] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[177154] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[178427] = {
					"Deadsoul Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[166920] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[190205] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[190688] = {
					"Blazing Fiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[184533] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[76446] = {
					"Shadowmoon Dominator", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168713] = {
					"Dread Caller Skulfir", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[196855] = {
					"Braekkas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[177095] = {
					"Kyra", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180484] = {
					"Vilt", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[152594] = {
					"Broker Ve'ken", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80551] = {
					"Shard of Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[164621] = {
					"Oozing Slime", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167691] = {
					"Stasis Trap", -- [1]
					"Castle Nathria", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[180485] = {
					"Hips", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180741] = {
					"Xuen", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[130575] = {
					"Wandering Axebeak", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[184303] = {
					"Skittering Crawler", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[167948] = {
					"Infectious Monstrosity", -- [1]
					"Plaguefall", -- [2]
				},
				[180486] = {
					"Dirtwhistle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[154131] = {
					"Molten Fury", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[150293] = {
					"Mechagon Prowler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[166921] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[174090] = {
					"Nathrian Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[194816] = {
					"Forgewrought Monstrosity", -- [1]
					"Neltharus", -- [2]
				},
				[180743] = {
					"Niuzao", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[87589] = {
					"Ogron Warbringer", -- [1]
					"Highmaul", -- [2]
				},
				[151812] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[196581] = {
					"White Tiger Statue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187139] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[176394] = {
					"P.O.S.T. Worker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[177162] = {
					"Mawsworn Interrogator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[199916] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[187593] = {
					"Primal Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186116] = {
					"Gutshot", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[177613] = {
					"Burning Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177164] = {
					"Mawsworn Pillager", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[197857] = {
					"Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186120] = {
					"Treemouth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[181954] = {
					"Anduin Wrynn", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189886] = {
					"Blazebound Firestorm", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[177165] = {
					"Mawsworn Destroyer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186121] = {
					"Decatriarch Wratheye", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[114714] = {
					"Ghostly Steward", -- [1]
					"Return to Karazhan", -- [2]
				},
				[170257] = {
					"Broker Ve'nott", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72849] = {
					"Driftwatcher Rylak", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[178957] = {
					"Empowered Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185610] = {
					"Unmade Steward", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[184331] = {
					"Infinite Timereaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77483] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[193799] = {
					"Rotchanting Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112668] = {
					"Infernal Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[86185] = {
					"Night-Twisted Supplicant", -- [1]
					"Highmaul", -- [2]
				},
				[190406] = {
					"Aqualing", -- [1]
					"Halls of Infusion", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[186124] = {
					"Gashtooth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[80940] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[192764] = {
					"Flame Guardian", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[194241] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[191243] = {
					"Wild Lasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[185534] = {
					"Bonebolt Hunter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[145185] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[96677] = {
					"Steeljaw Grizzly", -- [1]
					"Halls of Valor", -- [2]
				},
				[175123] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80557] = {
					"Mote of Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[115484] = {
					"Fel Bat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[174100] = {
					"Nathrian Singuard", -- [1]
					"Castle Nathria", -- [2]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[178625] = {
					"Mawsworn Archer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[193291] = {
					"Apex Blazewing", -- [1]
					"Neltharus", -- [2]
				},
				[194745] = {
					"Rotfang Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[186127] = {
					"Ebonsteel Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[169751] = {
					"Ashen Wasp", -- [1]
					"Theater of Pain", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166169] = {
					"Adonias", -- [1]
					"Bastion Scenario", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[166170] = {
					"Phaedra", -- [1]
					"Bastion Scenario", -- [2]
				},
				[96934] = {
					"Valarjar Trapper", -- [1]
					"Halls of Valor", -- [2]
				},
				[82733] = {
					"Night-Twisted Shadowsworn", -- [1]
					"Highmaul", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[97788] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[192781] = {
					"Ore Elemental", -- [1]
					"Neltharus", -- [2]
				},
				[181011] = {
					"Ancient Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[178964] = {
					"Empowered Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176577] = {
					"Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196577] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[180159] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184020] = {
					"Hulking Berserker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76593] = {
					"Frost Wolf", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[180501] = {
					"Innocent Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[82594] = {
					"Grimrail Loader", -- [1]
					"Grimrail Depot", -- [2]
				},
				[187154] = {
					"Unstable Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[185363] = {
					"Manifestor Krugan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[178623] = {
					"Mawsworn Guard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81967] = {
					"Frostwall Nibbler", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[166429] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[176920] = {
					"Domination Arrow", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[144680] = {
					"Frida Ironbellows", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[78641] = {
					"Night-Twisted Faithful", -- [1]
					"Highmaul", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[166174] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[199182] = {
					"Jumping Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184335] = {
					"Infinite Agent", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[193553] = {
					"Nokhud Warhound", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[194487] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[192786] = {
					"Qalashi Plunderer", -- [1]
					"Neltharus", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[180470] = {
					"Verethian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176880] = {
					"Soulscream Tormentor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[197904] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[192787] = {
					"Qalashi Spinecrusher", -- [1]
					"Neltharus", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[164897] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[126491] = {
					"Netherguard Phaseblade", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[169429] = {
					"Shivarra", -- [1]
					"Castle Nathria", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[190485] = {
					"Erkhart Stormvein", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[166177] = {
					"Reinforced Pouncer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[187159] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[166178] = {
					"Forsworn Doubtguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187160] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[126492] = {
					"Netherguard Adept", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[114338] = {
					"Mana Confluence", -- [1]
					"Return to Karazhan", -- [2]
				},
				[175646] = {
					"P.O.S.T. Master", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[172064] = {
					"Unstable Larva", -- [1]
					"Plaguefall", -- [2]
				},
				[166915] = {
					"Possessed Tender", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[189464] = {
					"Qalashi Irontorch", -- [1]
					"Neltharus", -- [2]
				},
				[193558] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[76597] = {
					"Frost Wolf Alpha", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[196117] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[177950] = {
					"Soul Prison", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[155945] = {
					"Gherus the Chained", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166436] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[126493] = {
					"Netherguard Transmogrifier", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[166949] = {
					"Chi-Ji", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192464] = {
					"Raging Ember", -- [1]
					"Neltharus", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[176576] = {
					"Mawsworn Pyremancer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[198424] = {
					"Primalist Frostsculptor", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104822] = {
					"Flame of Woe", -- [1]
					"Halls of Valor", -- [2]
				},
				[183839] = {
					"Cartel Plunderer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[53732] = {
					"Unbound Smoldering Elemental", -- [1]
					"Firelands", -- [2]
				},
				[186353] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176404] = {
					"Dark Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[170790] = {
					"Tranquil Puddlewader", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[79414] = {
					"Training Dummy", -- [1]
					"8.0 Boost Experience - Horde", -- [2]
				},
				[171522] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[175652] = {
					"Lord of Woe", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[151579] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189470] = {
					"Lava Flare", -- [1]
					"Neltharus", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[80822] = {
					"Night-Twisted Berserker", -- [1]
					"Highmaul", -- [2]
				},
				[189467] = {
					"Qalashi Bonesplitter", -- [1]
					"Neltharus", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[197147] = {
					"Qalashi Honor Guard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[180665] = {
					"Gibbering Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[189471] = {
					"Qalashi Blacksmith", -- [1]
					"Neltharus", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166187] = {
					"Runestag", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[197148] = {
					"Qalashi Lavabearer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[189472] = {
					"Qalashi Lavabearer", -- [1]
					"Neltharus", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[180773] = {
					"Vigilant Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[190496] = {
					"Terros", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186658] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[195820] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[173609] = {
					"Nathrian Conservator", -- [1]
					"Castle Nathria", -- [2]
				},
				[182053] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166914] = {
					"Fallen Keeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184092] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189363] = {
					"Infected Lasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[114321] = {
					"Lord Crispin Ference", -- [1]
					"Return to Karazhan", -- [2]
				},
				[79545] = {
					"Nitrogg Thundertower", -- [1]
					"Grimrail Depot", -- [2]
				},
				[53094] = {
					"Patriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[182311] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177592] = {
					"Silver Hand Betrayer", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[189988] = {
					"Thing From Beyond", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186150] = {
					"Soul Fragment", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[187315] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[192803] = {
					"War Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196642] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173613] = {
					"Nathrian Registrar", -- [1]
					"Castle Nathria", -- [2]
				},
				[190245] = {
					"Broodkeeper Diurna", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[86071] = {
					"Rokkaa", -- [1]
					"Highmaul", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176940] = {
					"Soulember", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[189478] = {
					"Forgemaster Gorek", -- [1]
					"Neltharus", -- [2]
				},
				[181546] = {
					"Prototype of Renewal", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[97202] = {
					"Olmyr the Enlightened", -- [1]
					"Halls of Valor", -- [2]
				},
				[174126] = {
					"Baron Duskhollow", -- [1]
					"Castle Nathria", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[180779] = {
					"Terrorspine", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[79548] = {
					"Assault Cannon", -- [1]
					"Grimrail Depot", -- [2]
				},
				[166452] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[86072] = {
					"Oro", -- [1]
					"Highmaul", -- [2]
				},
				[81407] = {
					"Grimrail Bombardier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[178733] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199715] = {
					"Nokhud Battleguard", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[175663] = {
					"Hylbrande", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184107] = {
					"Runic Protector", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[196645] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180781] = {
					"Frothing Hound", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[181549] = {
					"Prototype of War", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[164406] = {
					"Shriekwing", -- [1]
					"Castle Nathria", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189466] = {
					"Irontorch Commander", -- [1]
					"Neltharus", -- [2]
				},
				[36272] = {
					"Apothecary Frye", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[151613] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[199718] = {
					"Nokhud Huntmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164407] = {
					"Sludgefist", -- [1]
					"Castle Nathria", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[153377] = {
					"Goop", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[150547] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[184622] = {
					"Incarnation of Torment", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[86330] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[199719] = {
					"Nokhud Wardog", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186122] = {
					"Rira Hackclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[179892] = {
					"Oros Coldheart", -- [1]
					"Plaguefall", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[184623] = {
					"Ancient Avian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[195821] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[181551] = {
					"Prototype of Duty", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[186128] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[189893] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[194273] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[180786] = {
					"Binding of Misery", -- [1]
					"Plaguefall", -- [2]
				},
				[86329] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[174134] = {
					"Lord Evershade", -- [1]
					"Castle Nathria", -- [2]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[114350] = {
					"Shade of Medivh", -- [1]
					"Return to Karazhan", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[80937] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189232] = {
					"Kokia Blazehoof", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114541] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[184627] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[146370] = {
					"Dark Iron Vanguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[189233] = {
					"Caustic Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[190690] = {
					"Thundering Ravager", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[103822] = {
					"Treant", -- [1]
					"Theater of Pain", -- [2]
				},
				[154663] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[178743] = {
					"Terrified Glitterfeather", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[195119] = {
					"Primalist Shockcaster", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167485] = {
					"Starving Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[189235] = {
					"Overseer Lahar", -- [1]
					"Neltharus", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[87229] = {
					"Iron Blood Mage", -- [1]
					"Highmaul", -- [2]
				},
				[178744] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[176953] = {
					"Mawsworn Flamehand", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[114715] = {
					"Ghostly Chef", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[182071] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[179257] = {
					"Burning Shade", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[80782] = {
					"Icespine Stinger", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[97081] = {
					"King Bjorn", -- [1]
					"Halls of Valor", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[167999] = {
					"Echo of Sin", -- [1]
					"Castle Nathria", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[95674] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[172282] = {
					"Web Wrap", -- [1]
					"Plaguefall", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195876] = {
					"Desecrated Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[193293] = {
					"Qalashi Warden", -- [1]
					"Neltharus", -- [2]
				},
				[176956] = {
					"Shadowsteel Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[185656] = {
					"Filth Caller", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[175677] = {
					"Smuggled Creature", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[182074] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184880] = {
					"Dominated Disrupter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[187192] = {
					"Rageclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[95675] = {
					"God-King Skovald", -- [1]
					"Halls of Valor", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[146367] = {
					"Char'golm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[184093] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[178734] = {
					"Mawsworn Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[97083] = {
					"King Ranulf", -- [1]
					"Halls of Valor", -- [2]
				},
				[95676] = {
					"Odyn", -- [1]
					"Halls of Valor", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168004] = {
					"Empowered Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165189] = {
					"gumi", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[178862] = {
					"Screamspike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[170418] = {
					"Goxul the Devourer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[97084] = {
					"King Tor", -- [1]
					"Halls of Valor", -- [2]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171521] = {
					"Dread Evoker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[176705] = {
					"Venza Goldfuse", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[153165] = {
					"Custodian Thonar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184126] = {
					"Defense Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[146365] = {
					"Blazing Fireguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[86326] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[184746] = {
					"Cartel Plunderer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180780] = {
					"Dreadmaw", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[194469] = {
					"Fledgling Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[170417] = {
					"Animated Stygia", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172030] = {
					"Tormenter Overlord", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168113] = {
					"General Grashaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168966] = {
					"Brightsparkle", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[187967] = {
					"Sennarth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[166919] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[189247] = {
					"Tamed Phoenix", -- [1]
					"Neltharus", -- [2]
				},
				[87619] = {
					"Gorian Warden", -- [1]
					"Highmaul", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184130] = {
					"Earthen Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185154] = {
					"Overthrown Protector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[184131] = {
					"Earthen Guardian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185155] = {
					"Kin'tessa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[153015] = {
					"Bound Soul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179526] = {
					"Troz'igal the Oppressor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173641] = {
					"Nathrian Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[184132] = {
					"Earthen Warder", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[11859] = {
					"Doomguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185581] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174335] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[182823] = {
					"Cosmic Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167246] = {
					"Unleashed Trauma", -- [1]
					"Bastion Scenario", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[184134] = {
					"Scavenging Leaper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114716] = {
					"Ghostly Baker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178601] = {
					"Kevin's Oozeling", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184791] = {
					"Inner Hatred", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166225] = {
					"Beckoned Doubt", -- [1]
					"Bastion Scenario", -- [2]
				},
				[191045] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[173134] = {
					"Darksworn Goliath", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[113971] = {
					"Maiden of Virtue", -- [1]
					"Return to Karazhan", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[17252] = {
					"Thooghun", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179133] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[53167] = {
					"Unbound Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[194373] = {
					"Brackenhide Gnoll", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[150249] = {
					"Pistonhead Scrapper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[157016] = {
					"Imperial Archivist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167507] = {
					"Veilwing Fledgeling", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Halls of Valor", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[184651] = {
					"Subjugator Zeltoth", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155226] = {
					"Verdant Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[174161] = {
					"Lady Sinsear", -- [1]
					"Castle Nathria", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[184908] = {
					"Vy Interceptor", -- [1]
					"Halls of Atonement", -- [2]
				},
				[193352] = {
					"Hextrick Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174162] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[192329] = {
					"Territorial Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[196679] = {
					"Frozen Shroud", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[185346] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[170157] = {
					"Stygian Runesmith", -- [1]
					"The Shadowlands", -- [2]
				},
				[114364] = {
					"Mana-Gorged Wyrm", -- [1]
					"Return to Karazhan", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[184910] = {
					"Wo Drifter", -- [1]
					"Theater of Pain", -- [2]
				},
				[176879] = {
					"Hollowsoul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179281] = {
					"Coagulated Blood", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[184143] = {
					"Hyperlight Archon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[184911] = {
					"Urh Dismantler", -- [1]
					"Halls of Atonement", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[185607] = {
					"Lost Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189773] = {
					"Protoform Barrier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186191] = {
					"Decay Speaker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[170071] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184603] = {
					"Ancient Bufonid", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180990] = {
					"The Jailer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[107073] = {
					"Duskwatch Reinforcement", -- [1]
					"Court of Stars", -- [2]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[150295] = {
					"Tank Buster MK1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183499] = {
					"Hired Muscle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184522] = {
					"Vigilant Custodian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[86073] = {
					"Lokk", -- [1]
					"Highmaul", -- [2]
				},
				[166491] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[191311] = {
					"Infinite Whelp", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189266] = {
					"Qalashi Trainee", -- [1]
					"Neltharus", -- [2]
				},
				[184659] = {
					"Dominated Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166492] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[189265] = {
					"Qalashi Bonetender", -- [1]
					"Neltharus", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[165469] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[191313] = {
					"Bubbling Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180567] = {
					"Frenzied Nightclaw", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[194896] = {
					"Primal Stormshield", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164447] = {
					"Skuld", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Halls of Atonement", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[176474] = {
					"Goopdtwo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166495] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[152644] = {
					"Deadsoul Drifter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165472] = {
					"Nathrian Siphoner", -- [1]
					"Castle Nathria", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[166496] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[130489] = {
					"Dazarian Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[169055] = {
					"Marrow Scraper", -- [1]
					"Theater of Pain", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168033] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169823] = {
					"Gorm Behemoth", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[196946] = {
					"Lurking Lunker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[86607] = {
					"Iron Flame Technician", -- [1]
					"Highmaul", -- [2]
				},
				[173406] = {
					"Renegade Abomination", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165474] = {
					"Nathrian Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[189340] = {
					"Chargath, Bane of Scales", -- [1]
					"Neltharus", -- [2]
				},
				[99657] = {
					"Deranged Mindflayer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180640] = {
					"Stormbound Breaker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194389] = {
					"Lava Spawn", -- [1]
					"Neltharus", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[81362] = {
					"Frostwall Goren", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[181548] = {
					"Prototype of Absolution", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[152612] = {
					"Subjugator Klontzas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[151659] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[81235] = {
					"Grimrail Laborer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[175456] = {
					"Swarm Training Dummy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[185691] = {
					"Vicious Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[153451] = {
					"Kosarus the Fallen", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196694] = {
					"Arcane Forager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[86609] = {
					"Iron Warmaster", -- [1]
					"Highmaul", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[153196] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177159] = {
					"Soulburner Fraxin", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[188252] = {
					"Melidrussa Chillworn", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[185181] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[114628] = {
					"Skeletal Waiter", -- [1]
					"Return to Karazhan", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[81779] = {
					"Ogron Mauler", -- [1]
					"Highmaul", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[181856] = {
					"Point Defense Drone", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186206] = {
					"Cruel Bonecrusher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[178018] = {
					"Vicious Ghoul", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[165481] = {
					"Court Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114790] = {
					"Viz'aduum the Watcher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[86611] = {
					"Mind Fungus", -- [1]
					"Highmaul", -- [2]
				},
				[127295] = {
					"Void Image", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[201560] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[175205] = {
					"Baleful Shadow", -- [1]
					"Castle Nathria", -- [2]
				},
				[176395] = {
					"Overloaded Mailemental", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[186208] = {
					"Rotbow Stalker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172647] = {
					"Parasitic Infestor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[183138] = {
					"Inchoate Shadow", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[114318] = {
					"Baron Rafe Dreuger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[181859] = {
					"Volatile Materium", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114675] = {
					"Guardian's Image", -- [1]
					"Return to Karazhan", -- [2]
				},
				[144246] = {
					"K.U.-J.0.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[86612] = {
					"Spore Shooter", -- [1]
					"Highmaul", -- [2]
				},
				[80599] = {
					"Night-Twisted Earthwarper", -- [1]
					"Highmaul", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[179434] = {
					"Mawsworn Doubtcaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114247] = {
					"The Curator", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[173161] = {
					"Lady Sinsear", -- [1]
					"Castle Nathria", -- [2]
				},
				[183396] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[116550] = {
					"Spectral Patron", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155250] = {
					"Decayspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82519] = {
					"Highmaul Conscript", -- [1]
					"Highmaul", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[144248] = {
					"Head Machinist Sparkflux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[173162] = {
					"Lord Evershade", -- [1]
					"Castle Nathria", -- [2]
				},
				[197982] = {
					"Storm Warrior", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[155251] = {
					"Elder Longbranch", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173163] = {
					"Baron Duskhollow", -- [1]
					"Castle Nathria", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[144249] = {
					"Omega Buster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[167022] = {
					"Battlesewn Render", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[179560] = {
					"Fragment of Troz'igal", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[173164] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168973] = {
					"High Torturer Darithos", -- [1]
					"Castle Nathria", -- [2]
				},
				[153382] = {
					"Maw of the Maw", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[79015] = {
					"Ko'ragh", -- [1]
					"Highmaul", -- [2]
				},
				[182169] = {
					"Lihuvim", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[194147] = {
					"Volcanius", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187238] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[114249] = {
					"Volatile Energy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173469] = {
					"Kullan", -- [1]
					"Castle Nathria", -- [2]
				},
				[178539] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[177004] = {
					"Tortured Amalgamation", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[144299] = {
					"Workshop Defender", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115401] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[175725] = {
					"Eye of the Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[178029] = {
					"Mawsworn Wingsoldier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[156023] = {
					"Miniature Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[126788] = {
					"Shadowy Voidwyrm", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[53141] = {
					"Molten Surger", -- [1]
					"Firelands", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[79068] = {
					"Iron Grunt", -- [1]
					"Highmaul", -- [2]
				},
				[99922] = {
					"Ebonclaw Packmate", -- [1]
					"Halls of Valor", -- [2]
				},
				[150396] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183404] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[87768] = {
					"Night-Twisted Fanatic", -- [1]
					"Highmaul", -- [2]
				},
				[166451] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[122532] = {
					"Ember of Taeshalach", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[175729] = {
					"Remnant of Ner'zhul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150397] = {
					"King Mechagon", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[174194] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[188011] = {
					"Primal Terrasentry", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[186220] = {
					"Brackenhide Shaper", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183406] = {
					"Colossal Realmcrafter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[196200] = {
					"Algeth'ar Echoknight", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[114252] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[175730] = {
					"Fatescribe Roh-Kalo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[114636] = {
					"Phantom Guardsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[183407] = {
					"Eternal Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166046] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[175731] = {
					"Guardian of the First Ones", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175732] = {
					"Sylvanas Windrunner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[152703] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[167033] = {
					"Putrid Shambler", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[114637] = {
					"Spectral Sentry", -- [1]
					"Return to Karazhan", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[135816] = {
					"Vilefiend", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[100820] = {
					"Spirit Wolf", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[183409] = {
					"Pinning Weapon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[196203] = {
					"Ethereal Restorer", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[166523] = {
					"Vesper Totem", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[177269] = {
					"So'leah", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[166012] = {
					"Athanos", -- [1]
					"Bastion Scenario", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[164476] = {
					"Tortured Amalgamation", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183413] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186226] = {
					"Fetid Rotsinger", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[85341] = {
					"Lunarfall Raccoon", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[95832] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[186227] = {
					"Monstrous Decay", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[189555] = {
					"Astral Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[166525] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[82399] = {
					"Ogron Earthshaker", -- [1]
					"Highmaul", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[165276] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[184693] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186229] = {
					"Wilted Oak", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[82400] = {
					"Ogron Brute", -- [1]
					"Highmaul", -- [2]
				},
				[195697] = {
					"Thunderbeast Rider", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[183416] = {
					"Bound Realmbreaker", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177787] = {
					"Mawsworn Hopebreaker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173949] = {
					"Nathrian Soldier", -- [1]
					"Castle Nathria", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53121] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[187767] = {
					"Embar Firepath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[150154] = {
					"Saurolisk Bonenipper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[169601] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[166019] = {
					"Shimmermoth", -- [1]
					"Halls of Atonement", -- [2]
				},
				[199027] = {
					"Magmas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[184954] = {
					"Ancient Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[181850] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[179837] = {
					"Tracker Zo'korss", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165764] = {
					"Rockbound Vanquisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[78948] = {
					"Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[199028] = {
					"Glacias", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168579] = {
					"Fen Hatchling", -- [1]
					"Plaguefall", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173953] = {
					"Loyal Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199029] = {
					"Cyclas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[190586] = {
					"Earth Breaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[199030] = {
					"Loamas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150159] = {
					"King Gobbamak", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[114260] = {
					"Mrrgria", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187772] = {
					"Opalfang", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198263] = {
					"Stalwart Broodwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[82532] = {
					"Krush", -- [1]
					"Highmaul", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173444] = {
					"Caramain", -- [1]
					"Castle Nathria", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[190588] = {
					"Tectonic Crusher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180865] = {
					"Twisted Warden", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183424] = {
					"Virtuous Gentleman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173445] = {
					"Sindrel", -- [1]
					"Castle Nathria", -- [2]
				},
				[126799] = {
					"Coruscating Voidlord", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176531] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177285] = {
					"Mawsworn Gatekeeper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[82533] = {
					"Smash", -- [1]
					"Highmaul", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[198266] = {
					"Pouncing Broodswarmer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173191] = {
					"Soulstalker V'lara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168073] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[184961] = {
					"Gnarled Skitter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[114262] = {
					"Attumen the Huntsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173448] = {
					"Dragost", -- [1]
					"Castle Nathria", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168074] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[186242] = {
					"Skulking Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[184962] = {
					"Gnarled Scavenger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[199547] = {
					"Frostforged Zealot", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[177286] = {
					"Phantasmic Amalgamation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[99678] = {
					"Lingering Corruption", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'nyy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[79720] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[156818] = {
					"Wrathion", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[199549] = {
					"Flamesworn Herald", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183429] = {
					"Ebon Chainguard", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[154022] = {
					"Prisonbreak Packleader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[53120] = {
					"Flamewaker Pathfinder", -- [1]
					"Firelands", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179080] = {
					"Empowered Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114264] = {
					"Midnight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[191046] = {
					"Shady Dealer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167566] = {
					"Bleakwing Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[53115] = {
					"Molten Lord", -- [1]
					"Firelands", -- [2]
				},
				[174208] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[96609] = {
					"Gildedfur Stag", -- [1]
					"Halls of Valor", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167055] = {
					"Rot Flinger", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[173708] = {
					"Anchoring Rune", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[186246] = {
					"Fleshripper Vulture", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114265] = {
					"Gang Ruffian", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183432] = {
					"Ebon Dominator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183688] = {
					"Stasis Trap", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165521] = {
					"Lady Inerva Darkvein", -- [1]
					"Castle Nathria", -- [2]
				},
				[77803] = {
					"Railmaster Rocketspark", -- [1]
					"Grimrail Depot", -- [2]
				},
				[36296] = {
					"Apothecary Hummel", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[78121] = {
					"Gorian Warmage", -- [1]
					"Highmaul", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189318] = {
					"Infected Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[115417] = {
					"Rat", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183945] = {
					"Unstable Matter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[95843] = {
					"King Haldor", -- [1]
					"Halls of Valor", -- [2]
				},
				[53119] = {
					"Flamewaker Forward Guard", -- [1]
					"Firelands", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[114650] = {
					"Phantom Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164342] = {
					"Mawsworn Defender", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[170385] = {
					"Writhing Misery", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96611] = {
					"Angerhoof Bull", -- [1]
					"Halls of Valor", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[115418] = {
					"Spider", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[85225] = {
					"Gorian Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[197509] = {
					"Primal Thundercloud", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[147614] = {
					"Dark Iron Primalist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[73967] = {
					"Niuzao", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[87910] = {
					"Gorian Rune-Mender", -- [1]
					"Highmaul", -- [2]
				},
				[196482] = {
					"Overgrown Ancient", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[115419] = {
					"Ancient Tome", -- [1]
					"Return to Karazhan", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Theater of Pain", -- [2]
				},
				[177161] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183438] = {
					"Chainbound Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[184206] = {
					"Malicious Imp", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[96608] = {
					"Ebonclaw Worg", -- [1]
					"Halls of Valor", -- [2]
				},
				[176520] = {
					"Ocular Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[187021] = {
					"Rotbow Sentry", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[82534] = {
					"Spike", -- [1]
					"Highmaul", -- [2]
				},
				[183439] = {
					"Mawsworn Annihilator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180113] = {
					"Rattling Mage", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[114261] = {
					"Toe Knee", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173973] = {
					"Nathrian Tracker", -- [1]
					"Castle Nathria", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[154015] = {
					"Escaped Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[183669] = {
					"Fiendish Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[154016] = {
					"Prisonbreak Soulmender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[181395] = {
					"Skolex", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165275] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[114526] = {
					"Ghostly Understudy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178043] = {
					"Mawsworn Lancer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[82528] = {
					"Gorian Arcanist", -- [1]
					"Highmaul", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[178041] = {
					"Mawsworn Shackler", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173464] = {
					"Deplina", -- [1]
					"Castle Nathria", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[189299] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[147621] = {
					"Dark Iron Vanguard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[144295] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152995] = {
					"Warden of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183412] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[178071] = {
					"Maw Assassin", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[181398] = {
					"Mal'Ganis", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173466] = {
					"Fara", -- [1]
					"Castle Nathria", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[178072] = {
					"Anduin Wrynn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76914] = {
					"Coldtusk", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[176537] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[181399] = {
					"Kin'tessa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165279] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167949] = {
					"Plague-Ridden Survivor", -- [1]
					"Plaguefall", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176538] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[175727] = {
					"Soulrender Dormazain", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[200035] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[77404] = {
					"The Butcher", -- [1]
					"Highmaul", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[176539] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175726] = {
					"Skyja", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[170910] = {
					"Shimmering Wader", -- [1]
					"Halls of Atonement", -- [2]
				},
				[156022] = {
					"Bubbling Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[163746] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[181244] = {
					"Domination Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[123680] = {
					"Dark Keeper Aedis", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[10467] = {
					"Mana Tide Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[144300] = {
					"Mechagon Citizen", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[78549] = {
					"Gorian Reaver", -- [1]
					"Highmaul", -- [2]
				},
				[157094] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170093] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183398] = {
					"Ancient Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180379] = {
					"Mawsworn Arbalest", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[181861] = {
					"Magmatusk", -- [1]
					"Neltharus", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[144301] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[77428] = {
					"Imperator Mar'gok", -- [1]
					"Highmaul", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168098] = {
					"Empowered Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[86256] = {
					"Gorian High Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[184986] = {
					"Kurog Grimtotem", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[187231] = {
					"Wither Biter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[144244] = {
					"The Platinum Pummeler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[144303] = {
					"G.U.A.R.D.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189669] = {
					"Binding Spear", -- [1]
					"Neltharus", -- [2]
				},
				[153003] = {
					"Soul Fragment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[178079] = {
					"The Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189531] = {
					"Decayed Elder", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[172899] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[193944] = {
					"Qalashi Lavamancer", -- [1]
					"Neltharus", -- [2]
				},
				[194647] = {
					"Thunder Caller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184733] = {
					"Dominated Grunt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[150190] = {
					"HK-8 Aerial Oppression Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[151658] = {
					"Strider Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157099] = {
					"Imperial Censor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81780] = {
					"Guard Captain Thag", -- [1]
					"Highmaul", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[77942] = {
					"Primal Storm Elemental", -- [1]
					"Theater of Pain", -- [2]
				},
				[184734] = {
					"Sacred Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[187224] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177500] = {
					"Corsair Brute", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[114625] = {
					"Phantom Guest", -- [1]
					"Return to Karazhan", -- [2]
				},
				[180385] = {
					"Condemned Soul Remnant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[184735] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81269] = {
					"Warden Thul'tok", -- [1]
					"Highmaul", -- [2]
				},
				[178624] = {
					"Mawsworn Sentry", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[126559] = {
					"Dark Manifestation", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[178732] = {
					"Mawsworn Runesmith", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[190366] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184737] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81270] = {
					"Gorian Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[81398] = {
					"Frostwall Goren Hatchling", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[77816] = {
					"Borka the Brute", -- [1]
					"Grimrail Depot", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184738] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[150195] = {
					"Gnome-Eating Slime", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[94960] = {
					"Hymdall", -- [1]
					"Halls of Valor", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[180389] = {
					"Mawsworn Rageguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167406] = {
					"Sire Denathrius", -- [1]
					"Castle Nathria", -- [2]
				},
				[168110] = {
					"Empowered Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[153011] = {
					"Binder Baritas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152500] = {
					"Deadsoul Amalgam", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185508] = {
					"Claw Fighter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[81272] = {
					"Gorian Runemaster", -- [1]
					"Highmaul", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[184091] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[183974] = {
					"Cartel Plunderer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[114792] = {
					"Virtuous Lady", -- [1]
					"Return to Karazhan", -- [2]
				},
				[184742] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[183463] = {
					"Remnant of a Fallen King", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[78714] = {
					"Kargath Bladefist", -- [1]
					"Highmaul", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168111] = {
					"Empowered Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194622] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[197793] = {
					"Awakened Juggernaut", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[157109] = {
					"Vampire Bat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[194467] = {
					"Brackenhide Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168112] = {
					"General Kaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[176556] = {
					"Alcruux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180906] = {
					"Halondrus", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[166913] = {
					"Corrupted Guardian", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[151329] = {
					"Warden Skoldus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104818] = {
					"Ancestral Protection Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[53127] = {
					"Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[79739] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[114794] = {
					"Skeletal Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164345] = {
					"Scavenging Soul Eater", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[53134] = {
					"Ancient Core Hound", -- [1]
					"Firelands", -- [2]
				},
				[184520] = {
					"Anduin's Despair", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[192788] = {
					"Qalashi Thaumaturge", -- [1]
					"Neltharus", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[85241] = {
					"Night-Twisted Brute", -- [1]
					"Highmaul", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[146366] = {
					"Molten Hound", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[78077] = {
					"Volatile Anomaly", -- [1]
					"Highmaul", -- [2]
				},
				[199333] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[198310] = {
					"Flame Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186284] = {
					"Gutchewer Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[180399] = {
					"Evaile", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[110063] = {
					"Beast", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[178626] = {
					"Mawrat", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[172979] = {
					"Honeydew Sporeflutterer", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[197799] = {
					"Quarry Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[53128] = {
					"Giant Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[178163] = {
					"Murkbrine Shorerunner", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184494] = {
					"Anduin's Doubt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176562] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[197801] = {
					"Awakened Terrasentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185574] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[179890] = {
					"Executioner Varruth", -- [1]
					"Plaguefall", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[181224] = {
					"Dausegne", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[185008] = {
					"Volatile Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[146371] = {
					"Dark Iron Primalist", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[173238] = {
					"Deadsoul Strider", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177588] = {
					"Lordaeron Footman", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[179891] = {
					"Soggodon the Breaker", -- [1]
					"Plaguefall", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[126489] = {
					"Creeping Void", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[189227] = {
					"Qalashi Hunter", -- [1]
					"Neltharus", -- [2]
				},
				[179124] = {
					"Shade of Destiny", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[193709] = {
					"Primalist Earthwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[185347] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[179893] = {
					"Cartel Skulker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166453] = {
					"Darkturned Clawguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[179894] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26125] = {
					"Risen Ghoul", -- [1]
					"Castle Nathria", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[194991] = {
					"Oathsworn Vanguard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[185268] = {
					"Ebonsteel Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[157122] = {
					"Patrician Cromwell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[152517] = {
					"Deadsoul Lifetaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[175546] = {
					"Timecap'n Hooktail", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[153285] = {
					"Training Dummy", -- [1]
					"Kalimdor", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[177594] = {
					"Mawsworn Agonizer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173756] = {
					"Stone Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[184792] = {
					"Cartel Overseer", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176571] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[185271] = {
					"Stellar Mote", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[179386] = {
					"Corsair Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[183992] = {
					"Automated Defense Matrix", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114801] = {
					"Spectral Apprentice", -- [1]
					"Return to Karazhan", -- [2]
				},
				[176572] = {
					"Mawsworn Accursed", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[194330] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[185528] = {
					"Trickclaw Mystic", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"Halls of Valor", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Castle Nathria", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177877] = {
					"Desiccated Magus", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[191926] = {
					"Fishface", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[175806] = {
					"So'azmi", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184535] = {
					"Overthrown Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114802] = {
					"Spectral Journeyman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[176574] = {
					"Mawsworn Soulkeeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[185274] = {
					"Astral Particle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165060] = {
					"Animimic", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[191510] = {
					"Smoldering Hellion", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195580] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[193555] = {
					"Nokhud Villager", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[185275] = {
					"Kelmortos", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[126470] = {
					"Nether-Prince Durzaan", -- [1]
					"Telogrus Rift Scenario", -- [2]
				},
				[197831] = {
					"Quarry Stonebreaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[194999] = {
					"Volatile Spark", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[179135] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167109] = {
					"Skeletal Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[177600] = {
					"Mawsworn Realmbreaker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[177856] = {
					"Vicious Ghoul", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[180415] = {
					"Mawsworn Axeguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[103673] = {
					"Darkglare", -- [1]
					"Theater of Pain", -- [2]
				},
				[150222] = {
					"Gunker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179136] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169157] = {
					"Mudlump", -- [1]
					"Castle Nathria", -- [2]
				},
				[177601] = {
					"Mawsworn Invoker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[198081] = {
					"Quarry Earthshaper", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[169925] = {
					"Begrudging Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[80005] = {
					"Skylord Tovra", -- [1]
					"Grimrail Depot", -- [2]
				},
				[176578] = {
					"Vault Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[171461] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[186125] = {
					"Tricktotem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176579] = {
					"Keeper Hazaduum", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164553] = {
					"Misty Ally", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[177859] = {
					"Opengut Abomination", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[192769] = {
					"Thondrozus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[86275] = {
					"Gorian Enforcer", -- [1]
					"Highmaul", -- [2]
				},
				[199353] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[183745] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177860] = {
					"Desiccated Swordsman", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[182210] = {
					"Magically Regulated Automa Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[36565] = {
					"Apothecary Baxter", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[187638] = {
					"Flamescale Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[82698] = {
					"Night-Twisted Devout", -- [1]
					"Highmaul", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167115] = {
					"Necromancer Warcaster", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[175559] = {
					"Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[192761] = {
					"Iskakx", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[99868] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[168967] = {
					"Gerwyn", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[191714] = {
					"Seeking Stormling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[115831] = {
					"Mana Devourer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[200131] = {
					"Sha-Touched Guardian", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
			},
			["indicator_anchor"] = {
				["y"] = 3,
				["x"] = -14,
				["side"] = 7,
			},
			["health_selection_overlay_alpha"] = 0,
			["aura_stack_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.06999999284744263, -- [4]
			},
			["minor_height_scale"] = 0.9999999403953552,
			["aura_padding"] = 1.5,
			["indicator_worldboss"] = false,
			["aura_width2"] = 20,
			["aura_stack_size"] = 7,
			["aura_show_offensive_cd"] = true,
			["aura_show_crowdcontrol"] = true,
			["aura_border_colors"] = {
				["steal_or_purge"] = {
					0.9019607843137255, -- [1]
					0.9019607843137255, -- [2]
					0.9019607843137255, -- [3]
				},
				["offensive"] = {
					nil, -- [1]
					0, -- [2]
					0, -- [3]
				},
				["crowdcontrol"] = {
					0, -- [1]
					0, -- [2]
					0, -- [3]
				},
				["defensive"] = {
					0.8509803921568627, -- [1]
					0.4509803921568628, -- [2]
					0.1019607843137255, -- [3]
				},
				["is_buff"] = {
					nil, -- [1]
					0, -- [2]
					0, -- [3]
				},
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Fixate On You"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Shield Interrupt"] = 2,
				["Spiteful Affix"] = 3,
				["Fixate"] = 11,
				["Auto Set Skull"] = 11,
				["Explosion Affix M+"] = 14,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Cast - Stop Casting"] = 4,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Aura - Buff Alert"] = 15,
				["Cast - Quick Flash"] = 2,
				["Unit - Important"] = 11,
				["Unit - Show Energy"] = 11,
			},
			["extra_icon_anchor"] = {
				["x"] = -2,
			},
			["extra_icon_wide_icon"] = false,
			["range_check_alpha"] = 0.5999999642372131,
			["aura_frame2_anchor"] = {
				["y"] = 18.19999694824219,
				["side"] = 7,
			},
			["aura_alpha"] = 1,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
			["debuff_show_cc"] = false,
			["transparency_behavior"] = 3,
			["spell_animations"] = false,
			["debuff_show_cc_border"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
			},
			["aura_consolidate"] = true,
			["extra_icon_width"] = 15,
			["health_statusbar_texture"] = "Atrocity",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Combo Points"] = 6,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Attacking Specific Unit"] = 2,
				["Execute Range"] = 1,
			},
			["minor_width_scale"] = 0.9999999403953552,
			["castbar_target_text_size"] = 13,
			["aura_frame1_anchor"] = {
				["y"] = 1.599990844726563,
				["side"] = 1,
			},
			["aura_timer_text_font"] = "Expressway",
			["cast_statusbar_color_finished"] = {
				0.392156862745098, -- [1]
				0.996078431372549, -- [2]
				0.6392156862745098, -- [3]
			},
			["extra_icon_stack_font"] = "Expressway",
			["aura_height"] = 15,
			["non_targeted_alpha_enabled"] = true,
			["cast_statusbar_bgtexture"] = "Atrocity",
			["aura2_x_offset"] = 0,
			["target_indicator"] = "NONE",
			["extra_icon_stack_size"] = 7,
			["aura_show_buff_by_the_unit"] = false,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateOverlapV"] = "1.6000000238419",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplatePersonalShowInCombat"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.1000000238419",
				["nameplateShowFriends"] = "0",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowDebuffsOnFriendly"] = "0",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["ShowClassColorInNameplate"] = "1",
				["nameplateLargeTopInset"] = "0.085",
			},
			["login_counter"] = 16260,
			["extra_icon_caster_name"] = false,
			["aura_cooldown_show_swipe"] = false,
			["aura_stack_font"] = "Expressway",
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.200000047683716,
				},
			},
			["aura_timer_text_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.06999999284744263, -- [4]
			},
			["auras_per_row_amount"] = 6,
			["hover_highlight_alpha"] = 0.2999999821186066,
			["plate_config"] = {
				["player"] = {
					["castbar_enabled"] = false,
					["power_percent_text_enabled"] = false,
					["healthbar_enabled"] = false,
					["power_enabled"] = false,
					["percent_text_enabled"] = false,
					["percent_show_health"] = false,
					["spellpercent_text_enabled"] = false,
					["percent_text_ooc"] = false,
					["percent_show_percent"] = false,
					["percent_text_show_decimals"] = false,
					["module_enabled"] = false,
				},
				["friendlyplayer"] = {
					["big_actorname_text_size"] = 9,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 7,
					["actorname_use_class_color"] = true,
					["cast"] = {
						110, -- [1]
						5, -- [2]
					},
					["big_actortitle_text_size"] = 9,
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["quest_color"] = {
						0.5, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["actorname_use_guild_color"] = false,
					["all_names"] = false,
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["only_damaged"] = false,
					["only_thename"] = true,
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actorname_text_color"] = {
						0.5, -- [1]
						1, -- [2]
						0.5, -- [3]
					},
					["percent_show_percent"] = false,
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						110, -- [1]
						5, -- [2]
					},
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actorname_text_outline"] = "OUTLINE",
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Expressway",
					["actorname_use_friends_color"] = false,
					["level_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.2999999821186066,
					["percent_text_size"] = 7,
					["percent_text_font"] = "Expressway",
					["buff_frame_y_offset"] = 0,
					["quest_enabled"] = true,
					["spellname_text_size"] = 7,
					["quest_color_enabled"] = true,
					["relevance_state"] = 3,
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["actorname_text_size"] = 7,
					["only_names"] = true,
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["spellname_text_font"] = "Expressway",
				},
				["friendlynpc"] = {
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 7,
					["cast"] = {
						110, -- [1]
						5, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["all_names"] = false,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["cast_incombat"] = {
						110, -- [1]
						5, -- [2]
					},
					["spellname_text_size"] = 7,
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_show_decimals"] = false,
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["actorname_text_size"] = 7,
					["big_actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 7,
					["level_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 7,
					["level_text_alpha"] = 0.2999999821186066,
					["percent_text_size"] = 7,
					["percent_text_font"] = "Expressway",
					["percent_show_percent"] = false,
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["relevance_state"] = 3,
					["spellname_text_font"] = "Expressway",
				},
				["enemynpc"] = {
					["castbar_offset"] = -1.600006103515625,
					["spellpercent_text_font"] = "Expressway",
					["cast"] = {
						110, -- [1]
					},
					["big_actortitle_text_size"] = 8,
					["spellpercent_text_anchor"] = {
						["x"] = 0.5,
					},
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["quest_color_enemy"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
					},
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						110, -- [1]
						10, -- [2]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 11,
					},
					["spellname_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
					},
					["actorname_text_size"] = 7,
					["percent_text_show_decimals"] = false,
					["big_actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 8,
					["level_text_outline"] = "OUTLINE",
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_alpha"] = 0.2999999821186066,
					["percent_text_size"] = 7,
					["percent_text_font"] = "Expressway",
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_size"] = 7,
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["actorname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["spellpercent_text_enabled"] = false,
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_enabled"] = false,
				},
				["global_health_height"] = 15,
				["enemyplayer"] = {
					["big_actorname_text_size"] = 8,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 8,
					["cast"] = {
						110, -- [1]
						9, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 0.5,
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["quest_color_enemy"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "Expressway",
					["spellpercent_text_size"] = 7,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						110, -- [1]
						9, -- [2]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["spellname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.06999999284744263, -- [4]
					},
					["percent_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 11,
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["quest_color_neutral"] = {
						0.8274509803921568, -- [1]
						0.4509803921568628, -- [2]
						0.6980392156862745, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 7,
					["level_text_outline"] = "OUTLINE",
					["big_actorname_text_font"] = "Expressway",
					["castbar_offset"] = -1.600006103515625,
					["actorname_text_anchor"] = {
						["x"] = 0.5,
						["side"] = 10,
					},
					["spellpercent_text_enabled"] = false,
					["big_actortitle_text_size"] = 8,
					["percent_text_font"] = "Expressway",
					["quest_enabled"] = true,
					["level_text_alpha"] = 0.2999999821186066,
					["percent_show_health"] = false,
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						110, -- [1]
						15, -- [2]
					},
					["health"] = {
						110, -- [1]
						15, -- [2]
					},
					["spellname_text_size"] = 7,
					["percent_text_size"] = 7,
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_font"] = "Expressway",
					["level_text_enabled"] = false,
				},
				["global_health_width"] = 110,
			},
			["aura_y_offset"] = 1.599990844726563,
			["aura_show_defensive_cd"] = true,
			["focus_texture"] = "Kait",
			["cast_statusbar_bgcolor"] = {
				0.03137254901960784, -- [1]
				0.03137254901960784, -- [2]
				0.03137254901960784, -- [3]
				0.4670491218566895, -- [4]
			},
			["cast_statusbar_use_fade_effects"] = false,
			["border_thickness"] = 0.4999999701976776,
			["resources_settings"] = {
				["chr"] = {
					["Player-57-0D480764"] = "SoulShards",
					["Player-57-0B7D8135"] = "Chi",
					["Player-57-0B1CFD21"] = "ComboPoints",
					["Player-57-0B7B51F3"] = "ComboPoints",
					["Player-57-0B43B146"] = "SoulShards",
					["Player-57-08C1DC17"] = "HolyPower",
					["Player-57-0BA165CE"] = "Runes",
					["Player-57-0D48734C"] = "SoulShards",
					["Player-57-0A630FDB"] = "ArcaneCharges",
					["Player-57-0D62515D"] = "Essence",
					["Player-57-0D4542F5"] = "ComboPoints",
				},
			},
			["indicator_scale"] = 0.7999999523162842,
			["cast_statusbar_spark_offset"] = -4,
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["castbar_icon_size"] = "same as castbar plus healthbar",
			["npc_colors"] = {
				[178139] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[184910] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[168878] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168942] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[184911] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[168112] = {
					false, -- [1]
					false, -- [2]
					"transparent", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[76104] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[178141] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168113] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[42859] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[95842] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[115388] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185680] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[164921] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162047] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168627] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[177889] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189706] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[174568] = {
					false, -- [1]
					false, -- [2]
					"azure", -- [3]
				},
				[150168] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185683] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[174569] = {
					false, -- [1]
					false, -- [2]
					"azure", -- [3]
				},
				[155215] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[150169] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[195265] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168310] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[166969] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163520] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[177892] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[185685] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[168886] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166970] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163457] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[195842] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[199547] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166396] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163458] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[155219] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163459] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[105715] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[164737] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[199549] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164929] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167612] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[144298] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165824] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[77483] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[81603] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[192333] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168891] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[196102] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168572] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162057] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[187160] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165762] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164804] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167998] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167615] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[194315] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168318] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[170490] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[194316] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154011] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[155225] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[194317] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166276] = {
					false, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[155226] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[180840] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164552] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[53115] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[121975] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[174773] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[194894] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168578] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[171772] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[172858] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154015] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[173178] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163086] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[154016] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[104251] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168580] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[167111] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[86526] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[80937] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165515] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[164557] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154018] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[170882] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[114249] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[180336] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[150251] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154020] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[116549] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[151657] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[179890] = {
					false, -- [1]
					false, -- [2]
					"palevioletred", -- [3]
				},
				[162133] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196115] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[179891] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[197904] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[97068] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169927] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[196116] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164562] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165010] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179446] = {
					false, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[192796] = {
					true, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168843] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168907] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[97197] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[195927] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163862] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[53134] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165076] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168717] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[101637] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[195928] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[59873] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168718] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[195929] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169421] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[176703] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164567] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[192800] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[195930] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[170572] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[84520] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[179388] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[193760] = {
					true, -- [1]
					false, -- [2]
					"orangered", -- [3]
				},
				[114542] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168594] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[171341] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169425] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169426] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[183671] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168022] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169428] = {
					false, -- [1]
					false, -- [2]
					"orangered", -- [3]
				},
				[114544] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166299] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[169429] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[196576] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[179841] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[169430] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[196577] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168153] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[163618] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[166301] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[198047] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167962] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[166302] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167963] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[190128] = {
					false, -- [1]
					false, -- [2]
					"bisque", -- [3]
				},
				[163620] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[197985] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167964] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164451] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[197219] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168156] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[176396] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164707] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[81236] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167965] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168988] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[154744] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[171799] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[83026] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[160495] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[172312] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[189878] = {
					false, -- [1]
					false, -- [2]
					"bisque", -- [3]
				},
				[165414] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[75713] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[196202] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[173016] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168418] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[99891] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[75459] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[176404] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[194990] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168420] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"orangered", -- [3]
				},
				[80816] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[155221] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[84028] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[179892] = {
					false, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[170199] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[144294] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[168932] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[155216] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[164461] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163503] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[166275] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[114312] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165764] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[174210] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[104300] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[184908] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[170147] = {
					false, -- [1]
					false, -- [2]
					"gray", -- [3]
				},
				[180431] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[162099] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[170850] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163121] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[168934] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162689] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164463] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[153285] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163058] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[165251] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[188067] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[169893] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[174197] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[197535] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[165919] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[95834] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[191164] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[190206] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[88967] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168844] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[164578] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[163621] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[167892] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162038] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[168681] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[190207] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[168845] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[164926] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[104270] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163891] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[163524] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[177816] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[162039] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[144301] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[164414] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[186741] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[165872] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[163892] = {
					false, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[154758] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[170157] = {
					false, -- [1]
					false, -- [2]
					"darkseagreen", -- [3]
				},
				[162040] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163126] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[186150] = {
					false, -- [1]
					false, -- [2]
					"lightcyan", -- [3]
				},
				[169861] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167406] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[193462] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[150160] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[170480] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[164506] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[97788] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[177891] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[87761] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[77700] = {
					true, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163894] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[150254] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[144293] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[167116] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[163128] = {
					false, -- [1]
					false, -- [2]
					"snow", -- [3]
				},
				[154014] = {
					false, -- [1]
					false, -- [2]
					"orchid", -- [3]
				},
				[200137] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
			},
			["cast_statusbar_spark_half"] = true,
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 0.5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1680622827,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 171,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Cast Border",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"right\"\n    envTable.BorderThickness = .5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1.6, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1.6, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.IconBorder:SetIgnoreParentScale(false)\n    end    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1680622834,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 199,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Icon Border",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    unitFrame.castBar.ScheduleToHide = function (self) self:Hide() end\n    \nend",
					},
					["Time"] = 1680622833,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 61,
					["semver"] = "",
					["Author"] = "Caeleran-Draenor",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Hide Cast on Kick",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    \n    -- spellIDs:\n    envTable.glowSpells = {\n        [164815] = 5.4, -- sunfire\n        [164812] = 6.6, -- moonfire\n        [202347] = 7.2, -- stellar flare\n        [980] = 5.4, -- agony\n        [146739] = 4.2, -- corruption\n        [316099] = 6.3, -- ua1\n        [342938] = 6.3, -- ua2\n        [63106] = 4.5, -- siphon life\n        [157736] = 5.4, -- immolate\n        [34914] = 6.3, -- vampiric touch\n        [589] = 4.8, -- sw: pain\n        [204213] = 4.8, -- purge the wicked\n        [188389] = 5.4, -- flame shock\n        [191587] = 8.1, -- virulent plague\n        [703] = 5.4, -- garrote\n        [1943] = 7.2, -- rupture\n        [121411] = 4.2, -- crimson tempest\n        [346278] = 4.5, -- burning wound\n        [1079] = 5.4, -- rip\n        [155722] = 5.4, -- rake\n        [106830] = 5.4, -- thrash\n        [772] = 4.5, --rend\n    }\n    \n    \n    -- for the LibCustomGlow implementation:\n    envTable.options = {\n        color = \"#e1e1e1\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        \n    }\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.RemainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > auraIcon.RemainingTime)) then\n                if not auraIcon.pandemicGlowStarted then\n                    Plater.StartButtonGlow(auraIcon, nil, envTable.options)\n                    auraIcon.pandemicGlowStarted = true\n                end\n            else\n                if auraIcon.pandemicGlowStarted then\n                    Plater.StopButtonGlow(auraIcon, envTable.options.key)\n                    auraIcon.pandemicGlowStarted = false\n                end\n            end                \n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (auraIcon:IsShown() and remainingTime > 0 and (envTable.glowSpells[auraIcon.spellId] and envTable.glowSpells[auraIcon.spellId] > remainingTime)) then\n                    if not auraIcon.pandemicGlowStarted then\n                        Plater.StartButtonGlow(auraIcon, nil, envTable.options)\n                        auraIcon.pandemicGlowStarted = true\n                    end\n                else\n                    if auraIcon.pandemicGlowStarted then\n                        Plater.StopButtonGlow(auraIcon, envTable.options.key)\n                        auraIcon.pandemicGlowStarted = false\n                    end                    \n                end  \n            end\n        end\n    end\nend",
					},
					["Time"] = 1680622750,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DEATHKNIGHT"] = true,
							["WARLOCK"] = true,
							["SHAMAN"] = true,
							["DEMONHUNTER"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
							["PRIEST"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 420,
					["semver"] = "1.0.3",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Pandemic Glow",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = 4,
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if not envTable.units[select(6, strsplit(\"-\", UnitGUID(unitId)))] then\n        envTable.CheckAggro (unitFrame)\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if not envTable.units[select(6, strsplit(\"-\", UnitGUID(unitId)))] then\n        envTable.CheckAggro (unitFrame)\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.units = {\n        [\"120651\"] = true, -- Explosives \n        [\"174773\"] = true, -- Spiteful\n        [\"169430\"] = true, -- Ur'zul DH Necrolord\n        [\"169428\"] = true, -- Wrathguard DH Necrolord\n        [\"169425\"] = true, -- Felhound DH Necrolord\n        [\"168932\"] = true, -- Doomguard DH Necrolord\n        [\"169429\"] = true, -- Shivarra DH Necrolord\n        [\"169426\"] = true, -- Infernal DH Necrolord\n        [\"169421\"] = true, -- Felguard DH Necrolord\n    }\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.anothertank)\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680622833,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 192,
					["semver"] = "1.0.0",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
					["Prio"] = 98,
					["Name"] = "Force Threat Color",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = 1,
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"mediumseagreen\", --monk statue npcID\n        [103822] = \"mediumseagreen\", --druid treant npcID        \n        [61056] = \"mediumseagreen\", --shaman earth ele npcID\n        [95072] = \"mediumseagreen\", --shaman earth ele npcID    \n    }\n    \n    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1677634908,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 292,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "",
					["Prio"] = 97,
					["Name"] = "Attacking Specific Unit",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [6]
				{
					["OptionsValues"] = {
						["BScdreverse"] = true,
						["BSborderth"] = 0.5,
						["BStimer_size"] = 18,
						["BStimer_color"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["BSstack_size"] = 12,
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.ExtraIconFrame:SetOption (\"text_size\", modTable.config.BStimer_size)\n    unitFrame.ExtraIconFrame:SetOption (\"text_color\", modTable.config.BStimer_color)\n    unitFrame.ExtraIconFrame:SetOption (\"desc_text_size\", modTable.config.BSdesc_size)\n    unitFrame.ExtraIconFrame:SetOption (\"stack_text_size\", modTable.config.BSstack_size)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier ()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier = function()\n        \n        if modTable.config.BShidefriendl and unitFrame.actorType == \"friendlyplayer\" then\n            unitFrame.ExtraIconFrame:Hide()\n        end      \n        \n        for index, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if (auraIcon:IsShown()) then\n                \n                local profile = Plater.db.profile\n                local Anchor = {\n                    side = modTable.config.Descanchor, \n                    x = modTable.config.Descxoff, \n                    y = modTable.config.Descyoff,\n                }              \n                local size = modTable.config.BSborderth\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                auraIcon.PixelPerfectBorder:UpdateSizes()\n                \n                auraIcon.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                auraIcon.Texture:ClearAllPoints()\n                auraIcon.Texture:SetAllPoints()\n                auraIcon.Border:Hide() \n                \n                Plater.SetFontOutlineAndShadow (auraIcon.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n                \n                Plater.SetAnchor (auraIcon.Desc, Anchor)\n                auraIcon.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n                auraIcon.Cooldown:SetDrawSwipe (true) \n                if modTable.config.BScdreverse then\n                    auraIcon.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n                end\n                \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680622827,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 424,
					["semver"] = "1.0.0",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Buff Special",
					["PlaterCore"] = 1,
					["version"] = 1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Basic Options",
							["Value"] = "Basic Options",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Hide Buff Special at Friendly UnitFrame",
							["Value"] = true,
							["Key"] = "BShidefriendly",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Hide Buff Special at Friendly UnitFrame",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Swipe Closure Inverted",
							["Value"] = true,
							["Key"] = "BScdreverse",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, swipe closure inverted",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special border thickness",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 2,
							["Name"] = "Border Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BSborderth",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "Buff Special Text Options",
							["Value"] = "Buff Special Text Options",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set timer text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 14,
							["Name"] = "Timer Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BStimer_size",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Timer Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "BStimer_color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set timer text color",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set stack text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Stack Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BSstack_size",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "Buff Special Player Name Options",
							["Value"] = "Buff Special Player Name Options",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Player Name Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BSdesc_size",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 4,
							["Name"] = "Player Name Text Anchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "Descanchor",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text y-offset",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = -2,
							["Name"] = "Player Name Text Y-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "Descyoff",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text x-offset",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Player Name Text X-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "Descxoff",
						}, -- [15]
					},
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 2.9,\n    }\n    \nend\n\n\n",
					},
					["Time"] = 1680622750,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 76,
					["semver"] = "1.0.0",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Timer Text Color",
					["PlaterCore"] = 1,
					["version"] = 1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    \n    -- settings:\n    local formatAuraTimers = modTable.config.formatAuraTimers\n    local formatBuffSpecialTimers = modTable.config.formatBuffSpecialTimers\n    \n    \n    -- time formatting function: (can be adjusted)\n    Plater.FormatTimeNew = function (s)\n        if s < 3 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%d\"):format(s)\n        elseif s < 3600 then\n            return (\"%d:%02d\"):format(s/60%60, s%60)\n        elseif s < 86400 then\n            return (\"%dh %02dm\"):format(s/(3600), s/60%60)\n        else\n            return (\"%dd %02dh\"):format(s/86400, (s /3600) - (floor(s/86400) * 24))\n        end\n    end\n    Plater.FormatTimeOrig = Plater.FormatTimeOrig or Plater.FormatTime\n    \n    local DF = _G[\"DetailsFramework\"]\n    DF.IconRowFunctions.FormatCooldownTimeOrig = DF.IconRowFunctions.FormatCooldownTimeOrig or DF.IconRowFunctions.FormatCooldownTime\n    \n    \n    -- exchange formatting:\n    function modTable.hookTimeFormat()\n        if formatAuraTimers then\n            Plater.FormatTime = Plater.FormatTimeNew\n        else\n            Plater.FormatTime = Plater.FormatTimeOrig\n        end\n        \n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if DF.IconRowFunctions.FormatCooldownTime then\n                DF.IconRowFunctions.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n        else\n            -- no buff special\n            if DF.IconRowFunctions.FormatCooldownTime then\n                DF.IconRowFunctions.FormatCooldownTime = DF.IconRowFunctions.FormatCooldownTimeOrig\n            end\n        end\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        else\n            \n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = DF.IconRowFunctions.FormatCooldownTimeOrig\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeOrig (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        end\n        \n    end\n    \n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    modTable.hookTimeFormat()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680622828,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/mULsbUUxJ/11",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 199,
					["semver"] = "1.0.10",
					["Author"] = "Viash-Thrall",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Detailed Timer",
					["PlaterCore"] = 1,
					["version"] = 11,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Format Aura Timers",
							["Value"] = true,
							["Key"] = "formatAuraTimers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Format Buff Special Timers",
							["Value"] = true,
							["Key"] = "formatBuffSpecialTimers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
					},
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = .5 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Time"] = 1680622828,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 134400,
					["Enabled"] = true,
					["Revision"] = 178,
					["semver"] = "",
					["Author"] = "????????-Illidan",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Debuff Border",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1677634480,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135940,
					["Enabled"] = true,
					["Revision"] = 1230,
					["semver"] = "",
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Prio"] = 99,
					["Name"] = "Absorb Shields in Healthbar",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Options Intro",
							["Value"] = "Options For @scriptname",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = "",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
					},
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Initialization",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Devouring Plague\"] = 23,\n        [\"Mind Flay\"] = 25,\n        \n        --Demon Hunter\n        [\"Burning Wound\"] = 50,\n        \n        --Warrior\n        [\"Rend\"] = 50,\n        [\"Colossus Smash\"] = 51,\n        \n        --Warlock\n        [\"Agony\"] = 50,\n        [\"Corruption\"] = 40,\n        [\"Unstable Affliction\"] = 30,\n        [\"Siphon Life\"] = 20,\n        [\"Shadow Embrace\"] = 10,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634698,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [12]
				{
					["OptionsValues"] = {
						["hideNameSolo"] = true,
						["colorNoInterrupt"] = {
							0.4862745404243469, -- [1]
							0.4862745404243469, -- [2]
							0.4862745404243469, -- [3]
							1, -- [4]
						},
						["colorInterruptAvailable"] = {
							0.6235294342041016, -- [1]
							0.7490196228027344, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["colorInterruptSoon"] = {
							0.8823530077934265, -- [1]
							0.8823530077934265, -- [2]
							0.8823530077934265, -- [3]
							1, -- [4]
						},
						["colorProtected"] = {
							0.7803922295570374, -- [1]
							0.250980406999588, -- [2]
							0.250980406999588, -- [3]
							1, -- [4]
						},
						["colorSecondaryInterrupt"] = {
							0.1725490242242813, -- [1]
							0.8156863451004028, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["UID"] = "0x63cc19ce2df2342d",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
						["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\",\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [8] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        }                                         \n    }   \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
					},
					["Time"] = 1680622832,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 429383,
					["Enabled"] = true,
					["Revision"] = 1262,
					["semver"] = "",
					["Author"] = "Nimeshady-Zul'jin",
					["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
					["Prio"] = 99,
					["Name"] = "Enhanced Enemy Castbar [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "CUSTOM CAST BAR COLORS",
							["Value"] = "Feature - Custom cast bar coloring:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Enable custom colored enemy cast bars.",
							["Value"] = true,
							["Key"] = "showInterruptColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
							["Value"] = true,
							["Key"] = "showSecondaryInterrupts",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Color when my primary interrupt is available.",
							["Value"] = {
								0.10980392992496, -- [1]
								0.63921570777893, -- [2]
								0.1843137294054, -- [3]
								1, -- [4]
							},
							["Key"] = "colorInterruptAvailable",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
							["Value"] = {
								0.63921570777893, -- [1]
								0.61568629741669, -- [2]
								0.10980392992496, -- [3]
								1, -- [4]
							},
							["Key"] = "colorInterruptSoon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Color when my primary interrupt is unavailable.",
							["Value"] = {
								0.61960786581039, -- [1]
								0.16862745583057, -- [2]
								0.28627452254295, -- [3]
								1, -- [4]
							},
							["Key"] = "colorNoInterrupt",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
							["Value"] = {
								0.10980392992496, -- [1]
								0.52156865596771, -- [2]
								0.63921570777893, -- [3]
								1, -- [4]
							},
							["Key"] = "colorSecondaryInterrupt",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Color for casts that are protected/un-interruptable.",
							["Value"] = {
								0.22352942824364, -- [1]
								0.22352942824364, -- [2]
								0.22352942824364, -- [3]
								1, -- [4]
							},
							["Key"] = "colorProtected",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Color of interrupt available tick. (Hover for more info)",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.0078431377187371, -- [3]
								1, -- [4]
							},
							["Key"] = "colorTick",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Settings Target Name",
							["Value"] = "Feature - Show name of target in the cast bar:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show the name of cast targets in the cast bar.",
							["Value"] = true,
							["Key"] = "showTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Hide my name when not in a party.",
							["Value"] = true,
							["Key"] = "hideNameSolo",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Show \"Me\" instead of my character name.",
							["Value"] = true,
							["Key"] = "replaceName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 60,
							["Key"] = "castNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Maximum length of a cast name in %. Hover for more info.",
						}, -- [14]
						{
							["Type"] = 5,
							["Name"] = "Settings Border Flash",
							["Value"] = "Feature - Flash nameplates when a spell targets you:",
							["Key"] = "option8",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Namplate Flash",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
							["Value"] = false,
							["Key"] = "nameplateFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
						}, -- [16]
						{
							["Type"] = 4,
							["Name"] = "Hide flash effect when not in a party.",
							["Value"] = true,
							["Key"] = "hideNameplateFlashSolo",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing solo.",
						}, -- [17]
						{
							["Type"] = 4,
							["Name"] = "Hide flash effect when I'm playing a tank specialization.",
							["Value"] = true,
							["Key"] = "hideFlashAsTank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
						}, -- [18]
					},
				}, -- [13]
				{
					["LastHookEdited"] = "Initialization",
					["UID"] = "0x62f9521d664ad",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        \n        -- Dungeons\n        [196642] = false, -- Hungry Lasher (Boss add)\n        [197398] = false, -- Hungry Lasher\n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634807,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 458228,
					["Enabled"] = true,
					["Revision"] = 168,
					["semver"] = "",
					["Author"] = "Viashi-Argent Dawn",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Performance Units",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Performance",
							["Value"] = true,
							["Key"] = "performance",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Force Blizzard",
							["Value"] = false,
							["Key"] = "forceBlizz",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
					},
				}, -- [14]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        --Dragonflight Raids\n        \n        --Vault of the Incarnates\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        [\"Nascent Proto-Dragon\"] = \"Nascent Dragon\",\n        [\"Juvenile Frost Proto-Dragon\"] = \"Frost Dragon\",\n        \n        --Ruby Life Pools\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Big Crystal\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Decay Totem\",\n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        \n        --Return To Karazhan\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["Time"] = 1680623125,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
					["Enabled"] = true,
					["Revision"] = 935,
					["semver"] = "",
					["Author"] = "Rhk-Tarren Mill",
					["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
					["Prio"] = 99,
					["Name"] = "M+ Renamer",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    -- settings:\n    \n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.skyreachColor, --\"gold\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.1, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"skyreach\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local nodeInfo = C_Traits.GetNodeInfo(C_ClassTalents.GetActiveConfigID(), 80663)\n    local learned = nodeInfo and nodeInfo.entryIDsWithCommittedRanks and nodeInfo.entryIDsWithCommittedRanks[1] and true or false  \n    \n    \n    --do nothing if skyreach isnt talented\n    if (learned) == false then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return \n    end\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        return\n    end\n    \n    if modTable.config.showskyreach then\n        if not Plater.UnitHasAura (unitFrame, 393050) then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        end\n    end\n    \n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options)\n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options2)\n    \nend",
					},
					["Time"] = 1680622736,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["MONK"] = true,
							["Enabled"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["Enabled"] = true,
							["269"] = true,
						},
					},
					["url"] = "https://wago.io/9WPWW_bnm/3",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
					["Enabled"] = true,
					["Revision"] = 490,
					["semver"] = "1.0.2",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Glows Nameplate if Skyreach Exhaustion is Missing",
					["Prio"] = 99,
					["Name"] = "Skyreach Available Glow",
					["PlaterCore"] = 1,
					["version"] = 3,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Glow Skyreach Missing",
							["Value"] = true,
							["Key"] = "showskyreach",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Skyreach Missing Color",
							["Value"] = {
								1, -- [1]
								0.84313725490196, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "skyreachColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
					},
				}, -- [16]
			},
			["auras_per_row_auto"] = false,
			["extra_icon_caster_outline"] = "OUTLINE",
			["auras_per_row_amount2"] = 6,
			["aura_width"] = 17,
			["bossmod_support_enabled"] = false,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["pet_width_scale"] = 0.9999999403953552,
			["extra_icon_timer_size"] = 7,
			["target_highlight_color"] = {
				0.9294118285179138, -- [1]
				0.1882353127002716, -- [2]
				0.2431372702121735, -- [3]
			},
			["extra_icon_stack_outline"] = "OUTLINE",
			["click_space"] = {
				115, -- [1]
				20, -- [2]
			},
			["extra_icon_auras"] = {
				81261, -- [1]
				33786, -- [2]
				5211, -- [3]
				99, -- [4]
				203123, -- [5]
				89766, -- [6]
				6789, -- [7]
				118699, -- [8]
				30283, -- [9]
				5484, -- [10]
				710, -- [11]
				6770, -- [12]
				2094, -- [13]
				2637, -- [14]
				115078, -- [15]
				217832, -- [16]
				51514, -- [17]
				20066, -- [18]
				9484, -- [19]
				853, -- [20]
				105421, -- [21]
				31935, -- [22]
				10326, -- [23]
				24394, -- [24]
				3355, -- [25]
				213691, -- [26]
				1513, -- [27]
				5246, -- [28]
				132169, -- [29]
				199085, -- [30]
				132168, -- [31]
				211881, -- [32]
				179057, -- [33]
				204490, -- [34]
				207685, -- [35]
				221562, -- [36]
				207167, -- [37]
				287254, -- [38]
				108194, -- [39]
				91800, -- [40]
				31661, -- [41]
				118, -- [42]
				82691, -- [43]
				119381, -- [44]
				198909, -- [45]
				408, -- [46]
				1776, -- [47]
				1330, -- [48]
				118905, -- [49]
				197214, -- [50]
				64044, -- [51]
				15487, -- [52]
				8122, -- [53]
				226943, -- [54]
				200200, -- [55]
				"Haymaker", -- [56]
				"Quaking Palm", -- [57]
				"War Stomp", -- [58]
			},
			["aura2_grow_direction"] = 1,
			["ui_parent_cast_level"] = 1,
			["aura_stack_anchor"] = {
				["y"] = 6,
				["x"] = 1.5,
				["side"] = 5,
			},
			["click_space_friendly"] = {
				1, -- [1]
				1, -- [2]
			},
			["range_check_in_range_or_target_alpha_friendlies"] = 0.8999999761581421,
			["first_run3"] = true,
			["aura_height2"] = 17,
			["cast_statusbar_fadeout_time"] = 0.009999999776482582,
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = 0,
			["range_check_alpha_friendlies"] = 0.6499999761581421,
			["color_override_colors"] = {
				[3] = {
					0.6352941176470588, -- [1]
					0.2196078431372549, -- [2]
					0.2196078431372549, -- [3]
				},
				[4] = {
					0.8509803921568627, -- [1]
					0.8156862745098039, -- [2]
					0.5882352941176471, -- [3]
				},
				[5] = {
					0.5058823529411764, -- [1]
					0.7803921568627451, -- [2]
					0.5137254901960784, -- [3]
				},
			},
			["cast_statusbar_spark_alpha"] = 0.5,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 50, 0);   \n    envTable.FixateTarget:Hide()\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
						["nameplateColor"] = {
							1, -- [1]
							0.9803921568627451, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["changeNameplateColor"] = false,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1671417854,
					["semver"] = "",
					["url"] = "",
					["Icon"] = 134400,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["Enabled"] = true,
					["Revision"] = 579,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.71372549019608, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
					},
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Spiteful Fixate",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 50, 0);   \n    envTable.FixateTarget:Hide()\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
						["npcColor"] = {
							{
								"196548", -- [1]
								"forestgreen", -- [2]
							}, -- [1]
							{
								"195580", -- [1]
								"forestgreen", -- [2]
							}, -- [2]
							{
								"195820", -- [1]
								"forestgreen", -- [2]
							}, -- [3]
							{
								"195821", -- [1]
								"forestgreen", -- [2]
							}, -- [4]
							{
								"189886", -- [1]
								"forestgreen", -- [2]
							}, -- [5]
							{
								"75966", -- [1]
								"forestgreen", -- [2]
							}, -- [6]
							{
								"102019 ", -- [1]
								"forestgreen", -- [2]
							}, -- [7]
							{
								"187159", -- [1]
								"forestgreen", -- [2]
							}, -- [8]
							{
								"194897", -- [1]
								"forestgreen", -- [2]
							}, -- [9]
							{
								"104251", -- [1]
								"forestgreen", -- [2]
							}, -- [10]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1680622802,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Enabled"] = true,
					["Revision"] = 577,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["Name"] = "Add - Important [P]",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1680622816,
					["NpcNames"] = {
						"81236", -- [1]
						"77803", -- [2]
						"150276", -- [3]
						"152009", -- [4]
						"175806", -- [5]
						"114790", -- [6]
						"81297", -- [7]
						"79545", -- [8]
						"177269", -- [9]
						"133345", -- [10]
						"164926", -- [11]
						"114265", -- [12]
						"114261", -- [13]
						"114783", -- [14]
						"180013", -- [15]
						"179931", -- [16]
						"193532", -- [17]
						"116410", -- [18]
						"190485", -- [19]
						"193435", -- [20]
						"188252", -- [21]
						"186738", -- [22]
						"186125", -- [23]
						"186122", -- [24]
						"186124", -- [25]
						"184422", -- [26]
						"96574", -- [27]
						"114312", -- [28]
						"164804", -- [29]
						"164267", -- [30]
						"164967", -- [31]
						"169861", -- [32]
						"162061", -- [33]
						"144298", -- [34]
						"181378", -- [35]
						"181548", -- [36]
						"181551", -- [37]
						"181546", -- [38]
						"181549", -- [39]
						"183501", -- [40]
						"180906", -- [41]
						"185421", -- [42]
						"163121", -- [43]
						"175730", -- [44]
						"176523", -- [45]
						"175725", -- [46]
						"176929", -- [47]
						"166969", -- [48]
						"166970", -- [49]
						"166971", -- [50]
						"167406", -- [51]
						"173162", -- [52]
						"175732", -- [53]
						"183671", -- [54]
						"184020", -- [55]
						"114260", -- [56]
						"184581", -- [57]
						"184582", -- [58]
						"184580", -- [59]
						"189719", -- [60]
						"185534", -- [61]
						"190407", -- [62]
						"194816", -- [63]
						"186151", -- [64]
						"59544", -- [65]
						"186121", -- [66]
						"197697", -- [67]
						"194990", -- [68]
						"76057", -- [69]
						"56732", -- [70]
						"95676", -- [71]
						"94960", -- [72]
						"104215", -- [73]
						"95674", -- [74]
						"189492", -- [75]
						"190484", -- [76]
						"97087", -- [77]
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option8",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [8]
					},
					["Enabled"] = true,
					["Revision"] = 374,
					["semver"] = "",
					["Name"] = "Add - Health Markers [D]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Author"] = "Duracell",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1680622795,
					["NpcNames"] = {
					},
					["url"] = "",
					["Icon"] = -13828,
					["Options"] = {
					},
					["Enabled"] = true,
					["Revision"] = 297,
					["semver"] = "",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["version"] = -1,
					["Prio"] = 99,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
						350857, -- [4]
						352016, -- [5]
						235308, -- [6]
						235089, -- [7]
						367573, -- [8]
						362020, -- [9]
						232156, -- [10]
						374779, -- [11]
						113309, -- [12]
						117665, -- [13]
						379256, -- [14]
						396734, -- [15]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [4]
			},
			["health_statusbar_bgtexture"] = "Atrocity",
			["indicator_raidmark_anchor"] = {
				["x"] = 0,
				["side"] = 9,
			},
			["aura_show_enrage"] = true,
			["aura_tracker"] = {
				["buff_banned"] = {
					[396106] = true,
					[338857] = true,
					[302564] = true,
					[359078] = true,
					[236502] = true,
					[216777] = true,
					[396109] = true,
					[367803] = true,
					[286145] = true,
					[383648] = true,
					[396098] = true,
					[209746] = true,
					[344426] = true,
					[292664] = true,
					[343613] = false,
					[344240] = true,
					[327416] = true,
					[333579] = true,
					[284882] = true,
					[323961] = true,
					[396113] = true,
					[373305] = true,
					[343553] = true,
					[333575] = true,
				},
				["debuff_banned"] = {
					[358379] = true,
					[356372] = false,
					[389806] = true,
					[396719] = true,
					[289467] = true,
					[356329] = true,
					[359078] = true,
					[346562] = true,
					[392388] = true,
					[331016] = false,
					[306965] = true,
					[300013] = true,
					[324260] = true,
					[283649] = true,
					[391568] = true,
					[321330] = true,
					[279426] = true,
					[294934] = true,
					[394328] = true,
					[353354] = false,
					[331653] = true,
					[354052] = true,
					[387881] = true,
					[273836] = true,
					[256148] = true,
					[352534] = true,
					[281242] = true,
					[375583] = true,
					[360277] = true,
					[344754] = true,
					[394021] = true,
					[394325] = true,
				},
				["debuff_tracked"] = {
					[323059] = false,
					[335372] = false,
					[453] = false,
				},
				["buff_tracked"] = {
					[205191] = false,
					[118038] = false,
					[210303] = true,
					[102560] = false,
					[125174] = false,
					[342073] = true,
					[209859] = false,
					[184364] = false,
					[243435] = false,
					[194223] = false,
					[5277] = false,
					[122278] = false,
					[48707] = false,
					[116849] = false,
					[199448] = false,
					[340873] = false,
					[51271] = false,
					[324046] = false,
					[315443] = false,
					[1022] = false,
					[61336] = false,
					[213610] = false,
					[6940] = false,
					[120954] = false,
					[113858] = false,
					[327416] = false,
					[333227] = false,
					[642] = false,
					[33206] = false,
					[343484] = true,
					[342246] = false,
					[197690] = false,
					[166591] = true,
					[303941] = true,
					[45438] = false,
					[498] = false,
					[312926] = true,
					[233210] = true,
					[336451] = false,
					[102342] = false,
					[227931] = true,
					[266779] = false,
					[310454] = false,
					[389808] = true,
					[31884] = false,
					[297133] = true,
					[336499] = false,
					[48792] = false,
					[343502] = false,
					[305497] = true,
					[113860] = false,
					[355790] = false,
					[188501] = false,
					[344739] = false,
					[31224] = false,
					[333737] = false,
					[22812] = false,
					[163689] = true,
					[196555] = false,
					[333241] = false,
					[343496] = true,
					[323095] = false,
					[194249] = false,
					[47788] = false,
					[376705] = false,
					[213602] = false,
					[338510] = false,
					[186265] = false,
					[79206] = false,
					[365338] = true,
					[122783] = false,
					[343558] = false,
					[1044] = false,
					[104773] = false,
					[114052] = false,
					[317936] = false,
					[322773] = false,
					[260402] = false,
					[110909] = false,
					[23920] = false,
					[97463] = false,
					[152262] = false,
					[147833] = false,
					[343470] = false,
					[212800] = false,
					[212295] = false,
					[47585] = false,
					[162264] = false,
					[321754] = false,
					[330545] = false,
					[338610] = false,
					[389029] = false,
					[326450] = false,
					[321402] = false,
					[190319] = false,
				},
			},
			["extra_icon_caster_font"] = "Expressway",
			["cast_statusbar_color"] = {
				0.6235294342041016, -- [1]
				0.7490196228027344, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["update_throttle"] = 0.3300000131130219,
			["castbar_icon_show"] = false,
			["indicator_extra_raidmark"] = false,
			["cast_statusbar_color_interrupted"] = {
				0.7803921568627451, -- [1]
				0.2509803921568627, -- [2]
				0.2509803921568627, -- [3]
			},
			["aura_show_debuffs_personal"] = false,
			["extra_icon_timer_font"] = "Expressway",
			["not_affecting_combat_alpha"] = 0.3999999761581421,
			["target_highlight_alpha"] = 1,
			["focus_as_target_alpha"] = true,
			["extra_icon_use_blizzard_border_color"] = false,
			["target_shady_alpha"] = 0.2800000011920929,
			["aura_grow_direction"] = 3,
			["tap_denied_color"] = {
				0.6, -- [1]
				0.6, -- [2]
				0.6, -- [3]
			},
			["bossmod_icons_anchor"] = {
				["y"] = 0,
			},
			["target_highlight_height"] = 11,
			["indicator_raidmark_scale"] = 0.699999988079071,
			["health_selection_overlay"] = "Atrocity",
			["indicator_spec"] = false,
			["health_animation_time_dilatation"] = 2.619999885559082,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["castbar_icon_attach_to_side"] = "right",
			["bossmod_cooldown_text_size"] = 17,
			["patch_version"] = 25,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 8,
			["health_statusbar_bgcolor"] = {
				0.03137254901960784, -- [1]
				0.03137254901960784, -- [2]
				0.03137254901960784, -- [3]
				0.7000000178813934, -- [4]
			},
			["number_region_first_run"] = true,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["ScriptType"] = 3,
					["__TrashAt"] = 1680622788,
					["Time"] = 1677634878,
					["NpcNames"] = {
						"167966", -- [1]
						"199220", -- [2]
						"199916", -- [3]
					},
					["Options"] = {
					},
					["url"] = "",
					["Icon"] = 644389,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Enabled"] = true,
					["Revision"] = 104,
					["semver"] = "",
					["Name"] = "Hide Nameplate",
					["Prio"] = 99,
					["Author"] = "Briarbreed-Area 52",
					["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["Desc"] = "Hide nameplates based on the unit's NPC ID.",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["ScriptType"] = 2,
					["__TrashAt"] = 1680622794,
					["Time"] = 1676905232,
					["Icon"] = 4038101,
					["url"] = "",
					["NpcNames"] = {
					},
					["version"] = -1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["Revision"] = 73,
					["semver"] = "",
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["Name"] = "Cast - On Going Cast [P]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [2]
			},
			["extra_icon_timer_outline"] = "OUTLINE",
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Initialization",
					["UID"] = "0x6366dbeb1fda6285",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["__TrashAt"] = 1680622748,
					["Time"] = 1677634821,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1041231,
					["Enabled"] = true,
					["Revision"] = 1240,
					["semver"] = "",
					["Author"] = "Causese-Valdrakken",
					["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
					["Prio"] = 99,
					["Name"] = "Priority based scaling",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Enable Scaling",
							["Value"] = true,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to scale based on priority.",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for mid priority.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.75,
							["Key"] = "midScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Mid prio",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for low priority.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "lowScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Low prio",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Enable Coloring",
							["Value"] = false,
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to be colored based on priority.",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Mid prio",
							["Value"] = {
								1, -- [1]
								0.92941182851791, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "midColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for mid priority.",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Low prio",
							["Value"] = {
								0.49803924560547, -- [1]
								0.49803924560547, -- [2]
								0.49803924560547, -- [3]
								1, -- [4]
							},
							["Key"] = "lowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for low priority.",
						}, -- [6]
					},
				}, -- [1]
			},
			["cast_statusbar_color_channeling"] = {
				0.6235294117647059, -- [1]
				0.7490196078431373, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["castbar_target_font"] = "Expressway",
			["indicator_elite"] = false,
			["cast_statusbar_texture"] = "Atrocity",
			["indicator_pet"] = false,
			["indicator_faction"] = false,
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						0.6352941176470588, -- [1]
						0.2196078431372549, -- [2]
						0.2196078431372549, -- [3]
					},
					["noaggro"] = {
						0.5058823529411764, -- [1]
						0.4235294117647059, -- [2]
						0.9137254901960784, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.7725490196078432, -- [2]
						0.6588235294117647, -- [3]
					},
				},
			},
			["extra_icon_height"] = 15,
			["target_shady_enabled"] = false,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						0.9764705882352941, -- [1]
						0.5411764705882353, -- [2]
						0.4745098039215686, -- [3]
					},
					["anothertank"] = {
						0.7294117647058823, -- [1]
						0.9176470588235294, -- [2]
					},
					["aggro"] = {
						0.5058823529411764, -- [1]
						0.4235294117647059, -- [2]
						0.9137254901960784, -- [3]
					},
					["nocombat"] = {
						0.6352941176470588, -- [1]
						0.2196078431372549, -- [2]
						0.2196078431372549, -- [3]
					},
					["noaggro"] = {
						0.6352941176470588, -- [1]
						0.2196078431372549, -- [2]
						0.2196078431372549, -- [3]
					},
					["pulling"] = {
						0.3098039215686275, -- [1]
						0.4509803921568628, -- [2]
						0.6313725490196078, -- [3]
					},
				},
			},
			["aura_show_important"] = false,
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["cast_statusbar_spark_width"] = 8,
		},
		["Default"] = {
			["use_ui_parent"] = true,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Important"] = 11,
				["Cast - Very Important"] = 14,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Cast - Big Alert"] = 14,
				["Fixate On You"] = 11,
				["Cast - Important Target [P]"] = 2,
				["Cast - Quick Flash"] = 2,
				["Relics 9.2 M Dungeons"] = 2,
				["Auto Set Skull"] = 11,
				["Add - Explode on Die [P]"] = 1,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Stop Casting"] = 4,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Cast - Circular Swipe"] = 4,
				["Cast - Glowing [P]"] = 10,
				["Unit - Show Energy"] = 11,
			},
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						384194, -- [7]
						392576, -- [8]
						198750, -- [9]
						387843, -- [10]
						387411, -- [11]
						211299, -- [12]
						198595, -- [13]
						198934, -- [14]
						198962, -- [15]
						156722, -- [16]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura is Shield [P]",
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						398151, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["version"] = -1,
					["Name"] = "Fixate by Unit Buff [P]",
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						372107, -- [6]
						381525, -- [7]
						386660, -- [8]
						385578, -- [9]
						384699, -- [10]
						153501, -- [11]
						153686, -- [12]
						154442, -- [13]
						192018, -- [14]
						219488, -- [15]
						372087, -- [16]
						391726, -- [17]
						391723, -- [18]
						377383, -- [19]
						388976, -- [20]
						370764, -- [21]
						387067, -- [22]
						391118, -- [23]
						391136, -- [24]
						382233, -- [25]
						209027, -- [26]
						212031, -- [27]
						207261, -- [28]
						207979, -- [29]
						198888, -- [30]
						199805, -- [31]
						199050, -- [32]
						191508, -- [33]
						152792, -- [34]
						153395, -- [35]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Key"] = "rotationDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Key"] = "animStartDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Name"] = "Texture Start Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "textureScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["version"] = -1,
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "scale",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["SpellIds"] = {
						373688, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Explode on Die [P]",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
					},
				}, -- [31]
			},
			["aura2_x_offset"] = 0,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Time"] = 1547392935,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Hide Neutral Units [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["Time"] = 1541606242,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Reorder Nameplate [Plater]",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["LastHookEdited"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["version"] = -1,
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["Time"] = 1554138845,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["version"] = -1,
					["Name"] = "Players Targeting a Target [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Time"] = 1548278227,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Tecno-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Time"] = 1547409079,
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["Time"] = 1552354619,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["LastHookEdited"] = "",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["version"] = -1,
					["Name"] = "Execute Range [Plater]",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["Time"] = 1547406548,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 363,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Attacking Specific Unit [Plater]",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["LastHookEdited"] = "",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 284,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["version"] = -1,
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["LastHookEdited"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Name"] = "Aura Reorder [Plater]",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["LastHookEdited"] = "",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["ui_parent_scale_tune"] = 1.562500034924597,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["number_region_first_run"] = true,
			["aura2_y_offset"] = 5,
			["login_counter"] = 36,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1669422159,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["Name"] = "Unit - Important [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Tank Interrupt [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Name"] = "Unit - Health Markers [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["Name"] = "Unit - Main Target [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
					["Name"] = "Relics 9.2 M Dungeons",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "ColorSettingsAnchor",
							["Value"] = "Color Settings",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Haste Color",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "hasteColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "msColor",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "Moviment Speep Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Cooldown Reduction Color",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Key"] = "cdrColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "SizeSettingsAnchor",
							["Value"] = "Size Settings",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "canChangeSize",
							["Value"] = false,
							["Name"] = "Change Nameplate Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Key"] = "width",
							["Value"] = 100,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Height",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "BorderSettingsAnchor",
							["Value"] = "Border Settings",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Paint Border",
							["Value"] = true,
							["Key"] = "showBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 12",
							["Value"] = 0,
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "NameSettings",
							["Value"] = "Name Settings",
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Name"] = "Haste Name",
							["Value"] = "HASTE",
							["Key"] = "hasteName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Key"] = "cdrName",
							["Value"] = "CDR",
							["Name"] = "Cooldown Reduction Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Name"] = "Movement Speed Name",
							["Value"] = "MS",
							["Key"] = "msName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
					["Name"] = "Cast - Ultra Important [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n\n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1666836560,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 346,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Glowing [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1625696653,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 836,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Cast - Important Target [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Name"] = "Frame Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Key"] = "targetFrameHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1626467946,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1162,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1660259323,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 52,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Name"] = "Aura is Shield [P]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996691,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1060,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["version"] = -1,
					["SpellIds"] = {
						240446, -- [1]
					},
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1660340256,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 25,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Name"] = "Fixate by Unit Buff [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672271552,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1673799009,
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1673799009,
				}, -- [21]
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
				["Attacking Specific Unit"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Combo Points"] = 6,
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[163689] = true,
					[297133] = true,
				},
			},
			["plate_config"] = {
				["global_health_height"] = 12,
				["global_health_width"] = 112,
			},
			["patch_version"] = 22,
			["aura_y_offset"] = 5,
		},
		["Jundies Plater"] = {
			["focus_as_target_alpha"] = true,
			["aura_breakline_space"] = 1,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1677634316,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 296,
					["Options"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
						350857, -- [4]
						352016, -- [5]
						235308, -- [6]
						235089, -- [7]
						367573, -- [8]
						362020, -- [9]
						232156, -- [10]
						374779, -- [11]
						113309, -- [12]
						117665, -- [13]
						379256, -- [14]
						396734, -- [15]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["semver"] = "",
					["Icon"] = -13828,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
						["fontColor"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["fontSize"] = 12,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["Time"] = 1673203447,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
					["url"] = "",
					["NpcNames"] = {
						"171557", -- [1]
						"162060", -- [2]
						"168318", -- [3]
						"184140", -- [4]
						"182169", -- [5]
						"196482", -- [6]
						"186120", -- [7]
						"186116", -- [8]
						"189729", -- [9]
						"189901", -- [10]
						"197025", -- [11]
						"190496", -- [12]
						"189813", -- [13]
						"190245", -- [14]
						"184972", -- [15]
						"184986", -- [16]
						"164558", -- [17]
						"186737", -- [18]
						"186616", -- [19]
						"186615", -- [20]
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 472,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["semver"] = "",
					["Icon"] = 136048,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--87329 - test dummy \n\n\n--FODDER NPC's\n--169421\n--169425\n--168932\n--169426\n--169429\n--169428\n--169430",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
						["outline"] = true,
						["nameplateColor"] = {
							0.86666666666667, -- [1]
							0.43529411764706, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["changeNameplateColor"] = true,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1677634366,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--87329 - test dummy \n\n\n--FODDER NPC's\n--169421\n--169425\n--168932\n--169426\n--169429\n--169428\n--169430",
					["Icon"] = -14046,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["Revision"] = 821,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.71372549019608, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Outline Test",
						}, -- [8]
					},
					["Enabled"] = true,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Spiteful/Fixate Name&Glow",
					["PlaterCore"] = 1,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["NpcNames"] = {
						"174773", -- [1]
						"164702", -- [2]
						"166251", -- [3]
						"165913", -- [4]
						"167898", -- [5]
						"56792", -- [6]
						"194745", -- [7]
						"87329", -- [8]
						"169421", -- [9]
						"169425", -- [10]
						"168932", -- [11]
						"169426", -- [12]
						"169429", -- [13]
						"169428", -- [14]
						"169430", -- [15]
					},
					["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1677634342,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
					["url"] = "https://wago.io/JcByzfZtU/4",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
					["Revision"] = 277,
					["Options"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Viash-Thrall",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
					["SpellIds"] = {
						292711, -- [1]
						278946, -- [2]
						212463, -- [3]
						284402, -- [4]
						284401, -- [5]
						2818, -- [6]
						703, -- [7]
						1943, -- [8]
						295425, -- [9]
						283668, -- [10]
						316220, -- [11]
						258179, -- [12]
						207690, -- [13]
						315341, -- [14]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["version"] = 4,
					["PlaterCore"] = 1,
					["Name"] = "Pandemic Glow (Pixel)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
					["semver"] = "1.0.3",
					["Icon"] = 413591,
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1677634325,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Revision"] = 833,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.56470588235294, -- [1]
								0.56470588235294, -- [2]
								0.56470588235294, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.41176470588235, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						268030, -- [22]
						257784, -- [23]
						337943, -- [24]
						320822, -- [25]
						333292, -- [26]
						341840, -- [27]
						324987, -- [28]
						333478, -- [29]
						178072, -- [30]
						330438, -- [31]
						329423, -- [32]
						350287, -- [33]
						334928, -- [34]
						348428, -- [35]
						330532, -- [36]
						358980, -- [37]
						351073, -- [38]
						358026, -- [39]
						357144, -- [40]
						351603, -- [41]
						356023, -- [42]
						330513, -- [43]
						334076, -- [44]
						237946, -- [45]
						237952, -- [46]
						312262, -- [47]
						242733, -- [48]
						362628, -- [49]
						316443, -- [50]
						356031, -- [51]
						356011, -- [52]
						356001, -- [53]
						355642, -- [54]
						355644, -- [55]
						355782, -- [56]
						355057, -- [57]
						356133, -- [58]
						357260, -- [59]
						357284, -- [60]
						347015, -- [61]
						355139, -- [62]
						336451, -- [63]
						364240, -- [64]
						364241, -- [65]
						361923, -- [66]
						368063, -- [67]
						356407, -- [68]
						363024, -- [69]
						355584, -- [70]
						334664, -- [71]
						340300, -- [72]
						366288, -- [73]
						232120, -- [74]
						228554, -- [75]
						228009, -- [76]
						228025, -- [77]
						228019, -- [78]
						227977, -- [79]
						228278, -- [80]
						228280, -- [81]
						228567, -- [82]
						29339, -- [83]
						169341, -- [84]
						162415, -- [85]
						340037, -- [86]
						373513, -- [87]
						373618, -- [88]
						167232, -- [89]
						227646, -- [90]
						375606, -- [91]
						386549, -- [92]
						385568, -- [93]
						385393, -- [94]
						388211, -- [95]
						211464, -- [96]
						215433, -- [97]
						371983, -- [98]
						373405, -- [99]
						391599, -- [100]
						387627, -- [101]
						375653, -- [102]
						388392, -- [103]
						387862, -- [104]
						392457, -- [105]
						396812, -- [106]
						383823, -- [107]
						371624, -- [108]
						393309, -- [109]
						393296, -- [110]
						391268, -- [111]
						393429, -- [112]
						374623, -- [113]
						390548, -- [114]
						391019, -- [115]
						387615, -- [116]
						152818, -- [117]
						225100, -- [118]
						210261, -- [119]
						212784, -- [120]
						392486, -- [121]
						397889, -- [122]
						395859, -- [123]
						385331, -- [124]
						388804, -- [125]
						156718, -- [126]
						398206, -- [127]
						198959, -- [128]
						106856, -- [129]
						106864, -- [130]
						397394, -- [131]
						367500, -- [132]
						377488, -- [133]
						377612, -- [134]
						385574, -- [135]
						215204, -- [136]
						212773, -- [137]
						397382, -- [138]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["semver"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
					["Time"] = 1674081306,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
					["url"] = "https://wago.io/QmFFPeSSS/1",
					["NpcNames"] = {
					},
					["Enabled"] = false,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
					["Revision"] = 166,
					["Options"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Nephuhlim-Illidan",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["SpellIds"] = {
						228287, -- [1]
						295311, -- [2]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Change Color on Debuff",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["semver"] = "1.0.0",
					["Icon"] = 135801,
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Time"] = 1677634340,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["url"] = "https://wago.io/XPNrgiHqw/2",
					["NpcNames"] = {
						"167966", -- [1]
						"199220", -- [2]
						"199916", -- [3]
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
					["Revision"] = 104,
					["Options"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["Prio"] = 99,
					["Author"] = "Briarbreed-Area 52",
					["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
					["Desc"] = "Hide nameplates based on the unit's NPC ID.",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Hide Nameplate",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["semver"] = "1.1.0",
					["Icon"] = 644389,
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --envTable.LCG = LibStub(\"LibCustomGlow-1.0\")\n    envTable.HealthBarColor = \"gold\"\n    --envTable.glow_frame = CreateFrame(\"Frame\", nil, unitFrame.healthBar)\n    --envTable.glow_frame:SetAllPoints(unitFrame.healthBar)\n    --envTable.glow_frame:SetSize(unitFrame.healthBar:GetSize())\n    envTable.CGConfig = {\n        color = {0.2, 0.9, 0.9, 1},    -- color and opacity in {r, g, b, a} from 0 to 1;\n        N =  12,    -- number of lines;\n        frequency = .33,    -- frequency, set to negative to inverse direction of rotation;\n        length = nil,    -- length of lines;\n        th = 2,    -- thickness of lines;\n        xOffset = 2,\n        yOffset = 2,    -- offset of glow relative to region border;\n        boder = nil,    -- set to true to create border under lines;\n        key = nil,    -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)    \n    --stop PixelGlow effect    \n    local frame = unitFrame.healthBar\n    Plater.StopPixelGlow(frame, envTable.CGConfig.key)    \n    --restore nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --start PixelGlow effect\n    local frame = unitFrame.healthBar\n    Plater.StartPixelGlow(frame, envTable.CGConfig.color, envTable.CGConfig, envTable.CGConfig.key)\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    \n    \nend\n\n\n",
					["Time"] = 1677634328,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --envTable.LCG = LibStub(\"LibCustomGlow-1.0\")\n    envTable.HealthBarColor = \"gold\"\n    --envTable.glow_frame = CreateFrame(\"Frame\", nil, unitFrame.healthBar)\n    --envTable.glow_frame:SetAllPoints(unitFrame.healthBar)\n    --envTable.glow_frame:SetSize(unitFrame.healthBar:GetSize())\n    envTable.CGConfig = {\n        color = {0.2, 0.9, 0.9, 1},    -- color and opacity in {r, g, b, a} from 0 to 1;\n        N =  12,    -- number of lines;\n        frequency = .33,    -- frequency, set to negative to inverse direction of rotation;\n        length = nil,    -- length of lines;\n        th = 2,    -- thickness of lines;\n        xOffset = 2,\n        yOffset = 2,    -- offset of glow relative to region border;\n        boder = nil,    -- set to true to create border under lines;\n        key = nil,    -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n\n\n\n\n\n",
					["url"] = "https://wago.io/MpDahQfbA/3",
					["NpcNames"] = {
						"120651", -- [1]
						"Explosives", -- [2]
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)    \n    --stop PixelGlow effect    \n    local frame = unitFrame.healthBar\n    Plater.StopPixelGlow(frame, envTable.CGConfig.key)    \n    --restore nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \nend\n\n\n",
					["Revision"] = 741,
					["Options"] = {
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply pixel glow to a explosive orb's healthbar when it spawns in a Mythic Dungeon with Explosion Affix.",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    \n    \nend\n\n\n",
					["version"] = 3,
					["PlaterCore"] = 1,
					["Name"] = "Explosive M+ Affix Pixel Glow",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --start PixelGlow effect\n    local frame = unitFrame.healthBar\n    Plater.StartPixelGlow(frame, envTable.CGConfig.color, envTable.CGConfig, envTable.CGConfig.key)\nend\n\n\n\n\n\n\n\n",
					["semver"] = "1.0.2",
					["Icon"] = 2175503,
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1677634304,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        --[154564] = {80, 30},   --debug\n        \n        --                                                                             ***DUNGEONS***\n        -- DF Dungeons\n        [190485] = {50}, --Stormvein - Ruby Life pools\n        [190484] = {50},  --Kyrakka - Ruby Life pools\n        [193435] = {50}, --Kyrakka - Ruby Life pools\n        [188252] = {66,33}, --Melidrussa Chillworn - Ruby Life pools\n        [197697] = {50}, -- Flamegullet - Ruby Life Pools\n        [186738] = {75, 50, 25}, --Umbrelskul - The Azure Vault\n        [186125] = {30}, --Tricktotem - Brackenhide Hollow\n        [186122] = {30}, --Rira Hackclaw - Brackenhide Hollow\n        [186124] = {30}, --Gashtooth - Brackenhide Hollow\n        [185534] = {10}, --Bonebolt Hunter - Brackenhide Hollow\n        [186121] = {4}, -- Decatriarch Wratheye - Brackenhide Hollow\n        [194816] = {10}, -- Forgewrought Monstrosity - Neltharus\n        [189719] = {15}, --Watcher Irideus - Halls of Infusion\n        [190407] = {20}, --Aqua Rager - Halls of Infusion\n        [186151] = {60}, --Balakar Khan - The Nokhud Offensive\n        [184020] = {40}, -- Hulking Berserker-  Uldaman: Legacy of Tyr\n        [184580] = {10}, -- Olaf -  Uldaman: Legacy of Tyr\n        [184581] = {10}, -- Baelog -  Uldaman: Legacy of Tyr\n        [184582] = {10}, -- Eric \"The Swift\" -  Uldaman: Legacy of Tyr\n        [184422] = {70, 30}, --Emberon - Uldaman: Legacy of Tyr\n        \n        -- SL Dungeons\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, --Sathel the Accursed - theater of pain\n        [165946] = {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller -mists of  tina\n        [164926] = {50}, --Drust Boughbreaker - mists of tina\n        [164804] = {22}, -- Droman Oulfarran - mists of tina\n        [164267] = {66, 33}, --Magrave Stradama - Plaguefall\n        [164967] = {66, 33}, --Doctor ickus - Plaguefall\n        [169861] = {66, 33}, -- Ickor Bileflesh - Plaguefall\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonemen\n        [162099] = {50}, --General Kaal Boss fight- Sanguine Depths\n        [162061] = {70, 30}, --Devos - Spires of Ascension\n        [163121] = {70}, -- Stitched vanguard - Necrotic Wake\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer - De Other Side\n        [177269] = {40}, --So'leah - Tazavesh: Gambit\n        [175806] = {66, 33}, --So'azmi - Tazavesh: Streets\n        \n        -- BFA Dungeons\n        [133345] = {20}, --Feckless Assistant - The MOTHERLODE!!\n        [150276] = {50}, --Heavy Scrapbots - Mechagon: Junk\n        [152009] = {30}, --Malfunctioning Scrapbots - Mechagon: Jun\n        [144298] = {30}, --Defense Bot Mk III (casts a shield) -Mechagon: Work\n        \n        -- Draenor Dungeons\n        [81236] = {50}, -- Grimrail Technician - Grimrail Depot\n        [79545] = {60}, -- Nitrogg Thundertower - Grimrail Depot\n        [77803] = {20}, -- Railmaster Rocketspark - Grimrail Depot\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar - Iron Docks\n        [76057] = {20.5}, -- Carrion Worm - Shadowmoon Burial Grounds\n        \n        -- Legion Dungeons\n        [114790] = {66, 33}, -- Viz'aduum - Kara: Upper\n        [114261] = {50}, --Toe Knee - Kara: Lower\n        [114260] = {50}, -- Mrrgria - Kara: Lower\n        [114265] = {50}, --Gang Ruffian - Kara: Lower\n        [114783] = {50}, --Reformed Maiden - Kara: Lower\n        [114312] = {60}, -- Moroes - Kara: Lower\n        [96574] = {30}, --Stormforged Sentinel - Halls of Valor\n        [95674] = {60.5}, -- Fenryr P1- Halls of Valor\n        [94960] = {10.5}, -- Hymdall - Halls of Valor\n        [95676] = {80,5}, --Odyn - Halls of Valor\n        [104215] = {25}, -- Patrol Captain Gerdo - Court of Stars\n        \n        -- Pandaria Dungeons\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {29.5}, -- Liu Flameheart, TotJS\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [181378] = {66, 33},  --Kurog Grimtotem, Vault of the Incarnates\n        [194990] = {50},        -- Stormseeker Acolyte, Vault of the Incarnates\n        [189492] = {65},        -- Raszageth, Vault of the Incarnates\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = {40}, --Bazual, The Dreaded Flame, Dhragonflight\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["url"] = "https://wago.io/miabQpRfX/9",
					["NpcNames"] = {
						"81236", -- [1]
						"77803", -- [2]
						"150276", -- [3]
						"152009", -- [4]
						"175806", -- [5]
						"114790", -- [6]
						"81297", -- [7]
						"79545", -- [8]
						"177269", -- [9]
						"133345", -- [10]
						"164926", -- [11]
						"114265", -- [12]
						"114261", -- [13]
						"114783", -- [14]
						"180013", -- [15]
						"179931", -- [16]
						"193532", -- [17]
						"116410", -- [18]
						"190485", -- [19]
						"193435", -- [20]
						"188252", -- [21]
						"186738", -- [22]
						"186125", -- [23]
						"186122", -- [24]
						"186124", -- [25]
						"184422", -- [26]
						"96574", -- [27]
						"114312", -- [28]
						"164804", -- [29]
						"164267", -- [30]
						"164967", -- [31]
						"169861", -- [32]
						"162061", -- [33]
						"144298", -- [34]
						"181378", -- [35]
						"181548", -- [36]
						"181551", -- [37]
						"181546", -- [38]
						"181549", -- [39]
						"183501", -- [40]
						"180906", -- [41]
						"185421", -- [42]
						"163121", -- [43]
						"175730", -- [44]
						"176523", -- [45]
						"175725", -- [46]
						"176929", -- [47]
						"166969", -- [48]
						"166970", -- [49]
						"166971", -- [50]
						"167406", -- [51]
						"173162", -- [52]
						"175732", -- [53]
						"183671", -- [54]
						"184020", -- [55]
						"114260", -- [56]
						"184581", -- [57]
						"184582", -- [58]
						"184580", -- [59]
						"189719", -- [60]
						"185534", -- [61]
						"190407", -- [62]
						"194816", -- [63]
						"186151", -- [64]
						"59544", -- [65]
						"186121", -- [66]
						"197697", -- [67]
						"194990", -- [68]
						"76057", -- [69]
						"56732", -- [70]
						"95676", -- [71]
						"94960", -- [72]
						"104215", -- [73]
						"95674", -- [74]
						"189492", -- [75]
						"190484", -- [76]
						"97087", -- [77]
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["Revision"] = 373,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option8",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [8]
					},
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Prio"] = 99,
					["Author"] = "Duracell",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["version"] = 9,
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [D]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["semver"] = "1.0.8",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
				}, -- [9]
			},
			["npcs_renamed"] = {
				["162691"] = "Blightboner",
				["185680"] = "Haste Relic",
				["181549"] = "War",
				["197985"] = "Flame",
				["185683"] = "Speed Relic",
				["195930"] = "Mandick",
				["185610"] = "Simp",
				["194316"] = "I'm Zarii",
				["190128"] = "Zul'gondeez",
				["196116"] = "Furry",
				["164705"] = "Haste Slime",
				["198047"] = "Tempest",
				["175806"] = "Sa'lami",
				["194315"] = "Shlongo",
				["70245"] = "uh oh",
				["168153"] = "Plaguecock",
				["179334"] = "Not the boss",
				["173044"] = "Stitcher",
				["189813"] = "Dathea",
				["179842"] = "Assclapper",
				["195929"] = "Twomen",
				["197219"] = "Big Lasher",
				["59726"] = "Pearl",
				["190381"] = "Rotburst Totem",
				["181224"] = "Da Sausage",
				["188026"] = "Skull Emoji",
				["175663"] = "Hill Brad",
				["184972"] = "Eggnog",
				["144294"] = "Twinkerer",
				["178141"] = "Fish Dicker",
				["164707"] = "Purple Slime",
				["144298"] = "Mk III",
				["59555"] = "Haunting",
				["151657"] = "Bomb",
				["190426"] = "Decay Totem",
				["181551"] = "Duty",
				["185685"] = "CDR Relic",
				["180015"] = "Dickhand",
				["175646"] = "S.U.C.C. Master",
				["180990"] = "Jailer",
				["194897"] = "Stormsurge Totem",
				["164804"] = "Simp Tree",
				["178171"] = "Don't Pull Me",
				["191736"] = "Beak Bitch",
				["176394"] = "Worker",
				["197298"] = "Nascent Dragon",
				["184910"] = "Speed Boi",
				["190484"] = "Cracka",
				["163891"] = "Bad Slime",
				["197698"] = "Thundercunt",
				["164967"] = "Dickus",
				["187897"] = "Dragher",
				["165010"] = "Purple Slime",
				["179733"] = "Fish Dick",
				["201155"] = "Nascent Dragon",
				["184911"] = "CDR Boi",
				["193457"] = "Ballerina",
				["180773"] = "Trash Can",
				["191222"] = "Frost Dragon",
				["168310"] = "Plaguecock",
				["164501"] = "Mute Me",
				["181548"] = "Absolution",
				["176523"] = "Painsmith",
				["192333"] = "Alpha",
				["165946"] = "Mordretha",
				["182169"] = "Lithium",
				["32666"] = "Uh oh",
				["151649"] = "Mk I",
				["167731"] = "Separator",
				["168969"] = "Green Slime",
				["181546"] = "Renewal",
				["199368"] = "Hard Crystal",
				["184908"] = "Haste Boi",
				["174843"] = "Maitre D",
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8552",
				["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:2204",
			},
			["aura_cache_by_name"] = {
				["power word: shield"] = {
					17, -- [1]
					11647, -- [2]
					11835, -- [3]
					11974, -- [4]
					17139, -- [5]
					20697, -- [6]
					22187, -- [7]
					27607, -- [8]
					29408, -- [9]
					32595, -- [10]
					35944, -- [11]
					36052, -- [12]
					41373, -- [13]
					44175, -- [14]
					44291, -- [15]
					46193, -- [16]
					66099, -- [17]
					71548, -- [18]
					71780, -- [19]
					83842, -- [20]
					84039, -- [21]
					102409, -- [22]
					113734, -- [23]
					122808, -- [24]
					123258, -- [25]
					127399, -- [26]
					135313, -- [27]
					136100, -- [28]
					165718, -- [29]
					211558, -- [30]
					226076, -- [31]
					248441, -- [32]
					284471, -- [33]
					318158, -- [34]
					344426, -- [35]
				},
				["butcher cut"] = {
					279416, -- [1]
					279426, -- [2]
				},
				["mutilated flesh"] = {
					211672, -- [1]
					340431, -- [2]
					381672, -- [3]
					394021, -- [4]
				},
				["enslaved"] = {
					201089, -- [1]
					204831, -- [2]
					211680, -- [3]
					222424, -- [4]
					268192, -- [5]
					299156, -- [6]
					303622, -- [7]
					323961, -- [8]
				},
				["moonkin aura"] = {
					209740, -- [1]
					209746, -- [2]
				},
				["numbing poison"] = {
					5760, -- [1]
					5761, -- [2]
					158873, -- [3]
					158876, -- [4]
					311373, -- [5]
					342947, -- [6]
					359078, -- [7]
				},
				["consecration"] = {
					26573, -- [1]
					32773, -- [2]
					33559, -- [3]
					36946, -- [4]
					37553, -- [5]
					38385, -- [6]
					41541, -- [7]
					43429, -- [8]
					57798, -- [9]
					59998, -- [10]
					69930, -- [11]
					79966, -- [12]
					81297, -- [13]
					107100, -- [14]
					111365, -- [15]
					153441, -- [16]
					158416, -- [17]
					162642, -- [18]
					165711, -- [19]
					184047, -- [20]
					188370, -- [21]
					190010, -- [22]
					200667, -- [23]
					200678, -- [24]
					200679, -- [25]
					204242, -- [26]
					205228, -- [27]
					216217, -- [28]
					221645, -- [29]
					221730, -- [30]
					233390, -- [31]
					243597, -- [32]
					251151, -- [33]
					251152, -- [34]
					251549, -- [35]
					251550, -- [36]
					264082, -- [37]
					283579, -- [38]
					283582, -- [39]
					283583, -- [40]
					288807, -- [41]
					288808, -- [42]
					288809, -- [43]
					290496, -- [44]
					290497, -- [45]
					290498, -- [46]
					294346, -- [47]
					294347, -- [48]
					327980, -- [49]
					344172, -- [50]
					382484, -- [51]
					387881, -- [52]
				},
				["chaos brand"] = {
					1490, -- [1]
					255260, -- [2]
					281242, -- [3]
				},
				["whip rage"] = {
					29340, -- [1]
				},
				["mystic touch"] = {
					8647, -- [1]
				},
				["regrowth"] = {
					8936, -- [1]
					16561, -- [2]
					20665, -- [3]
					22373, -- [4]
					22695, -- [5]
					27637, -- [6]
					28744, -- [7]
					34361, -- [8]
					39000, -- [9]
					39125, -- [10]
					66067, -- [11]
					69882, -- [12]
					72922, -- [13]
					72932, -- [14]
				},
				["enveloping mist"] = {
					124682, -- [1]
					209193, -- [2]
					212414, -- [3]
					227345, -- [4]
					231605, -- [5]
					274062, -- [6]
					317602, -- [7]
					344008, -- [8]
					344240, -- [9]
				},
				["might of the upper reaches"] = {
					333579, -- [1]
				},
				["power word: fortitude"] = {
					13864, -- [1]
					21562, -- [2]
					23947, -- [3]
					23948, -- [4]
					36004, -- [5]
					58921, -- [6]
					74973, -- [7]
					94366, -- [8]
					133538, -- [9]
					160637, -- [10]
					165739, -- [11]
					183585, -- [12]
					206629, -- [13]
					211681, -- [14]
					266501, -- [15]
					267528, -- [16]
					284466, -- [17]
					286145, -- [18]
				},
				["mind flay"] = {
					15407, -- [1]
					16568, -- [2]
					17165, -- [3]
					22919, -- [4]
					23953, -- [5]
					26044, -- [6]
					26143, -- [7]
					28310, -- [8]
					29407, -- [9]
					29570, -- [10]
					32417, -- [11]
					35507, -- [12]
					37276, -- [13]
					37330, -- [14]
					37621, -- [15]
					38243, -- [16]
					40842, -- [17]
					42396, -- [18]
					43512, -- [19]
					46562, -- [20]
					52586, -- [21]
					54339, -- [22]
					54805, -- [23]
					57779, -- [24]
					57941, -- [25]
					59367, -- [26]
					59974, -- [27]
					60006, -- [28]
					60472, -- [29]
					65488, -- [30]
					78751, -- [31]
					79541, -- [32]
					79711, -- [33]
					89032, -- [34]
					91134, -- [35]
					103024, -- [36]
					129033, -- [37]
					144293, -- [38]
					149984, -- [39]
					150886, -- [40]
					150893, -- [41]
					154125, -- [42]
					164445, -- [43]
					172670, -- [44]
					183324, -- [45]
					189873, -- [46]
					193473, -- [47]
					196508, -- [48]
					196509, -- [49]
					201520, -- [50]
					202894, -- [51]
					203037, -- [52]
					203313, -- [53]
					203375, -- [54]
					208697, -- [55]
					216513, -- [56]
					218510, -- [57]
					222075, -- [58]
					234696, -- [59]
					241934, -- [60]
					254123, -- [61]
					260182, -- [62]
					260304, -- [63]
					263117, -- [64]
					264892, -- [65]
					271649, -- [66]
					274019, -- [67]
					274032, -- [68]
					277358, -- [69]
					277521, -- [70]
					278311, -- [71]
					284414, -- [72]
					290402, -- [73]
					292974, -- [74]
					299301, -- [75]
					303566, -- [76]
					306391, -- [77]
					308172, -- [78]
					308884, -- [79]
					308885, -- [80]
					310552, -- [81]
					310555, -- [82]
					312526, -- [83]
					312679, -- [84]
					314187, -- [85]
					314188, -- [86]
					314592, -- [87]
					315949, -- [88]
					316835, -- [89]
					317490, -- [90]
					319027, -- [91]
					321330, -- [92]
					394167, -- [93]
				},
				["arcane intellect"] = {
					1459, -- [1]
					13326, -- [2]
					36880, -- [3]
					45525, -- [4]
				},
				["mort'regar's echoes"] = {
					333575, -- [1]
				},
				["insidious chill"] = {
					391566, -- [1]
					391568, -- [2]
				},
				["earth dominance"] = {
					374917, -- [1]
					396067, -- [2]
					396068, -- [3]
					396085, -- [4]
					396098, -- [5]
				},
				["crippling poison"] = {
					3408, -- [1]
					3409, -- [2]
					25809, -- [3]
					30981, -- [4]
					44289, -- [5]
				},
				["deadly poison"] = {
					2818, -- [1]
					2823, -- [2]
					3583, -- [3]
					10022, -- [4]
					13582, -- [5]
					21787, -- [6]
					21788, -- [7]
					32970, -- [8]
					32971, -- [9]
					34616, -- [10]
					34655, -- [11]
					34657, -- [12]
					36872, -- [13]
					38519, -- [14]
					38520, -- [15]
					41191, -- [16]
					41192, -- [17]
					41485, -- [18]
					43580, -- [19]
					43581, -- [20]
					56145, -- [21]
					56149, -- [22]
					59479, -- [23]
					59482, -- [24]
					63755, -- [25]
					63756, -- [26]
					67710, -- [27]
					67711, -- [28]
					72329, -- [29]
					82632, -- [30]
					82633, -- [31]
				},
				["earth shield"] = {
					379, -- [1]
					974, -- [2]
					32734, -- [3]
					38590, -- [4]
					54479, -- [5]
					54480, -- [6]
					55599, -- [7]
					55600, -- [8]
					56451, -- [9]
					57802, -- [10]
					57803, -- [11]
					58981, -- [12]
					58982, -- [13]
					59471, -- [14]
					59472, -- [15]
					60013, -- [16]
					60014, -- [17]
					66063, -- [18]
					66064, -- [19]
					67530, -- [20]
					67537, -- [21]
					69568, -- [22]
					69569, -- [23]
					69925, -- [24]
					69926, -- [25]
					77905, -- [26]
					79927, -- [27]
					79928, -- [28]
					101649, -- [29]
					101650, -- [30]
					143475, -- [31]
					143479, -- [32]
					145559, -- [33]
					145560, -- [34]
					159981, -- [35]
					159982, -- [36]
					165773, -- [37]
					199355, -- [38]
					199356, -- [39]
					204288, -- [40]
					204290, -- [41]
					226078, -- [42]
					254417, -- [43]
					254425, -- [44]
					268709, -- [45]
					268710, -- [46]
					374066, -- [47]
					374067, -- [48]
					377874, -- [49]
					377875, -- [50]
					383648, -- [51]
				},
				["ice barrier"] = {
					11426, -- [1]
					33245, -- [2]
					69787, -- [3]
				},
			},
			["url"] = "https://wago.io/ak3iS95aa/85",
			["aura_stack_anchor"] = {
				["y"] = 1.680000305175781,
				["x"] = 8.40999984741211,
				["side"] = 12,
			},
			["cast_statusbar_fadein_time"] = 0.01999999955296516,
			["health_cutoff_upper"] = false,
			["cast_statusbar_spark_alpha"] = 1,
			["aura2_y_offset"] = 1.300003051757813,
			["aura_timer_text_anchor"] = {
				["x"] = 0.5,
			},
			["buffs_on_aura2"] = true,
			["plate_config"] = {
				["player"] = {
					["spellname_text_font"] = "Expressway",
					["power_percent_text_font"] = "Expressway",
					["percent_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
				},
				["friendlyplayer"] = {
					["actorname_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
					["actorname_friend_color"] = {
						0.70980392156863, -- [1]
					},
					["actorname_text_size"] = 9,
					["actorname_use_class_color"] = true,
					["cast"] = {
						132, -- [1]
						2, -- [2]
					},
					["level_text_alpha"] = 0.29999998211861,
					["actorname_text_spacing"] = 8,
					["only_damaged"] = false,
					["actorname_guild_color"] = {
						0.49803921568627, -- [1]
					},
					["cast_incombat"] = {
						132, -- [1]
						2, -- [2]
					},
					["spellname_text_font"] = "Expressway",
					["health_incombat"] = {
						132, -- [1]
						16, -- [2]
					},
					["health"] = {
						132, -- [1]
						16, -- [2]
					},
					["percent_show_percent"] = false,
					["percent_text_font"] = "Naowh",
					["percent_text_show_decimals"] = false,
					["level_text_font"] = "Naowh",
					["only_thename"] = true,
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Naowh",
					["cast"] = {
						132, -- [1]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 9,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["enabled"] = false,
					["cast_incombat"] = {
						132, -- [1]
						10, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["quest_color"] = {
						1, -- [1]
						0.49803921568627, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 11,
					["big_actorname_text_font"] = "Naowh",
					["actorname_text_outline"] = "OUTLINE",
					["big_actortitle_text_color"] = {
						nil, -- [1]
						0.7843137254902, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["spellpercent_text_enabled"] = true,
					["percent_text_font"] = "Expressway",
					["percent_text_enabled"] = true,
					["percent_show_health"] = true,
					["level_text_alpha"] = 0.29999998211861,
					["percent_text_size"] = 10,
					["health_incombat"] = {
						132, -- [1]
					},
					["health"] = {
						132, -- [1]
						16, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["spellname_text_font"] = "Expressway",
					["actorname_text_anchor"] = {
						["y"] = -0.2000045776367188,
						["x"] = 2.5,
						["side"] = 10,
					},
					["big_actorname_text_color"] = {
						0.25098039215686, -- [1]
						0.68627450980392, -- [2]
						0.20392156862745, -- [3]
						1, -- [4]
					},
					["quest_color_enemy"] = {
						1, -- [1]
						0.36862745098039, -- [2]
						0, -- [3]
						1, -- [4]
					},
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Expressway",
					["quest_color_enemy"] = {
						nil, -- [1]
						0.49803921568627, -- [2]
					},
					["spellpercent_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						nil, -- [1]
						0.49803921568627, -- [2]
					},
					["actorname_text_size"] = 9,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["actorname_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.29999998211861,
					["spellpercent_text_anchor"] = {
						["y"] = -1.5,
						["x"] = 3,
						["side"] = 5,
					},
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "Expressway",
					["cast_incombat"] = {
						135, -- [1]
						7, -- [2]
					},
					["spellname_text_font"] = "Expressway",
					["actorname_text_anchor"] = {
						["y"] = 0.5,
						["x"] = 2,
						["side"] = 10,
					},
					["spellname_text_size"] = 9,
					["health_incombat"] = {
						135, -- [1]
						15, -- [2]
					},
					["health"] = {
						135, -- [1]
						15, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = -1.5,
						["x"] = -1,
						["side"] = 3,
					},
					["big_actorname_text_font"] = "Expressway",
					["percent_text_anchor"] = {
						["y"] = 0.5,
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["level_text_enabled"] = false,
				},
				["global_health_width"] = 132,
				["enemyplayer"] = {
					["actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 10,
					["quest_color_enemy"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 8,
					["spellname_text_font"] = "Expressway",
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						135, -- [1]
						7, -- [2]
					},
					["all_names"] = true,
					["actorname_text_anchor"] = {
						["y"] = 0.5,
						["x"] = 2,
						["side"] = 10,
					},
					["big_actortitle_text_size"] = 10,
					["fixed_class_color"] = {
						0.69803921568627, -- [1]
						0.1921568627451, -- [2]
						0.11372549019608, -- [3]
					},
					["actorname_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.29999998211861,
					["spellpercent_text_anchor"] = {
						["y"] = -1.5,
						["x"] = 3,
						["side"] = 5,
					},
					["actorname_text_size"] = 10,
					["actorname_text_spacing"] = 9,
					["percent_text_font"] = "Expressway",
					["big_actorname_text_font"] = "Expressway",
					["cast_incombat"] = {
						135, -- [1]
						7, -- [2]
					},
					["quest_enabled"] = true,
					["spellname_text_outline"] = "OUTLINE",
					["health_incombat"] = {
						135, -- [1]
						15, -- [2]
					},
					["quest_color_enabled"] = true,
					["spellname_text_size"] = 9,
					["health"] = {
						135, -- [1]
						15, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = -1.5,
						["x"] = -1,
						["side"] = 3,
					},
					["spellpercent_text_size"] = 9,
					["percent_text_anchor"] = {
						["y"] = 0.5,
						["side"] = 11,
					},
					["level_text_font"] = "Expressway",
					["level_text_enabled"] = false,
				},
				["global_health_height"] = 16,
			},
			["health_selection_overlay"] = "PlaterFocus",
			["aura_y_offset"] = 1.300003051757813,
			["expansion_triggerwipe"] = {
				[9] = true,
				[8] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.80000007152557, -- [1]
				0.30196079611778, -- [2]
				0.30196079611778, -- [3]
				1, -- [4]
			},
			["first_run2"] = true,
			["indicator_spec"] = false,
			["border_thickness"] = 0.4999999701976776,
			["resources_settings"] = {
				["chr"] = {
					["Player-4184-004EAE08"] = "ArcaneCharges",
					["Player-3674-0898468A"] = "SoulShards",
					["Player-3674-096625B1"] = "Chi",
					["Player-3678-0D4F17CA"] = "ComboPoints",
					["Player-3676-0DBAB9E1"] = "ComboPoints",
					["Player-3678-0D4C07B5"] = "ComboPoints",
					["Player-970-0065C1C7"] = "ComboPoints",
					["Player-3678-0D44FD01"] = "ComboPoints",
					["Player-2073-09AF21B0"] = "ComboPoints",
					["Player-4604-00325132"] = "ComboPoints",
					["Player-3674-09CBAF8C"] = "ArcaneCharges",
					["Player-970-006B99B8"] = "ComboPoints",
					["Player-4184-0021692E"] = "ComboPoints",
				},
				["global_settings"] = {
					["anchor"] = {
						["y"] = 9.709999084472656,
					},
					["scale"] = 0.80000001192093,
				},
			},
			["health_animation_time_dilatation"] = 1.669999957084656,
			["npc_cache"] = {
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[115407] = {
					"Rook", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[161124] = {
					"Urg'roth, Breaker of Heroes", -- [1]
					"The Underrot", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[201155] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168425] = {
					"Forsworn Annihilator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[114584] = {
					"Phantom Crew", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190426] = {
					"Decay Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[135699] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"UNKNOWN", -- [2]
				},
				[190686] = {
					"Frozen Destroyer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[118489] = {
					"Corrupted Risen Soldier", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[98285] = {
					"Smashum Grabb", -- [1]
					"Tanaan Jungle", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[190688] = {
					"Blazing Fiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[139284] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[118491] = {
					"Corrupted Risen Mage", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[115486] = {
					"Erudite Slayer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[114783] = {
					"Reformed Maiden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168443] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[115488] = {
					"Infused Pyromancer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[196198] = {
					"Algeth'ar Security", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189555] = {
					"Arcane Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'dahh", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[190588] = {
					"Tectonic Crusher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180104] = {
					"Tangling Bloom", -- [1]
					"The Shadowlands", -- [2]
				},
				[114796] = {
					"Wholesome Hostess", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[198263] = {
					"Stalwart Broodwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114542] = {
					"Ghostly Philanthropist", -- [1]
					"Return to Karazhan", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[199547] = {
					"Frostforged Zealot", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[114544] = {
					"Skeletal Usher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[155432] = {
					"Enchanted Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[199549] = {
					"Flamesworn Herald", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[155433] = {
					"Void-Touched Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[155434] = {
					"Emissary of the Tides", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[114803] = {
					"Spectral Stable Hand", -- [1]
					"Return to Karazhan", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114804] = {
					"Spectral Charger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Halls of Atonement", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115765] = {
					"Abstract Nullifier", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"UNKNOWN", -- [2]
				},
				[134602] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[115640] = {
					"Fuming Imp", -- [1]
					"Faronaar", -- [2]
				},
				[130026] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[135246] = {
					"\"Stabby\" Lottie", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[130027] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196117] = {
					"Crystal Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[115406] = {
					"Knight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190366] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[130025] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[115388] = {
					"King", -- [1]
					"Return to Karazhan", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[198424] = {
					"Primalist Frostsculptor", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[127497] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[175517] = {
					"Symbiotic Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136665] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Halls of Infusion", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114624] = {
					"Arcane Warden", -- [1]
					"Return to Karazhan", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[32666] = {
					"Training Dummy", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[114626] = {
					"Forlorn Spirit", -- [1]
					"Return to Karazhan", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168384] = {
					"Flesh Construct", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168658] = {
					"Forsworn Devastator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[199325] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[131445] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[135759] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[115395] = {
					"Queen", -- [1]
					"Return to Karazhan", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[197799] = {
					"Quarry Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[127480] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[175550] = {
					"Volatile Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[87329] = {
					"Raider's Training Dummy", -- [1]
					"Draenor", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[116549] = {
					"Backup Singer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196203] = {
					"Algeth'ar Nurse", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189878] = {
					"Nathrezim Infiltrator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[114632] = {
					"Spectral Attendant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190690] = {
					"Thundering Ravager", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[87252] = {
					"Unruly Ogron", -- [1]
					"Iron Docks", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[127484] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[114633] = {
					"Spectral Valet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Spires of Ascension", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169421] = {
					"Felguard", -- [1]
					"Halls of Infusion", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199595] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[127482] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"UNKNOWN", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114634] = {
					"Undying Servant", -- [1]
					"Return to Karazhan", -- [2]
				},
				[136735] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[127486] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115402] = {
					"Bishop", -- [1]
					"Return to Karazhan", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[179852] = {
					"Soulless Vengeance", -- [1]
					"The Shadowlands", -- [2]
				},
				[187154] = {
					"Arcane Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[115642] = {
					"Umbral Imp", -- [1]
					"Faronaar", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[161241] = {
					"Voidweaver Mal'thir", -- [1]
					"The Underrot", -- [2]
				},
				[115019] = {
					"Coldmist Widow", -- [1]
					"Return to Karazhan", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[198326] = {
					"Stormwrought Despoiler", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[161243] = {
					"Samh'rek, Beckoner of Chaos", -- [1]
					"The Underrot", -- [2]
				},
				[115020] = {
					"Arcanid", -- [1]
					"Return to Karazhan", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[127488] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[161244] = {
					"Blood of the Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[200943] = {
					"Electrified Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Halls of Infusion", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
			},
			["indicator_scale"] = 0.9999999403953552,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.50242385268211, -- [4]
			},
			["indicator_anchor"] = {
				["side"] = 6,
				["x"] = 2,
			},
			["health_selection_overlay_alpha"] = 0,
			["minor_height_scale"] = 0.99999994039536,
			["extra_icon_show_enrage_border"] = {
				0.85098039215686, -- [1]
				0, -- [2]
				0.074509803921569, -- [3]
			},
			["aura_padding"] = 0,
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Deadly Poison\"] = 93,\n        [\"Sinful Revelation\"] = 92,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634199,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = true,
					["Revision"] = 497,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Initialization",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 158,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
					},
					["LastHookEdited"] = "",
					["Author"] = "�r��ne-Kel'thuzad",
					["PlaterCore"] = 1,
					["Desc"] = "Adds double arrow as a target indicators option",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1677634210,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Name"] = "Double Arrow Target",
					["Url"] = "https://wago.io/f5itAXjQq/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
					["Options"] = {
					},
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 231,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Author"] = "Viashi-Antonidas",
					["PlaterCore"] = 1,
					["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1677634245,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Name"] = "QuestProgress",
					["Url"] = "https://wago.io/uwe9CEwMm/2",
					["Icon"] = 132212,
					["Options"] = {
					},
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1677634169,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/VtPjNl8Mg/7",
					["Icon"] = 135940,
					["Enabled"] = true,
					["Revision"] = 1229,
					["semver"] = "1.0.6",
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Prio"] = 99,
					["version"] = 7,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options For @scriptname",
							["Name"] = "Options Intro",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = "",
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
					},
					["LastHookEdited"] = "",
					["Name"] = "Absorb Shields in Healthbar",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 893,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Training Dummy\"] = \"Dum Dum\", \n        --[\"\"] = \"\", --Template\n        \n        --Dragonflight Raids\n        \n        --Vault of the Incarnates\n        [\"Frost Tomb\"] = \"Skull Emoji\",\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        [\"Eranog\"] = \"Eggnog\",\n        [\"Nascent Proto-Dragon\"] = \"Nascent Dragon\",\n        [\"Juvenile Frost Proto-Dragon\"] = \"Frost Dragon\",\n        \n        \n        \n        --Dragonflight Dungeons\n        \n        --Ruby Life Pools\n        [\"Thunderhead\"] = \"Thundercunt\",\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        [\"Defier Draghar\"] = \"Dragher\",\n        [\"Kyrakka\"] = \"Cracka\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Crawth\"] = \"Beak Bitch\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Big Crystal\",\n        [\"Crystal Fury\"] = \"Furry\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Decay Totem\",\n        \n        --Halls of Infusion\n        \n        \n        --Neltharus\n        \n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        [\"Stormcaller Solongo\"] = \"Shlongo\",\n        [\"Stormcaller Zarii\"] = \"I'm Zarii\",\n        [\"Soulharvester Tumen\"] = \"Twomen\",\n        [\"Soulharvester Mandakh\"] = \"Mandick\",\n        [\"Balara\"] = \"Ballerina\",\n        \n        \n        --Uldaman: Legacy of Tyr\n        \n        \n        \n        \n        --Shadowlands\n        \n        --Open World\n        [\"Fallen Knowledge-Seeker\"] = \"Seeker\",\n        \n        \n        \n        --Shadowlands Raids\n        \n        --Castle Nathria\n        [\"Stoneborn Maitre D'\"] = \"Maitre D'\",\n        [\"Rat of Unusual Size\"] = \"Big Rat\",\n        \n        --Sanctum of Domination\n        [\"Sylvanas Windrunner\"] = \"Sylvanas\",\n        \n        --Sepulcher of the First Ones\n        [\"Dausegne\"] = \"Da Sausage\",\n        [\"Anduin Wrynn\"] = \"Anduin\",\n        [\"The Jailer\"] = \"Jailer\",\n        [\"Unmade Steward\"] = \"Simp\",\n        [\"Lihuvim\"] = \"Lithium\",\n        [\"Prototype of War\"] = \"War\",\n        [\"Prototype of Duty\"] = \"Duty\",\n        [\"Prototype of Renewal\"] = \"Renewal\",\n        [\"Prototype of Absolution\"] = \"Absolution\",\n        \n        \n        \n        --Shadowlands Dungeons\n        \n        --De other Side\n        [\"Millhouse Manastorm\"] = \"Milfhouse\",\n        [\"Millificent Manastorm\"] = \"Millificent\",\n        \n        --Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Mute Me\",\n        \n        --Necrotic Wake\n        [\"Stitching Assistant\"] = \"Stitcher\",\n        [\"Separation Assistant\"] = \"Separator\",\n        [\"Blightbone\"] = \"Blightboner\",\n        \n        --Theater of pain\n        [\"Mordretha, the Endless Empress\"] = \"Mordretha\",   \n        \n        --Plaguefall\n        [\"Congealed Slime\"] = \"Purple Slime\",\n        [\"Pestilence Slime\"] = \"Haste Slime\",\n        [\"Gushing Slime\"] = \"Green Slime\",\n        [\"Rotmarrow Slime\"] = \"Bad Slime\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        [\"Plagueroc\"] = \"Plaguecock\",\n        \n        --Tazavesh: Streets of Wonder\n        [\"Commerce Enforcer\"] = \"Assclapper\",\n        [\"So'azmi\"] = \"Sa'lami\",\n        [\"P.O.S.T. Master\"] = \"S.U.C.C. Master\",\n        [\"Portalmancer Zo'dahh\"] = \"Not The Boss\",\n        \n        --Tazavesh: So'leah's Gambit\n        [\"Murkbrine Scalebinder\"] = \"Fish Dicker\",\n        [\"Invigorating Fish Stick\"] = \"Fish Dick\",\n        [\"Hylbrande\"] = \"Hill Brad\",\n        [\"Burly Deckhand\"] = \"Dickhand\",\n        [\"Stormforged Guardian\"] = \"Don't pull me\",\n        \n        \n        \n        --Legion Dungeons\n        \n        --Return To Karazhan\n        [\"Spectral Apprentice\"] = \"Apprentice\",\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Halls of Valor\n        [\"Solsten\"] = \"Soulstone\",\n        \n        --Court of Stars\n        \n        \n        \n        --MoP Dungeons\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n        [\"Peril\"] = \"Pearl\",\n        \n        \n        \n        --BFA Dungeons\n        \n        --Operation: Mechagon\n        [\"Rocket Tonk\"] = \"Rocket\",\n        [\"Strider Tonk\"] = \"Strider\",\n        [\"Bomb Tonk\"] = \"Bomb\",\n        [\"Defense Bot Mk I\"] = \"MK-I\",\n        [\"Defense Bot Mk III\"] = \"MK-III\",\n        [\"Mechagon Tinkerer\"] = \"Twinkerer\",\n        \n        \n        \n        --Seasonal Affixes\n        \n        --M+ Shrouded Affix\n        [\"Zul'gamux\"] = \"Zul'gondeez\",\n        \n        --M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Speed Relic\",\n        [\"Vy Relic\"] = \"Haste Relic\",\n        [\"Urh Dismantler\"] = \"CDR Boi\",\n        [\"Wo Drifter\"] = \"Speed Boi\",\n        [\"Vy Interceptor\"] = \"Haste Boi\",\n        \n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["LastHookEdited"] = "",
					["Author"] = "Rhk-Tarren Mill",
					["PlaterCore"] = 1,
					["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Updated\")\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), false, false, false, \"Added\")\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFFFFFFF\", -- Yellow 5 Point Star\n        [2] = \"FFFFFFFF\", -- Orange Circle\n        [3] = \"FFFFFFFF\", -- Purple Diamond\n        [4] = \"FFFFFFFF\", -- Green Triangle\n        [5] = \"FFFFFFFF\", -- Light Blue Moon\n        [6] = \"FFFFFFFF\", -- Blue Square\n        [7] = \"FFFFFFFF\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        --[\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Training Dummy\"] = \"Dum Dum\", \n        --[\"\"] = \"\", --Template\n        \n        --Dragonflight Raids\n        \n        --Vault of the Incarnates\n        [\"Frost Tomb\"] = \"Skull Emoji\",\n        [\"Dathea, Ascended\"] = \"Dathea\",\n        [\"Eranog\"] = \"Eggnog\",\n        [\"Nascent Proto-Dragon\"] = \"Nascent Dragon\",\n        [\"Juvenile Frost Proto-Dragon\"] = \"Frost Dragon\",\n        \n        \n        \n        --Dragonflight Dungeons\n        \n        --Ruby Life Pools\n        [\"Thunderhead\"] = \"Thundercunt\",\n        [\"Tempest Channeler\"] = \"Tempest\",\n        [\"Flame Channeler\"] = \"Flame\",\n        [\"Defier Draghar\"] = \"Dragher\",\n        [\"Kyrakka\"] = \"Cracka\",\n        \n        --Algeth'ar Academy\n        [\"Alpha Eagle\"] = \"Alpha\",\n        [\"Crawth\"] = \"Beak Bitch\",\n        [\"Vile Lasher\"] = \"Big Lasher\",\n        \n        \n        --The Azure Vault\n        [\"Hardened Crystal\"] = \"Big Crystal\",\n        [\"Crystal Fury\"] = \"Furry\",\n        \n        --Brackenhide Hollow\n        [\"Rotburst Totem\"] = \"Rotburst\",\n        [\"Decay Totem\"] = \"Decay Totem\",\n        \n        --Halls of Infusion\n        \n        \n        --Neltharus\n        \n        \n        --The Nokhud Offensive\n        [\"Stormsurge Totem\"] = \"Storm Totem\",\n        [\"Stormcaller Solongo\"] = \"Shlongo\",\n        [\"Stormcaller Zarii\"] = \"I'm Zarii\",\n        [\"Soulharvester Tumen\"] = \"Twomen\",\n        [\"Soulharvester Mandakh\"] = \"Mandick\",\n        [\"Balara\"] = \"Ballerina\",\n        \n        \n        --Uldaman: Legacy of Tyr\n        \n        \n        \n        \n        --Shadowlands\n        \n        --Open World\n        [\"Fallen Knowledge-Seeker\"] = \"Seeker\",\n        \n        \n        \n        --Shadowlands Raids\n        \n        --Castle Nathria\n        [\"Stoneborn Maitre D'\"] = \"Maitre D'\",\n        [\"Rat of Unusual Size\"] = \"Big Rat\",\n        \n        --Sanctum of Domination\n        [\"Sylvanas Windrunner\"] = \"Sylvanas\",\n        \n        --Sepulcher of the First Ones\n        [\"Dausegne\"] = \"Da Sausage\",\n        [\"Anduin Wrynn\"] = \"Anduin\",\n        [\"The Jailer\"] = \"Jailer\",\n        [\"Unmade Steward\"] = \"Simp\",\n        [\"Lihuvim\"] = \"Lithium\",\n        [\"Prototype of War\"] = \"War\",\n        [\"Prototype of Duty\"] = \"Duty\",\n        [\"Prototype of Renewal\"] = \"Renewal\",\n        [\"Prototype of Absolution\"] = \"Absolution\",\n        \n        \n        \n        --Shadowlands Dungeons\n        \n        --De other Side\n        [\"Millhouse Manastorm\"] = \"Milfhouse\",\n        [\"Millificent Manastorm\"] = \"Millificent\",\n        \n        --Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Mute Me\",\n        \n        --Necrotic Wake\n        [\"Stitching Assistant\"] = \"Stitcher\",\n        [\"Separation Assistant\"] = \"Separator\",\n        [\"Blightbone\"] = \"Blightboner\",\n        \n        --Theater of pain\n        [\"Mordretha, the Endless Empress\"] = \"Mordretha\",   \n        \n        --Plaguefall\n        [\"Congealed Slime\"] = \"Purple Slime\",\n        [\"Pestilence Slime\"] = \"Haste Slime\",\n        [\"Gushing Slime\"] = \"Green Slime\",\n        [\"Rotmarrow Slime\"] = \"Bad Slime\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        [\"Plagueroc\"] = \"Plaguecock\",\n        \n        --Tazavesh: Streets of Wonder\n        [\"Commerce Enforcer\"] = \"Assclapper\",\n        [\"So'azmi\"] = \"Sa'lami\",\n        [\"P.O.S.T. Master\"] = \"S.U.C.C. Master\",\n        [\"Portalmancer Zo'dahh\"] = \"Not The Boss\",\n        \n        --Tazavesh: So'leah's Gambit\n        [\"Murkbrine Scalebinder\"] = \"Fish Dicker\",\n        [\"Invigorating Fish Stick\"] = \"Fish Dick\",\n        [\"Hylbrande\"] = \"Hill Brad\",\n        [\"Burly Deckhand\"] = \"Dickhand\",\n        [\"Stormforged Guardian\"] = \"Don't pull me\",\n        \n        \n        \n        --Legion Dungeons\n        \n        --Return To Karazhan\n        [\"Spectral Apprentice\"] = \"Apprentice\",\n        [\"Shrieking Terror\"] = \"Terror\",\n        \n        --Halls of Valor\n        [\"Solsten\"] = \"Soulstone\",\n        \n        --Court of Stars\n        \n        \n        \n        --MoP Dungeons\n        \n        --Temple of the Jade Serpent\n        [\"Haunting Sha\"] = \"Haunting\",\n        [\"Peril\"] = \"Pearl\",\n        \n        \n        \n        --BFA Dungeons\n        \n        --Operation: Mechagon\n        [\"Rocket Tonk\"] = \"Rocket\",\n        [\"Strider Tonk\"] = \"Strider\",\n        [\"Bomb Tonk\"] = \"Bomb\",\n        [\"Defense Bot Mk I\"] = \"MK-I\",\n        [\"Defense Bot Mk III\"] = \"MK-III\",\n        [\"Mechagon Tinkerer\"] = \"Twinkerer\",\n        \n        \n        \n        --Seasonal Affixes\n        \n        --M+ Shrouded Affix\n        [\"Zul'gamux\"] = \"Zul'gondeez\",\n        \n        --M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Speed Relic\",\n        [\"Vy Relic\"] = \"Haste Relic\",\n        [\"Urh Dismantler\"] = \"CDR Boi\",\n        [\"Wo Drifter\"] = \"Speed Boi\",\n        [\"Vy Interceptor\"] = \"Haste Boi\",\n        \n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            \n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n            \n        end   \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1677775102,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Name"] = "M+ Renamer",
					["Url"] = "https://wago.io/cC74EIkxK/13",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
					["Options"] = {
					},
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
					},
					["Time"] = 1673672853,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["arena"] = true,
							["pvp"] = true,
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/Zz1aEIOJR/1",
					["Icon"] = 132310,
					["Enabled"] = true,
					["Revision"] = 323,
					["semver"] = "1.0.0",
					["Author"] = "Irashi-Antonidas",
					["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Name"] = "Sappable (Custom Icon)",
				}, -- [6]
				{
					["OptionsValues"] = {
						["BSborderth"] = 1,
						["BSstack_color"] = {
							1, -- [1]
							0.023529414087534, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["BStimer_color"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.BShidefriendly and unitFrame.actorType == \"friendlyplayer\" then\n        if unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Hide()\n        end\n    else\n        if not unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Show()\n        end\n    end      \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    local function BuffSepcialFormat ()\n        local DF = _G [\"DetailsFramework\"]\n        DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge, spellName, isBuff, modRate)\n            \n            local actualSpellName, _, spellIcon = GetSpellInfo (spellId)\n            \n            if forceTexture then\n                spellIcon = forceTexture\n            end\n            \n            local spellName = spellName or actualSpellName or \"unknown_aura\"\n            local modRate = modRate or 1\n            \n            if (spellIcon) then\n                local profile = Plater.db.profile\n                local iconFrame = self:GetIcon()\n                iconFrame.Texture:SetTexture (spellIcon)\n                iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                \n                local size = modTable.config.BSborderth\n                \n                if (not iconFrame.PixelPerfectBorder) then\n                    iconFrame.PixelPerfectBorder = CreateFrame (\"frame\", nil, iconFrame, \"NamePlateFullBorderTemplate\")\n                end\n                \n                iconFrame.Border:Hide()\n                iconFrame.PixelPerfectBorder:SetVertexColor (Plater:ParseColors (borderColor))\n                iconFrame.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                iconFrame.PixelPerfectBorder:UpdateSizes()\n                \n                iconFrame.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                iconFrame.Texture:ClearAllPoints()\n                iconFrame.Texture:SetAllPoints()\n                \n                if (startTime) then\n                    CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                    \n                    if (self.options.show_text) then\n                        iconFrame.CountdownText:Show()\n                        \n                        local now = GetTime()\n                        iconFrame.timeRemaining = (startTime + duration - now) / modRate\n                        iconFrame.expirationTime = startTime + duration\n                        \n                        local formattedTime = (iconFrame.timeRemaining > 0) and self.options.decimal_timer and iconFrame.parentIconRow.FormatCooldownTimeDecimal(iconFrame.timeRemaining) or iconFrame.parentIconRow.FormatCooldownTime(iconFrame.timeRemaining) or \"\"\n                        iconFrame.CountdownText:SetText (formattedTime)\n                        \n                        iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                        DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                        DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                        DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                        \n                        if modTable.config.BScbt then\n                            if (iconFrame.timeRemaining/duration < 0.225) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"red\")\n                            elseif (iconFrame.timeRemaining/duration < 0.45) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"darkorange\")\n                            else\n                                Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                            end \n                        else\n                            Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                        end\n                        \n                        if self.options.on_tick_cooldown_update then\n                            iconFrame.lastUpdateCooldown = now\n                            iconFrame:SetScript(\"OnUpdate\", self.OnIconTick)\n                        else\n                            iconFrame:SetScript(\"OnUpdate\", nil)\n                        end\n                        \n                    else\n                        iconFrame:SetScript(\"OnUpdate\", nil)\n                        iconFrame.CountdownText:Hide()\n                    end\n                    \n                    iconFrame.Cooldown:SetReverse (self.options.cooldown_reverse)\n                    iconFrame.Cooldown:SetDrawSwipe (self.options.cooldown_swipe_enabled)\n                    iconFrame.Cooldown:SetEdgeTexture (self.options.cooldown_edge_texture)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (self.options.surpress_blizzard_cd_timer)\n                else\n                    iconFrame.timeRemaining = nil\n                    iconFrame.expirationTime = nil\n                    iconFrame:SetScript(\"OnUpdate\", nil)\n                    iconFrame.CountdownText:Hide()\n                end\n                \n                if (descText and self.options.desc_text) then\n                    iconFrame.Desc:Show()\n                    iconFrame.Desc:SetText (descText.text)     \n                    iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                    local Anchor = {\n                        side = modTable.config.Descanchor, \n                        x = modTable.config.Descxoff, \n                        y = modTable.config.Descyoff,\n                    }      \n                    Plater.SetAnchor (iconFrame.Desc, Anchor)\n                    DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                    DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                    DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                else\n                    iconFrame.Desc:Hide()\n                end\n                \n                \n                if (count and count > 1 and self.options.stack_text) then\n                    iconFrame.StackText:Show()\n                    iconFrame.StackText:SetText (count)\n                    iconFrame.StackText:SetTextColor (DF:ParseColors (modTable.config.BSstack_color))\n                    iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                    DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                    DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                    DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                else\n                    iconFrame.StackText:Hide()\n                end\n                \n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                iconFrame:Show()\n                \n                --> update the size of the frame\n                self:SetWidth ((self.options.left_padding * 2) + (modTable.config.BSpadding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                \n                --> make information available\n                iconFrame.spellId = spellId\n                iconFrame.startTime = startTime\n                iconFrame.duration = duration\n                iconFrame.count = count\n                iconFrame.debuffType = debuffType\n                iconFrame.caster = caster\n                iconFrame.canStealOrPurge = canStealOrPurge\n                iconFrame.isBuff = isBuff\n                iconFrame.spellName = spellName\n                \n                iconFrame.identifierKey = nil -- only used for \"specific\" add/remove\n                \n                --add the spell into the cache\n                self.AuraCache [spellId or -1] = true\n                self.AuraCache [spellName] = true\n                self.AuraCache.canStealOrPurge = self.AuraCache.canStealOrPurge or canStealOrPurge\n                self.AuraCache.hasEnrage = self.AuraCache.hasEnrage or debuffType == \"\" --yes, enrages are empty-string...\n                \n                --> show the frame\n                self:Show()\n                \n                return iconFrame\n            end\n        end\n    end    \n    \n    -- exchange formatting:\n    \n    function modTable.hookTimeFormat()\n        BuffSepcialFormat ()\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        BuffSepcialFormat ()\n        unitFrame.ExtraIconFrame:SetOption (\"icon_padding\", modTable.config.BSpadding)\n    end\n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    \n    modTable.hookTimeFormat()\n    \nend",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.BShidefriendly and unitFrame.actorType == \"friendlyplayer\" then\n        if unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Hide()\n        end\n    else\n        if not unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Show()\n        end\n    end      \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    local function BuffSepcialFormat ()\n        local DF = _G [\"DetailsFramework\"]\n        DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge, spellName, isBuff, modRate)\n            \n            local actualSpellName, _, spellIcon = GetSpellInfo (spellId)\n            \n            if forceTexture then\n                spellIcon = forceTexture\n            end\n            \n            local spellName = spellName or actualSpellName or \"unknown_aura\"\n            local modRate = modRate or 1\n            \n            if (spellIcon) then\n                local profile = Plater.db.profile\n                local iconFrame = self:GetIcon()\n                iconFrame.Texture:SetTexture (spellIcon)\n                iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                \n                local size = modTable.config.BSborderth\n                \n                if (not iconFrame.PixelPerfectBorder) then\n                    iconFrame.PixelPerfectBorder = CreateFrame (\"frame\", nil, iconFrame, \"NamePlateFullBorderTemplate\")\n                end\n                \n                iconFrame.Border:Hide()\n                iconFrame.PixelPerfectBorder:SetVertexColor (Plater:ParseColors (borderColor))\n                iconFrame.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                iconFrame.PixelPerfectBorder:UpdateSizes()\n                \n                iconFrame.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                iconFrame.Texture:ClearAllPoints()\n                iconFrame.Texture:SetAllPoints()\n                \n                if (startTime) then\n                    CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                    \n                    if (self.options.show_text) then\n                        iconFrame.CountdownText:Show()\n                        \n                        local now = GetTime()\n                        iconFrame.timeRemaining = (startTime + duration - now) / modRate\n                        iconFrame.expirationTime = startTime + duration\n                        \n                        local formattedTime = (iconFrame.timeRemaining > 0) and self.options.decimal_timer and iconFrame.parentIconRow.FormatCooldownTimeDecimal(iconFrame.timeRemaining) or iconFrame.parentIconRow.FormatCooldownTime(iconFrame.timeRemaining) or \"\"\n                        iconFrame.CountdownText:SetText (formattedTime)\n                        \n                        iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                        DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                        DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                        DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                        \n                        if modTable.config.BScbt then\n                            if (iconFrame.timeRemaining/duration < 0.225) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"red\")\n                            elseif (iconFrame.timeRemaining/duration < 0.45) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"darkorange\")\n                            else\n                                Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                            end \n                        else\n                            Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                        end\n                        \n                        if self.options.on_tick_cooldown_update then\n                            iconFrame.lastUpdateCooldown = now\n                            iconFrame:SetScript(\"OnUpdate\", self.OnIconTick)\n                        else\n                            iconFrame:SetScript(\"OnUpdate\", nil)\n                        end\n                        \n                    else\n                        iconFrame:SetScript(\"OnUpdate\", nil)\n                        iconFrame.CountdownText:Hide()\n                    end\n                    \n                    iconFrame.Cooldown:SetReverse (self.options.cooldown_reverse)\n                    iconFrame.Cooldown:SetDrawSwipe (self.options.cooldown_swipe_enabled)\n                    iconFrame.Cooldown:SetEdgeTexture (self.options.cooldown_edge_texture)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (self.options.surpress_blizzard_cd_timer)\n                else\n                    iconFrame.timeRemaining = nil\n                    iconFrame.expirationTime = nil\n                    iconFrame:SetScript(\"OnUpdate\", nil)\n                    iconFrame.CountdownText:Hide()\n                end\n                \n                if (descText and self.options.desc_text) then\n                    iconFrame.Desc:Show()\n                    iconFrame.Desc:SetText (descText.text)     \n                    iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                    local Anchor = {\n                        side = modTable.config.Descanchor, \n                        x = modTable.config.Descxoff, \n                        y = modTable.config.Descyoff,\n                    }      \n                    Plater.SetAnchor (iconFrame.Desc, Anchor)\n                    DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                    DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                    DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                else\n                    iconFrame.Desc:Hide()\n                end\n                \n                \n                if (count and count > 1 and self.options.stack_text) then\n                    iconFrame.StackText:Show()\n                    iconFrame.StackText:SetText (count)\n                    iconFrame.StackText:SetTextColor (DF:ParseColors (modTable.config.BSstack_color))\n                    iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                    DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                    DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                    DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                else\n                    iconFrame.StackText:Hide()\n                end\n                \n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                iconFrame:Show()\n                \n                --> update the size of the frame\n                self:SetWidth ((self.options.left_padding * 2) + (modTable.config.BSpadding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                \n                --> make information available\n                iconFrame.spellId = spellId\n                iconFrame.startTime = startTime\n                iconFrame.duration = duration\n                iconFrame.count = count\n                iconFrame.debuffType = debuffType\n                iconFrame.caster = caster\n                iconFrame.canStealOrPurge = canStealOrPurge\n                iconFrame.isBuff = isBuff\n                iconFrame.spellName = spellName\n                \n                iconFrame.identifierKey = nil -- only used for \"specific\" add/remove\n                \n                --add the spell into the cache\n                self.AuraCache [spellId or -1] = true\n                self.AuraCache [spellName] = true\n                self.AuraCache.canStealOrPurge = self.AuraCache.canStealOrPurge or canStealOrPurge\n                self.AuraCache.hasEnrage = self.AuraCache.hasEnrage or debuffType == \"\" --yes, enrages are empty-string...\n                \n                --> show the frame\n                self:Show()\n                \n                return iconFrame\n            end\n        end\n    end    \n    \n    -- exchange formatting:\n    \n    function modTable.hookTimeFormat()\n        BuffSepcialFormat ()\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        BuffSepcialFormat ()\n        unitFrame.ExtraIconFrame:SetOption (\"icon_padding\", modTable.config.BSpadding)\n    end\n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
						["Player Logon"] = "function(modTable)\n    \n    modTable.hookTimeFormat()\n    \nend",
					},
					["Time"] = 1677634210,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/-FONAlf09/15",
					["Icon"] = 134328,
					["Enabled"] = true,
					["Revision"] = 926,
					["semver"] = "1.0.14",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 15,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Basic Options",
							["Name"] = "Basic Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "BShidefriendly",
							["Value"] = true,
							["Name"] = "Hide Buff Special on Friendly UnitFrame",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Hide Buff Special at Friendly UnitFrame",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "BScbt",
							["Value"] = true,
							["Name"] = "Text Color By time",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, cooldown text color changed by time left. Below 10 is orange and below 5 is red.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special icon padding",
							["Min"] = 0,
							["Key"] = "BSpadding",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special border thickness",
							["Min"] = 0,
							["Key"] = "BSborderth",
							["Value"] = 1.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Border Thickness",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Text Options",
							["Name"] = "Buff Special Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "BStimer_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Timer Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set timer text color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "BSstack_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Stack Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set stack text color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Player Name Options",
							["Name"] = "Buff Special Player Name Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 9,
							["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)) / 9(CENTER)",
							["Min"] = 1,
							["Key"] = "Descanchor",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text Anchor",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text y-offset",
							["Min"] = -100,
							["Key"] = "Descyoff",
							["Value"] = -2,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text Y-offset",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text x-offset",
							["Min"] = -100,
							["Key"] = "Descxoff",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Player Name Text X-offset",
						}, -- [14]
					},
					["LastHookEdited"] = "",
					["Name"] = "Buff Special Options",
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
					},
					["Time"] = 1677634183,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/lLK9gn7lc/5",
					["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
					["Enabled"] = true,
					["Revision"] = 74,
					["semver"] = "1.0.4",
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
					["Prio"] = 99,
					["version"] = 5,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Arena - Buff-Tracking Mode",
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
					},
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
					},
					["Time"] = 1677634208,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/mEN8Q6zUa/10",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Enabled"] = true,
					["Revision"] = 489,
					["semver"] = "1.0.9",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
					["Prio"] = 99,
					["version"] = 10,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Icon Anchor + Border",
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1674275585,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/ZqU9hBu43/3",
					["Icon"] = 627607,
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "1.0.2",
					["Author"] = "Brewdux-Tarren Mill",
					["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
					["Prio"] = 99,
					["version"] = 3,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Name"] = "Pet Threat Highlighter",
				}, -- [10]
				{
					["OptionsValues"] = {
						["SPglowfreq"] = 0.59999990463257,
						["SPglowxoff"] = 0.5,
						["SPpixelborder"] = false,
						["SPglowyoff"] = 0.5,
						["SPglowparticle"] = 5,
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1674978736,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/uEnDIKvvP/2",
					["Icon"] = 132096,
					["Enabled"] = true,
					["Revision"] = 967,
					["semver"] = "1.0.1",
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Common Options",
							["Name"] = "Common Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
							["Min"] = 1,
							["Key"] = "SPglownum",
							["Value"] = 2,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Glow Type",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Set to negative to inverse direction of rotation",
							["Min"] = -2,
							["Key"] = "SPglowfreq",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Glow Frequency",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "SPglowcolor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0.45490196078431, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set glow color",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Pixel & Ants Glow",
							["Name"] = "Options for Pixel & Ants Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "Set number of lines",
							["Min"] = 1,
							["Key"] = "SPglowparticle",
							["Value"] = 6,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Number of Particles",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Offset of glow relative to region border",
							["Min"] = -10,
							["Key"] = "SPglowxoff",
							["Value"] = 1.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "X-Offset",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Offset of glow relative to region border",
							["Min"] = -10,
							["Key"] = "SPglowyoff",
							["Value"] = 1.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Y-Offset",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Pixel Glow",
							["Name"] = "Options for Pixel Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "SPpixelborder",
							["Value"] = false,
							["Name"] = "Pixel Add Border",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable to true to create border under lines",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set pixel line length",
							["Min"] = 0.01,
							["Key"] = "SPpixellength",
							["Value"] = 6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Pixel Line Length",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Set pixel line thickness",
							["Min"] = 0.01,
							["Key"] = "SPpixelth",
							["Value"] = 2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Pixel Line Thickness",
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Options for Ants Glow",
							["Name"] = "Options for Ants Glow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 2.5,
							["Desc"] = "Set ants glow scale",
							["Min"] = 0.01,
							["Key"] = "SPantsscale",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Ants Glow Scale",
						}, -- [17]
					},
					["LastHookEdited"] = "Initialization",
					["Name"] = "Steal/Purge Aura Glow",
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 15\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" \" .. targetNameByColor .. \"\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 15\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" \" .. targetNameByColor .. \"\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677632002,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/jsGuJ8TUI/2",
					["Icon"] = 2126355,
					["Enabled"] = false,
					["Revision"] = 246,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the cast target name with the spell name",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast target on Spell Name",
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634222,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/P35nCfDqx/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
					["Enabled"] = true,
					["Revision"] = 81,
					["semver"] = "1.0.0",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Force Threat Color NPC",
				}, -- [13]
				{
					["OptionsValues"] = {
						["EXEbdrcolor"] = {
							1, -- [1]
							0.37647062540054, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["EXEhbcon"] = false,
						["EXEalert"] = 0,
						["EXEhicolor"] = {
							0.74509805440903, -- [1]
							0.18823531270027, -- [2]
							0.11372549831867, -- [3]
							0, -- [4]
						},
						["onlyNPC"] = true,
						["EXEbdron"] = false,
					},
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
						["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
					},
					["UID"] = "0x6150129e178c7fc5",
					["Hooks"] = {
						["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
					},
					["Time"] = 1677634180,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/uCoprJFNs/3",
					["Icon"] = 135358,
					["Enabled"] = true,
					["Revision"] = 3535,
					["semver"] = "1.0.2",
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
					["Prio"] = 99,
					["version"] = 3,
					["PlaterCore"] = 1,
					["Name"] = "Advanced Execute Range [Fix]",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Execute Color Options",
							["Name"] = "Execute Color Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "EXEhbcon",
							["Value"] = true,
							["Name"] = "Enable Execute Healthbar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable Execute Healthbar Color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "EXEhbcolor",
							["Value"] = {
								0.3921568627451, -- [1]
								0.15294117647059, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Execute Healthbar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Healthbar Color",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "EXEbdron",
							["Value"] = false,
							["Name"] = "Enable Execute Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Enable Execute Border Color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "EXEbdrcolor",
							["Value"] = {
								0.3921568627451, -- [1]
								0.15294117647059, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Execute Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Border Color",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "onlyNPC",
							["Value"] = true,
							["Name"] = "Only on NPC",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Apply these features only on NPC",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "TrackAggro",
							["Value"] = false,
							["Name"] = "Track Aggro Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Execute Divisor Options",
							["Name"] = "Execute Divisor Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 4,
							["Key"] = "EXEhdoff",
							["Value"] = false,
							["Name"] = "Disable Execute Health Divisor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Disable Execute Health Divisor",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "EXEhdcolor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.8500000089407, -- [4]
							},
							["Name"] = "Execute Health Divisor Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Health Divisor Color",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "EXEhicolor",
							["Value"] = {
								0.27843137254902, -- [1]
								0, -- [2]
								1, -- [3]
								0.25, -- [4]
							},
							["Name"] = "Execute Health Indicator Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Execute Health Indicator Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
							["Min"] = 0,
							["Key"] = "EXEalert",
							["Value"] = 13,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Preview Divisor %",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Force set health Divisor alpha value.",
							["Min"] = 0,
							["Key"] = "EXEhdalpha",
							["Value"] = 50,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Divisor Alpha %",
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
					},
					["LastHookEdited"] = "Initialization",
				}, -- [14]
				{
					["OptionsValues"] = {
						["stratas"] = "MEDIUM",
						["castBarColorInterrupt"] = {
							1, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["castBarBorderColorInterrupt"] = {
							0, -- [1]
							1, -- [2]
							0.074509806931019, -- [3]
							1, -- [4]
						},
						["castBarColorSelf"] = {
							1, -- [1]
							0, -- [2]
							0.99607849121094, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.reflectableSpells = {\n        [167385] = true, -- Uber Strike for testing\n        \n        -- -- -- Raids\n        \n        -- -- Vault of the Incarnates\n        [396023] = true, -- Eranog - Incinerating Roar [Non-Targeted]\n        [397113] = true, -- Eranog - Burning Wound\n        [396351] = true, -- Terros - Infused Fallout [Non-Targeted]\n        [380487] = true, -- Terros - Rock Blast [Non-Targeted]\n        [381595] = true, -- Terros - Seismic Assault\n        [372315] = true, -- PC - Frost Spike\n        [372394] = true, -- PC - Lightning Bolt\n        [372027] = true, -- PC - Slashing Blaze\n        [374112] = true, -- Sennarth - Freezing Breath\n        [376851] = true, -- Dathea - Aerial Buffet\n        [385812] = true, -- Dathea - Aerial Slash\n        [376943] = true, -- Dathea - Cyclone [Non-Targeted]\n        [390548] = true, -- Kurog - Sundering Strike\n        [375870] = true, -- Diurna -  Mortal Stoneclaws\n        [378787] = true, -- Diurna - Crushing Stoneclaws\n        [375871] = true, -- Diurna - Wildfire [Non-Targeted]\n        [375873] = true, -- Diurna - Wildfire\n        [375716] = true, -- Diurna - Ice Barrage\n        [375653] = true, -- Diurna - Static Jolt\n        [375457] = true, -- Diurna - Chilling Tantrum [Non-Targeted]\n        [377658] = true, -- Raszageth - Electrified Jaws\n        [386410] = true, -- Raszageth - Thunderous Blast\n        \n        -- -- -- Mythic+\n        \n        -- -- Algeth'ar Academy\n        \n        [374343] = true, -- Echo of Doragosa - Energy Bomb\n        [388862] = true, -- Trash Surge\n        \n        -- -- Court of Starts\n        \n        [211406] = true, -- Trash - Firebolt\n        [209036] = true, -- Trash - Throw Torch\n        [373364] = true, -- Trash - Vampiric Claws\n        [209413] = true, -- Trash - Suppress\n        [211473] = true, -- Trash - Shadow Slash\n        \n        -- -- Halls of Valor\n        \n        [191976] = true, -- Hyrja - Arcing Bolt\n        [192288] = true, -- Trash - Searing Light\n        [198959] = true, -- Trash - Etch\n        [198962] = true, -- Trash - Shattered Rune\n        [198595] = true, -- Trash - Thunderous Bolt\n        \n        -- -- Ruby Life Pools\n        \n        [372808] = true, -- Melidrussa Frigid Shard\n        [373803] = true, -- Melidrussa Cold Claws\n        [371984] = true, -- Trash Icebolt\n        [384194] = true, -- Trash Cinderbolt\n        [385536] = true, -- Trash Flame Dance\n        [373869] = true, -- Trash Burning Touch\n        [392576] = true, -- Trash Thunder Bolt\n        \n        -- -- Shadowmoon Burial Grounds\n        \n        [152814] = true, -- Trash - Shadow Bolt\n        [156722] = true, -- Trash - Void Bolt\n        [398206] = true, -- Trash - Death Blast\n        [153524] = true, -- Trash - Plague Spit\n        [156776] = true, -- Trash - Rending Voidlash\n        \n        -- -- Temple of the Jade Serpent\n        \n        [397801] = true, -- Wise Mari - Hydrolance\n        [114571] = true, -- Lorewalker Stonestep - Agony\n        [106823] = true, -- Liu Flameheart - Serpent Strike\n        [106841] = true, -- Liu Flameheart - Jade Serpent Strike\n        [397888] = true, -- Trash - Hydrolance\n        [397931] = true, -- Trash - Dark Claw\n        [114646] = true, -- Trash - Haunting Gaze\n        [397914] = true, -- Trash - Defiling Mist\n        \n        -- -- The Azure Vault\n        \n        [374789] = true, -- Leymor - Infused Strike\n        [372222] = true, -- Azureblade - Azure Slash [Non-targeted]\n        [373932] = true, -- Azureblade - Illusionary Bolt\n        [384978] = true, -- Dragon - Strike] Dragon Strike\n        [371306] = true, -- Trash - Arcane Bolt\n        [377503] = true, -- Trash - Condensed Frost\n        [389804] = true, -- Trash - Heavy Tome\n        [370764] = true, -- Trash - Piercing Shards\n        \n        -- -- The Nokhud Offensive\n        \n        [384761] = true, -- The Raging Tempest - Wind Burst\n        [382670] = true, -- Teera and Maruuk - Gale Arrow [Non-targeted]\n        [376827] = true, -- Balakar Khan - Conductive Strike\n        [387613] = true, -- Trash - Death Bolt\n        [376829] = true, -- Trash - Thunder Strike\n        [381530] = true, -- Trash - Storm Shock\n        [386012] = true, -- Trash - Stormbolt\n        [376725] = true, -- Trash - Storm Bolt\n        [387127] = true  -- Trash - Chain Lightning\n    };\n    \n    envTable.interruptSpells = {\n        6552 -- Pummel\n    };\n    \n    envTable.castingStrata = modTable.config.stratas;\n    envTable.isWarrior = select(3, UnitClass(\"player\")) == 1;\n    \n    -- Function to apply the reflectable cast bar effects. Returns true if the effects were applied,\n    -- false otherwise.\n    envTable.ApplyReflectable = function (unitFrame, casterId)\n        local spellId = unitFrame.castBar.SpellID;\n        \n        -- IF  You are a warrior\n        -- AND The spell being cast is reflectable\n        -- AND The target is you\n        if envTable.isWarrior and envTable.reflectableSpells[spellId] and UnitIsUnit(casterId .. \"target\", \"player\") then\n            local _, duration = GetSpellCooldown(23920);\n            \n            -- IF Spell reflect is off CD\n            if duration == 0 then\n                Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorSelf);\n                -- Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarColorSelf);\n                return true; -- Effect was applied\n            end\n        end\n        \n        return false; -- No effects\n    end\n    \n    -- Function to apply the interruptible cast bar effects. Returns true if the effects were\n    -- applied, false otherwise.\n    envTable.ApplyInterruptible = function (unitFrame, casterId)\n        -- IF  The spell being cast is interruptible\n        -- AND The caster is an interruptible target\n        if unitFrame.castBar.CanInterrupt and UnitCanAttack(\"player\", casterId) then\n            -- Iterate through all the interrupt spells available to your current class.\n            for _, interruptId in ipairs(envTable.interruptSpells) do\n                local _, duration = GetSpellCooldown(interruptId);\n                -- IF An interrupt is off CD\n                if duration == 0 then\n                    unitFrame:SetFrameStrata(envTable.castingStrata);\n                    Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorInterrupt);\n                    Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarBorderColorInterrupt);\n                    return true; -- Effect was applied\n                end\n            end\n        end\n        \n        return false; -- No effects\n    end\nend",
						["Cast Start"] = "function (self, casterId, unitFrame, envTable, modTable)\n    if envTable.ApplyReflectable(unitFrame, casterId) then\n    elseif envTable.ApplyInterruptible(unitFrame, casterId) then\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    Plater.SetCastBarColor(unitFrame);\n    Plater.SetCastBarBorderColor(unitFrame);\n    Plater.RefreshNameplateStrata(unitFrame);\nend\n\n\n",
					},
					["UID"] = "0x636726a724a7104",
					["Hooks"] = {
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    Plater.SetCastBarColor(unitFrame);\n    Plater.SetCastBarBorderColor(unitFrame);\n    Plater.RefreshNameplateStrata(unitFrame);\nend\n\n\n",
						["Cast Start"] = "function (self, casterId, unitFrame, envTable, modTable)\n    if envTable.ApplyReflectable(unitFrame, casterId) then\n    elseif envTable.ApplyInterruptible(unitFrame, casterId) then\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.reflectableSpells = {\n        [167385] = true, -- Uber Strike for testing\n        \n        -- -- -- Raids\n        \n        -- -- Vault of the Incarnates\n        [396023] = true, -- Eranog - Incinerating Roar [Non-Targeted]\n        [397113] = true, -- Eranog - Burning Wound\n        [396351] = true, -- Terros - Infused Fallout [Non-Targeted]\n        [380487] = true, -- Terros - Rock Blast [Non-Targeted]\n        [381595] = true, -- Terros - Seismic Assault\n        [372315] = true, -- PC - Frost Spike\n        [372394] = true, -- PC - Lightning Bolt\n        [372027] = true, -- PC - Slashing Blaze\n        [374112] = true, -- Sennarth - Freezing Breath\n        [376851] = true, -- Dathea - Aerial Buffet\n        [385812] = true, -- Dathea - Aerial Slash\n        [376943] = true, -- Dathea - Cyclone [Non-Targeted]\n        [390548] = true, -- Kurog - Sundering Strike\n        [375870] = true, -- Diurna -  Mortal Stoneclaws\n        [378787] = true, -- Diurna - Crushing Stoneclaws\n        [375871] = true, -- Diurna - Wildfire [Non-Targeted]\n        [375873] = true, -- Diurna - Wildfire\n        [375716] = true, -- Diurna - Ice Barrage\n        [375653] = true, -- Diurna - Static Jolt\n        [375457] = true, -- Diurna - Chilling Tantrum [Non-Targeted]\n        [377658] = true, -- Raszageth - Electrified Jaws\n        [386410] = true, -- Raszageth - Thunderous Blast\n        \n        -- -- -- Mythic+\n        \n        -- -- Algeth'ar Academy\n        \n        [374343] = true, -- Echo of Doragosa - Energy Bomb\n        [388862] = true, -- Trash Surge\n        \n        -- -- Court of Starts\n        \n        [211406] = true, -- Trash - Firebolt\n        [209036] = true, -- Trash - Throw Torch\n        [373364] = true, -- Trash - Vampiric Claws\n        [209413] = true, -- Trash - Suppress\n        [211473] = true, -- Trash - Shadow Slash\n        \n        -- -- Halls of Valor\n        \n        [191976] = true, -- Hyrja - Arcing Bolt\n        [192288] = true, -- Trash - Searing Light\n        [198959] = true, -- Trash - Etch\n        [198962] = true, -- Trash - Shattered Rune\n        [198595] = true, -- Trash - Thunderous Bolt\n        \n        -- -- Ruby Life Pools\n        \n        [372808] = true, -- Melidrussa Frigid Shard\n        [373803] = true, -- Melidrussa Cold Claws\n        [371984] = true, -- Trash Icebolt\n        [384194] = true, -- Trash Cinderbolt\n        [385536] = true, -- Trash Flame Dance\n        [373869] = true, -- Trash Burning Touch\n        [392576] = true, -- Trash Thunder Bolt\n        \n        -- -- Shadowmoon Burial Grounds\n        \n        [152814] = true, -- Trash - Shadow Bolt\n        [156722] = true, -- Trash - Void Bolt\n        [398206] = true, -- Trash - Death Blast\n        [153524] = true, -- Trash - Plague Spit\n        [156776] = true, -- Trash - Rending Voidlash\n        \n        -- -- Temple of the Jade Serpent\n        \n        [397801] = true, -- Wise Mari - Hydrolance\n        [114571] = true, -- Lorewalker Stonestep - Agony\n        [106823] = true, -- Liu Flameheart - Serpent Strike\n        [106841] = true, -- Liu Flameheart - Jade Serpent Strike\n        [397888] = true, -- Trash - Hydrolance\n        [397931] = true, -- Trash - Dark Claw\n        [114646] = true, -- Trash - Haunting Gaze\n        [397914] = true, -- Trash - Defiling Mist\n        \n        -- -- The Azure Vault\n        \n        [374789] = true, -- Leymor - Infused Strike\n        [372222] = true, -- Azureblade - Azure Slash [Non-targeted]\n        [373932] = true, -- Azureblade - Illusionary Bolt\n        [384978] = true, -- Dragon - Strike] Dragon Strike\n        [371306] = true, -- Trash - Arcane Bolt\n        [377503] = true, -- Trash - Condensed Frost\n        [389804] = true, -- Trash - Heavy Tome\n        [370764] = true, -- Trash - Piercing Shards\n        \n        -- -- The Nokhud Offensive\n        \n        [384761] = true, -- The Raging Tempest - Wind Burst\n        [382670] = true, -- Teera and Maruuk - Gale Arrow [Non-targeted]\n        [376827] = true, -- Balakar Khan - Conductive Strike\n        [387613] = true, -- Trash - Death Bolt\n        [376829] = true, -- Trash - Thunder Strike\n        [381530] = true, -- Trash - Storm Shock\n        [386012] = true, -- Trash - Stormbolt\n        [376725] = true, -- Trash - Storm Bolt\n        [387127] = true  -- Trash - Chain Lightning\n    };\n    \n    envTable.interruptSpells = {\n        6552 -- Pummel\n    };\n    \n    envTable.castingStrata = modTable.config.stratas;\n    envTable.isWarrior = select(3, UnitClass(\"player\")) == 1;\n    \n    -- Function to apply the reflectable cast bar effects. Returns true if the effects were applied,\n    -- false otherwise.\n    envTable.ApplyReflectable = function (unitFrame, casterId)\n        local spellId = unitFrame.castBar.SpellID;\n        \n        -- IF  You are a warrior\n        -- AND The spell being cast is reflectable\n        -- AND The target is you\n        if envTable.isWarrior and envTable.reflectableSpells[spellId] and UnitIsUnit(casterId .. \"target\", \"player\") then\n            local _, duration = GetSpellCooldown(23920);\n            \n            -- IF Spell reflect is off CD\n            if duration == 0 then\n                Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorSelf);\n                -- Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarColorSelf);\n                return true; -- Effect was applied\n            end\n        end\n        \n        return false; -- No effects\n    end\n    \n    -- Function to apply the interruptible cast bar effects. Returns true if the effects were\n    -- applied, false otherwise.\n    envTable.ApplyInterruptible = function (unitFrame, casterId)\n        -- IF  The spell being cast is interruptible\n        -- AND The caster is an interruptible target\n        if unitFrame.castBar.CanInterrupt and UnitCanAttack(\"player\", casterId) then\n            -- Iterate through all the interrupt spells available to your current class.\n            for _, interruptId in ipairs(envTable.interruptSpells) do\n                local _, duration = GetSpellCooldown(interruptId);\n                -- IF An interrupt is off CD\n                if duration == 0 then\n                    unitFrame:SetFrameStrata(envTable.castingStrata);\n                    Plater.SetCastBarColor(unitFrame, modTable.config.castBarColorInterrupt);\n                    Plater.SetCastBarBorderColor(unitFrame, modTable.config.castBarBorderColorInterrupt);\n                    return true; -- Effect was applied\n                end\n            end\n        end\n        \n        return false; -- No effects\n    end\nend",
					},
					["Time"] = 1677634282,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
							["raid"] = true,
							["none"] = true,
						},
						["class"] = {
							["Enabled"] = true,
							["WARRIOR"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["71"] = true,
							["Enabled"] = true,
							["73"] = true,
							["72"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/ACU9YCmh7/6",
					["Icon"] = 132361,
					["Enabled"] = false,
					["Revision"] = 345,
					["semver"] = "1.0.5",
					["Author"] = "Ragebucket-Sen'jin",
					["Desc"] = "A helpful collection of cast bar coloring conditions to make it obvious for when you can reflect or interrupt a spell.",
					["Prio"] = 99,
					["version"] = 6,
					["PlaterCore"] = 1,
					["Name"] = "War Interrupt + Spell Reflect",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "unused1",
							["Value"] = "Reflectable Cast Settings",
							["Name"] = "Section 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "castBarColorSelf",
							["Value"] = {
								0, -- [1]
								0.89803928136826, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color: Targeting you, Spell Reflection off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of cast bar for reflectable spells targeting you. Only applies if you can cast Spell Reflection.",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "unused2",
							["Value"] = 0,
							["Name"] = "Blank 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Key"] = "unused3",
							["Value"] = "Interruptible Cast Settings",
							["Name"] = "Section 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 3,
							["Key"] = "stratas",
							["Value"] = "MEDIUM",
							["Name"] = "Casting Strata",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "When an enemy is casting a spell we can interrupt, change the strata of the unit frame to this configuration option. The strata will revert to the default after the cast ends.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castBarColorInterrupt",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.015686275437474, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color: Can interrupt, interrupt off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar for spells you can interrupt. This color is only applied if your interrupt is off cooldown.",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "castBarBorderColorInterrupt",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.047058828175068, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Border Color: Can interrupt, interrupt off CD",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar border for spells you can interrupt. This color is only applied if your interrupt is off cooldown.",
						}, -- [7]
					},
					["LastHookEdited"] = "",
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" | \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
					},
					["Hooks"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" | \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
					},
					["Time"] = 1677775283,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/UMY67A2bw/1",
					["Icon"] = 237031,
					["Enabled"] = true,
					["Revision"] = 98,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Name"] = "Health / Max Health (%)",
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        \n        -- Dungeons\n        [196642] = false, -- Hungry Lasher (Boss add)\n        [197398] = false, -- Hungry Lasher\n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["UID"] = "0x62f9521d664ad",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        \n        -- Dungeons\n        [196642] = false, -- Hungry Lasher (Boss add)\n        [197398] = false, -- Hungry Lasher\n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1677634238,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 458228,
					["Enabled"] = true,
					["Revision"] = 168,
					["semver"] = "",
					["Author"] = "Viashi-Argent Dawn",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Performance Units",
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "performance",
							["Value"] = true,
							["Name"] = "Performance",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "forceBlizz",
							["Value"] = false,
							["Name"] = "Force Blizzard",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
					},
					["LastHookEdited"] = "",
				}, -- [17]
				{
					["OptionsValues"] = {
						["specialColorsForNonInterruptibleEnabled"] = true,
						["platerCastColorsEnabled"] = true,
						["kickReadyInTimeColor"] = {
							1, -- [1]
							1, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["specialColors"] = {
							{
								"116", -- [1]
								"yellow", -- [2]
							}, -- [1]
						},
						["noKickReadyColor"] = {
							1, -- [1]
							0.54901963472366, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["kickOutOfRangeColor"] = {
							1, -- [1]
							0.54901963472366, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["kickReadyInTimeGraceTime"] = 0.099999994039536,
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
						["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 or specId == 105 then\n                interruptIDs[106839] = true -- feral/guardian/resto\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            interruptIDs[116705] = true --WW/BM/MW\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            interruptIDs[96231] = true --prot/ret/holy\n            if specId == 66 then\n                interruptIDs[31935] = true --prot avenger's shield\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        elseif Plater.PlayerClass == \"EVOKER\" then\n            interruptIDs[351338] = true --quell talent\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 or specId == 105 then\n                interruptIDs[106839] = true -- feral/guardian/resto\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            interruptIDs[116705] = true --WW/BM/MW\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            interruptIDs[96231] = true --prot/ret/holy\n            if specId == 66 then\n                interruptIDs[31935] = true --prot avenger's shield\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        elseif Plater.PlayerClass == \"EVOKER\" then\n            interruptIDs[351338] = true --quell talent\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
					},
					["Time"] = 1677634103,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["SHAMAN"] = true,
							["MAGE"] = true,
							["ROGUE"] = true,
							["PRIEST"] = true,
							["EVOKER"] = true,
							["HUNTER"] = true,
							["WARLOCK"] = true,
							["DEMONHUNTER"] = true,
							["PALADIN"] = true,
							["DRUID"] = true,
							["MONK"] = true,
							["DEATHKNIGHT"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/jHilJiXiY/40",
					["Icon"] = 132219,
					["Enabled"] = false,
					["Revision"] = 876,
					["semver"] = "1.3.0",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
					["Prio"] = 99,
					["version"] = 40,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option8",
							["Value"] = "General:",
							["Name"] = "General:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "noKickReadyColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick not Ready Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "kickReadyInTimeColor",
							["Value"] = {
								0.50196078431373, -- [1]
								0, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick Ready in Time Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "kickOutOfRangeColor",
							["Value"] = {
								1, -- [1]
								0.54901960784314, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Kick out of Range Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "kickOutOfRangeEnabled",
							["Value"] = false,
							["Name"] = "Check 'Out Of Range'",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "kickReadyInTimeGraceTime",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Reaction grace Time",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "specialColorsEnabled",
							["Value"] = false,
							["Name"] = "Enable special Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "platerCastColorsEnabled",
							["Value"] = false,
							["Name"] = "Enable Plater Cast Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "specialColorsForNonInterruptibleEnabled",
							["Value"] = false,
							["Name"] = "Use Cast Colors for not-interruptible",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Option 10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option7",
							["Value"] = "Spark:",
							["Name"] = "Spark:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showSpark",
							["Value"] = true,
							["Name"] = "Show Spark",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 4,
							["Key"] = "sparkWidth",
							["Value"] = 12,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Spark Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "",
							["Min"] = 1,
							["Key"] = "sparkTexture",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Spark Texure",
						}, -- [15]
						{
							["Type"] = 7,
							["Key"] = "specialColors",
							["Value"] = {
								{
									"116", -- [1]
									"navy", -- [2]
								}, -- [1]
							},
							["Name"] = "Special Cast Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [16]
					},
					["LastHookEdited"] = "",
					["Name"] = "Interrupt not ready Cast Color",
				}, -- [18]
				{
					["OptionsValues"] = {
						["midScale"] = 0.89680552482605,
						["lowScale"] = 0.79971849918365,
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["UID"] = "0x6366dbeb1fda6285",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[\"160325\"] = 1, --Testing Dummy        \n        -- [198594] = 2, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        -- Temple of the Jade Serpent\n        [\"58319\"] = 2, --Lesser Sha\n        [\"62358\"] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [\"195579\"] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm\n        [\"104295\"] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [\"77006\"] = 2, --Corpse Skitterling\n        [\"75451\"] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"196694\"] = 1, --Arcane Forager\n        [\"192329\"] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [\"191313\"] = 2, -- Volatile Sapling\n        [\"187242\"] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [\"190205\"] = 1, --Scorchling\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"187894\"] = 1, --Infused Whelp\n        --[\"188011\"] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [\"178163\"] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [\"163089\"] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [\"166264\"] = 2, --Spare Parts\n        [\"171500\"] = 2, --Shuffling Corpse\n        [\"165138\"] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [\"171455\"] = 2, --Stonewall Gargon\n        [\"168457\"] = 2, --Stonewall Gargon\n        [\"166589\"] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [\"168969\"] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [\"168986\"] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [\"167892\"] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Vault\n        [\"194991\"] = 1, --Oathsworn Vanguard\n        [\"191714\"] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [\"183669\"] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [\"169925\"] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [\"144300\"] = 2, -- \n        [\"189707\"] = 2, --Chaotic Motes\n        -- Fodder to the Flame demons\n        [\"169428\"] = 1,\n        [\"169430\"] = 1,\n        [\"169429\"] = 1,\n        [\"169426\"] = 1,\n        [\"169421\"] = 1,\n        [\"169425\"] = 1,\n        [\"168932\"] = 1,    \n    }\nend",
					},
					["Time"] = 1677634265,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/Ru_9FLVjI/15",
					["Icon"] = 1041231,
					["Enabled"] = true,
					["Revision"] = 1239,
					["semver"] = "1.0.14",
					["Author"] = "Causese-Valdrakken",
					["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
					["Prio"] = 99,
					["version"] = 15,
					["PlaterCore"] = 1,
					["Name"] = "Priority based scaling",
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "scale",
							["Value"] = true,
							["Name"] = "Enable Scaling",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to scale based on priority.",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for mid priority.",
							["Min"] = 0,
							["Key"] = "midScale",
							["Value"] = 0.75,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Mid prio",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set scaling value for low priority.",
							["Min"] = 0,
							["Key"] = "lowScale",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Low prio",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "color",
							["Value"] = false,
							["Name"] = "Enable Coloring",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Allows nameplates to be colored based on priority.",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "midColor",
							["Value"] = {
								1, -- [1]
								0.92941182851791, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Mid prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for mid priority.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "lowColor",
							["Value"] = {
								0.49803924560547, -- [1]
								0.49803924560547, -- [2]
								0.49803924560547, -- [3]
								1, -- [4]
							},
							["Name"] = "Low prio",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set scaling Set color for low priority.",
						}, -- [6]
					},
					["LastHookEdited"] = "Initialization",
				}, -- [19]
				{
					["OptionsValues"] = {
						["replaceName"] = false,
						["hideNameSolo"] = false,
						["castNameSize"] = 45,
						["colorInterruptSoon"] = {
							1, -- [1]
							0.95294123888016, -- [2]
							0.015686275437474, -- [3]
							1, -- [4]
						},
						["colorInterruptAvailable"] = {
							1, -- [1]
							0.95686280727386, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["colorNoInterrupt"] = {
							1, -- [1]
							0.50980395078659, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["colorProtected"] = {
							0.80784320831299, -- [1]
							0.29411765933037, -- [2]
							0.28627452254295, -- [3]
							1, -- [4]
						},
						["colorSecondaryInterrupt"] = {
							1, -- [1]
							0.0078431377187371, -- [2]
							0.78431379795074, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
						["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\",\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [8] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        }                                         \n    }   \n    \nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
					},
					["UID"] = "0x63cc19ce2df2342d",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
						["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\",\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [8] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        }                                         \n    }   \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
					},
					["Time"] = 1677634220,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/L6ZlsbPEC/9",
					["Icon"] = 429383,
					["Enabled"] = true,
					["Revision"] = 1237,
					["semver"] = "1.2.3",
					["Author"] = "Nimeshady-Zul'jin",
					["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
					["Prio"] = 99,
					["version"] = 9,
					["PlaterCore"] = 1,
					["Name"] = "Enhanced Enemy Castbar [Plater]",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Feature - Custom cast bar coloring:",
							["Name"] = "CUSTOM CAST BAR COLORS",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showInterruptColor",
							["Value"] = true,
							["Name"] = "Enable custom colored enemy cast bars.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "showSecondaryInterrupts",
							["Value"] = true,
							["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
						}, -- [3]
						{
							["Type"] = 1,
							["Key"] = "colorInterruptAvailable",
							["Value"] = {
								0.10980392992496, -- [1]
								0.63921570777893, -- [2]
								0.1843137294054, -- [3]
								1, -- [4]
							},
							["Name"] = "Color when my primary interrupt is available.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "colorInterruptSoon",
							["Value"] = {
								0.63921570777893, -- [1]
								0.61568629741669, -- [2]
								0.10980392992496, -- [3]
								1, -- [4]
							},
							["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "colorNoInterrupt",
							["Value"] = {
								0.61960786581039, -- [1]
								0.16862745583057, -- [2]
								0.28627452254295, -- [3]
								1, -- [4]
							},
							["Name"] = "Color when my primary interrupt is unavailable.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "colorSecondaryInterrupt",
							["Value"] = {
								0.10980392992496, -- [1]
								0.52156865596771, -- [2]
								0.63921570777893, -- [3]
								1, -- [4]
							},
							["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "colorProtected",
							["Value"] = {
								0.22352942824364, -- [1]
								0.22352942824364, -- [2]
								0.22352942824364, -- [3]
								1, -- [4]
							},
							["Name"] = "Color for casts that are protected/un-interruptable.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "colorTick",
							["Value"] = {
								0, -- [1]
								1, -- [2]
								0.0078431377187371, -- [3]
								1, -- [4]
							},
							["Name"] = "Color of interrupt available tick. (Hover for more info)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Feature - Show name of target in the cast bar:",
							["Name"] = "Settings Target Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "showTargetName",
							["Value"] = true,
							["Name"] = "Show the name of cast targets in the cast bar.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "hideNameSolo",
							["Value"] = true,
							["Name"] = "Hide my name when not in a party.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "replaceName",
							["Value"] = true,
							["Name"] = "Show \"Me\" instead of my character name.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
							["Min"] = 30,
							["Key"] = "castNameSize",
							["Value"] = 60,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Maximum length of a cast name in %. Hover for more info.",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option8",
							["Value"] = "Feature - Flash nameplates when a spell targets you:",
							["Name"] = "Settings Border Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Namplate Flash",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "nameplateFlash",
							["Value"] = false,
							["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
						}, -- [16]
						{
							["Type"] = 4,
							["Key"] = "hideNameplateFlashSolo",
							["Value"] = true,
							["Name"] = "Hide flash effect when not in a party.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing solo.",
						}, -- [17]
						{
							["Type"] = 4,
							["Key"] = "hideFlashAsTank",
							["Value"] = true,
							["Name"] = "Hide flash effect when I'm playing a tank specialization.",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
						}, -- [18]
					},
					["LastHookEdited"] = "",
				}, -- [20]
			},
			["last_news_time"] = 1675578720,
			["auras_per_row_auto"] = false,
			["cast_statusbar_fadeout_time"] = 0.4999999701976776,
			["aura_stack_size"] = 8,
			["auras_per_row_amount2"] = 2,
			["range_check_power_bar_alpha"] = 0.8999999761581421,
			["range_check_health_bar_alpha"] = 0.8499999642372131,
			["aura_height2"] = 17,
			["ghost_auras"] = {
				["enabled"] = true,
				["auras"] = {
					["DEATHKNIGHT"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["WARRIOR"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["SHAMAN"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["MAGE"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["PRIEST"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
							["589"] = true,
							["34914"] = true,
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["ROGUE"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["EVOKER"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["15"] = {
						},
						["9"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["WARLOCK"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
							[980] = true,
							[172] = true,
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["DEMONHUNTER"] = {
						["5"] = {
						},
						["18"] = {
						},
						["14"] = {
						},
						["20"] = {
						},
						["8"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["19"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["9"] = {
						},
						["15"] = {
						},
						["16"] = {
						},
						["17"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["11"] = {
						},
						["10"] = {
						},
					},
					["PALADIN"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["DRUID"] = {
						["29"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["4"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["25"] = {
						},
						["8"] = {
						},
						["27"] = {
						},
						["17"] = {
						},
						["31"] = {
						},
						["21"] = {
						},
						["11"] = {
						},
						["23"] = {
						},
						["34"] = {
						},
						["28"] = {
						},
						["10"] = {
						},
						["9"] = {
						},
						["30"] = {
						},
						["13"] = {
						},
						["15"] = {
						},
						["18"] = {
						},
						["33"] = {
						},
						["19"] = {
						},
						["14"] = {
						},
						["24"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["20"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["32"] = {
						},
					},
					["MONK"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
					["HUNTER"] = {
						["23"] = {
						},
						["11"] = {
						},
						["21"] = {
						},
						["20"] = {
						},
						["17"] = {
						},
						["27"] = {
						},
						["15"] = {
						},
						["25"] = {
						},
						["24"] = {
						},
						["9"] = {
						},
						["4"] = {
						},
						["19"] = {
						},
						["1"] = {
						},
						["0"] = {
						},
						["3"] = {
						},
						["2"] = {
						},
						["5"] = {
						},
						["18"] = {
						},
						["7"] = {
						},
						["6"] = {
						},
						["14"] = {
						},
						["8"] = {
						},
						["16"] = {
						},
						["26"] = {
						},
						["13"] = {
						},
						["12"] = {
						},
						["22"] = {
						},
						["10"] = {
						},
					},
				},
			},
			["aura_show_crowdcontrol"] = true,
			["health_cutoff"] = false,
			["aura_border_colors"] = {
				["enrage"] = {
					0.70196078431373, -- [1]
					0, -- [2]
					0.054901960784314, -- [3]
				},
				["steal_or_purge"] = {
					nil, -- [1]
					0.92549019607843, -- [2]
					1, -- [3]
				},
				["offensive"] = {
					nil, -- [1]
					0.65098039215686, -- [2]
					0.10196078431373, -- [3]
					0, -- [4]
				},
				["is_show_all"] = {
					0.70196078431373, -- [1]
					0.10196078431373, -- [2]
					0.10196078431373, -- [3]
				},
				["crowdcontrol"] = {
					1, -- [1]
					1, -- [2]
					1, -- [3]
				},
				["is_buff"] = {
					0.65098039215686, -- [1]
					0.011764705882353, -- [2]
					0.090196078431373, -- [3]
					0, -- [4]
				},
			},
			["castbar_target_anchor"] = {
				["y"] = -1.5,
				["x"] = -13,
			},
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["__TrashAt"] = 1677631998,
					["Time"] = 1673672847,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/-ny0jWQDT/2",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = true,
					["Revision"] = 205,
					["semver"] = "1.0.1",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Nameplate Added",
					["Name"] = "Target Border Color",
				}, -- [1]
			},
			["extra_icon_timer_size"] = 11,
			["target_highlight_color"] = {
				0.9921568627451, -- [1]
				1, -- [2]
				0.97254901960784, -- [3]
			},
			["cast_statusbar_color_channeling"] = {
				1, -- [1]
				nil, -- [2]
				0.035294119268656, -- [3]
				0.96000000089407, -- [4]
			},
			["extra_icon_anchor"] = {
				["x"] = -0.5,
			},
			["extra_icon_wide_icon"] = false,
			["extra_icon_stack_outline"] = "OUTLINE",
			["range_check_alpha"] = 0.8999999761581421,
			["click_space"] = {
				nil, -- [1]
				21, -- [2]
			},
			["extra_icon_auras"] = {
				328501, -- [1]
				328986, -- [2]
				204490, -- [3]
			},
			["castbar_target_font"] = "Expressway",
			["semver"] = "3.7.1",
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["aura_frame2_anchor"] = {
				["y"] = 1.300003051757813,
				["x"] = -1.100006103515625,
				["side"] = 1,
			},
			["use_name_translit"] = true,
			["aura_alpha"] = 1,
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
			["auto_toggle_friendly"] = {
				["arena"] = true,
			},
			["indicator_faction"] = false,
			["extra_icon_height"] = 19,
			["aura_x_offset"] = 1.099990844726563,
			["first_run3"] = true,
			["transparency_behavior"] = 2,
			["spell_animations"] = false,
			["debuff_show_cc_border"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
			},
			["aura_stack_color"] = {
				nil, -- [1]
				0, -- [2]
				0.062745098039216, -- [3]
			},
			["aura_consolidate"] = true,
			["health_statusbar_bgtexture"] = "Details Flat",
			["indicator_raidmark_anchor"] = {
				["y"] = 7.819999694824219,
				["x"] = 0,
				["side"] = 12,
			},
			["extra_icon_width"] = 19,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						0.54117647058824, -- [1]
						0.43137254901961, -- [2]
					},
					["anothertank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["aggro"] = {
						0.74509805440903, -- [1]
						0.18823531270027, -- [2]
						0.11372549831867, -- [3]
					},
					["nocombat"] = {
						0.74509803921569, -- [1]
						0.18823529411765, -- [2]
						0.11372549019608, -- [3]
					},
					["noaggro"] = {
						0.8666667342186, -- [1]
						0.43529415130615, -- [2]
					},
					["pulling"] = {
						nil, -- [1]
						0.91372549019608, -- [2]
						0.22745098039216, -- [3]
					},
				},
			},
			["health_statusbar_texture"] = "Details Flat",
			["hook_auto_imported"] = {
				["Color Automation"] = 1,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Hide Neutral Units"] = 1,
				["Aura Reorder"] = 3,
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Bwonsamdi Reaping"] = 1,
				["Jaina Encounter"] = 6,
				["Monk Statue"] = 2,
				["Extra Border"] = 2,
				["Combo Points"] = 6,
				["Targetting Alpha"] = 3,
				["Target Color"] = 3,
				["Attacking Specific Unit"] = 2,
				["Execute Range"] = 1,
			},
			["extra_icon_border_color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
			},
			["update_throttle"] = 0.33000001311302,
			["minor_width_scale"] = 0.99999994039536,
			["indicator_pet"] = false,
			["aura_frame1_anchor"] = {
				["y"] = 1.300003051757813,
				["x"] = 1.099990844726563,
				["side"] = 7,
			},
			["indicator_extra_raidmark"] = false,
			["npc_colors"] = {
				[134139] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198716] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196798] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134012] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136186] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196671] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180431] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115407] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195265] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184140] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168156] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165471] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173016] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180433] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161124] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131585] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[131009] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197697] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132481] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[176598] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164578] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135167] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197698] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175576] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199233] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[126918] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196548] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135552] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[130435] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135169] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[83761] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178008] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[142587] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168418] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[200387] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165222] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198214] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127879] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168420] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165479] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130437] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192333] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134150] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[83763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131849] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[128967] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75899] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199368] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134024] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168934] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190034] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[160495] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[157810] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196045] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194895] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[83765] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128969] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177889] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134284] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[194897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164463] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114584] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[134158] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172265] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150143] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177892] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165872] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168942] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180323] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190426] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162038] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150146] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129548] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[134418] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[97068] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75713] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180070] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138255] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[162040] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195927] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81212] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150276] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[83578] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195928] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135699] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[97197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190686] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195929] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75459] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[118489] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[170483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98285] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168949] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[190688] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168310] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133912] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136470] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[75652] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[155908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129232] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179821] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83389] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157571] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173044] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[154758] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[193760] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[118491] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115486] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157572] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114783] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[105704] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166396] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83390] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129553] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[180335] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162049] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[77700] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196576] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180336] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[170490] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191206] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134174] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[115488] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163458] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162691] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122969] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[197985] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163459] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83392] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[178165] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197219] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165762] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131492] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[76104] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81283] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[86526] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135329] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81603] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[166275] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196198] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198500] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122971] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166276] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168578] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150292] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198501] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162057] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150165] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198502] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135204] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[122972] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[170882] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[99891] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[139425] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180473] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196202] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[138019] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164873] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122973] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[75979] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196203] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186741] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150169] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150297] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[174210] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[182778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165515] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134058] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163086] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173189] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173190] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187768] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[153882] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129370] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[151325] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[153755] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[189816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188026] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168717] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144293] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183423] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165137] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187771] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[139946] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168718] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[144294] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165010] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[200943] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[132530] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191225] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183425] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154014] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[144296] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179334] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132532] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139949] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[130012] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163862] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190588] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[191739] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179847] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144298] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137521] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176523] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133685] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[190206] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180104] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114796] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196856] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96574] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198263] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190207] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165911] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[188673] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104247] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[130909] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135989] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154020] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165529] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191232] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165913] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192767] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114542] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115757] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[155812] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177807] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166299] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[56792] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199547] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164510] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171799] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167963] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180495] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[166301] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114544] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155432] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[199549] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167964] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122984] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[166302] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155433] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[167965] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104251] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163618] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167967] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189706] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[165410] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163620] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83025] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189707] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171805] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168992] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[196102] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188302] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[83026] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114803] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81236] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177817] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135235] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[82579] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151476] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114804] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136643] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[194315] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130661] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[194316] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163882] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195851] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173729] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[135239] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[150712] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[115765] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136391] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156212] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151353] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135241] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156213] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133835] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155830] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[183707] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[182045] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81432] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155831] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[187033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168747] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130025] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163121] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101637] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168109] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192789] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168365] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115640] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130026] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[135246] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[87252] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96587] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176551] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135759] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144071] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[130027] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[59547] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196117] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[163126] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165556] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134994] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131670] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171184] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[188703] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168627] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192796] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135764] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[115388] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197145] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198424] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164921] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[156226] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188067] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168886] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134232] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[133593] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[157634] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[192800] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166970] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[82590] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[177808] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[152009] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[197149] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[150251] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[172981] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166971] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[152905] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136665] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164414] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[115406] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[197406] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114319] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164926] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134364] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[129600] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[187155] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131850] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[166589] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114624] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[197535] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150250] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[174197] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198047] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[152898] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114334] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178141] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170480] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180091] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[76518] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176565] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177716] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[175517] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101326] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165824] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167998] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[32666] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162099] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180429] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168425] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135007] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195696] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135263] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[136139] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[131677] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128434] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127497] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163524] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[114626] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[150253] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[174773] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[138254] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195877] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115642] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131812] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171376] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180015] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179842] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191847] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[193373] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134390] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[131685] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[198308] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114627] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155434] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[163128] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[197146] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187969] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134990] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[196263] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[105715] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190381] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[172021] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168443] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115395] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[80805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[170690] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167876] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199717] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[138465] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164567] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134629] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167493] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198311] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130485] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[127480] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[104270] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199325] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176573] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155090] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155824] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190128] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[114629] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169924] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178392] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167111] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136549] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179388] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151127] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131818] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129527] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168007] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[82597] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[59553] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176575] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168658] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137830] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[176959] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169927] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[169159] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[133482] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[87329] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96664] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[141283] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127482] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167612] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[175992] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176521] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155094] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[116549] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164557] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[141284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[80936] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168318] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[59873] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150168] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131445] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129529] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130488] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[141285] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[95834] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[155221] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127486] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[189878] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[167113] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114266] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114632] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190690] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198702] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[191230] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168396] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[175550] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133870] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[179010] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[127484] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[59552] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[151773] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197799] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164929] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198868] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[114633] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[80938] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[88163] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165919] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[157017] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127111] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170572] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164562] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[175861] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198577] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168594] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162133] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162047] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187154] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164563] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114634] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[196115] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179269] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180474] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[171341] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[178630] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129367] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[164506] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[154744] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[84520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[151649] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[165076] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115402] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129788] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[156157] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200137] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[199595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[156245] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[132491] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[185537] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171343] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161241] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[115019] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[191164] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[194990] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198709] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114316] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[75506] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168882] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[104278] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198326] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[186740] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135846] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[178139] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150160] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167607] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[161243] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[115020] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195930] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[127488] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[129601] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[114317] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[139800] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161244] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180864] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164737] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[95842] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[179841] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[183495] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131587] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162039] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131666] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[164707] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[176974] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[197595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180432] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[104300] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131586] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[198503] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81279] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[178171] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189555] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134137] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[65317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[183497] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[76446] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[190174] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[141938] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[185032] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199124] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[136735] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[151657] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168153] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137591] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[180348] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[141939] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[80816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[179852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
			},
			["aura_timer_text_font"] = "Expressway",
			["aura_width"] = 20,
			["extra_icon_timer_font"] = "Expressway",
			["indicator_rare"] = false,
			["not_affecting_combat_alpha"] = 1,
			["extra_icon_show_purge_border"] = {
				nil, -- [1]
				0.92549019607843, -- [2]
			},
			["cast_statusbar_color_finished"] = {
				0.27843137254902, -- [1]
				0.75294117647059, -- [2]
				0.23529411764706, -- [3]
			},
			["extra_icon_stack_font"] = "Expressway",
			["castbar_target_text_size"] = 9,
			["aura_height"] = 17,
			["non_targeted_alpha_enabled"] = true,
			["script_banned_user"] = {
				["Player-3674-08A5D7A3"] = true,
			},
			["cast_statusbar_bgtexture"] = "Details Flat",
			["aura2_x_offset"] = -1.100006103515625,
			["target_indicator"] = "Double Arrows",
			["range_check_alpha_friendlies"] = 1,
			["color_override_colors"] = {
				[3] = {
					0.74509803921569, -- [1]
					0.18823529411765, -- [2]
					0.11372549019608, -- [3]
				},
				[4] = {
					1, -- [1]
					0.79607843137255, -- [2]
					0.2078431372549, -- [3]
				},
			},
			["indicator_raidmark_scale"] = 0.8499999642372131,
			["aura2_grow_direction"] = 3,
			["range_check_cast_bar_alpha"] = 0.8999999761581421,
			["target_highlight_alpha"] = 0.3499999940395355,
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Aura - Invalidate Unit"] = 1,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit Power"] = 1,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Unit - Show Energy"] = 11,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Cast - Tank Interrupt"] = 12,
				["Blink by Time Left"] = 1,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Explosion Affix M+"] = 14,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Fixate"] = 11,
				["Color Change"] = 1,
				["Spiteful Affix"] = 3,
				["Cast - Stop Casting"] = 4,
				["Auto Set Skull"] = 11,
				["Cast - Quick Flash"] = 2,
				["Add - Non Elite Trash [P]"] = 4,
				["Unit - Health Markers"] = 12,
				["Aura Border Color"] = 1,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Unit - Important"] = 11,
				["Aura - Buff Alert"] = 15,
				["Cast - Very Important"] = 15,
				["Fixate On You"] = 11,
			},
			["target_shady_alpha"] = 0,
			["extra_icon_use_blizzard_border_color"] = false,
			["tap_denied_color"] = {
				0.46666666666667, -- [1]
				0.46666666666667, -- [2]
				0.46666666666667, -- [3]
			},
			["range_check_enabled"] = false,
			["extra_icon_timer_outline"] = "OUTLINE",
			["aura_show_enrage"] = true,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateOverlapV"] = "1.5",
				["nameplateLargeTopInset"] = "0.03999999910593",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplatePersonalShowInCombat"] = "0",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateTargetBehindMaxDistance"] = "15",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.048449993133545",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "0.99656772613525",
				["nameplateLargerScale"] = "1",
				["ShowClassColorInNameplate"] = "1",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateMotion"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "0",
				["nameplateMinScale"] = "1",
				["nameplateOccludedAlphaMult"] = "0.5",
				["nameplateOtherTopInset"] = "0.03999999910593",
				["nameplateOtherAtBase"] = "0",
				["nameplateSelfBottomInset"] = "0.19999998807907",
				["nameplateShowEnemyTotems"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateSelfAlpha"] = "1",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateShowFriends"] = "0",
				["nameplateOverlapH"] = "0.75",
			},
			["aura_width2"] = 20,
			["aura_grow_direction"] = 1,
			["login_counter"] = 45568,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				1, -- [1]
				1, -- [2]
			},
			["version"] = 85,
			["target_highlight_height"] = 15,
			["target_shady_enabled"] = false,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["aura_sort"] = true,
			["bossmod_aura_height"] = 32.105155944824,
			["patch_version"] = 24,
			["aura_stack_font"] = "Expressway",
			["cast_statusbar_color_interrupted"] = {
				0.8, -- [1]
				0.30196078431373, -- [2]
				0.30196078431373, -- [3]
			},
			["aura_timer_text_size"] = 9,
			["range_check_in_range_or_target_alpha"] = 1,
			["range_check_buffs_alpha"] = 0.8999999761581421,
			["extra_icon_show_offensive_border"] = {
				nil, -- [1]
				0.65098039215686, -- [2]
				0.10196078431373, -- [3]
			},
			["extra_icon_auras_mine"] = {
				["Plague Bomb"] = false,
				["209859"] = false,
				["Serrated Bone Spike"] = true,
				["Violent Detonation"] = false,
			},
			["number_region_first_run"] = true,
			["cast_statusbar_color"] = {
				nil, -- [1]
				1, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["target_highlight"] = false,
			["extra_icon_caster_font"] = "Expressway",
			["show_health_prediction"] = false,
			["aura_tracker"] = {
				["debuff"] = {
					315341, -- [1]
					207756, -- [2]
					280322, -- [3]
					340075, -- [4]
					316220, -- [5]
					280321, -- [6]
					319504, -- [7]
					256495, -- [8]
					190533, -- [9]
					345569, -- [10]
					347037, -- [11]
				},
				["buff_tracked"] = {
					["227931"] = true,
					["365338"] = true,
					["389808"] = true,
					["343502"] = false,
					["297133"] = true,
					["385528"] = true,
					["209859"] = true,
					["343503"] = true,
					["163689"] = true,
					["233210"] = true,
					["338510"] = false,
				},
				["buff"] = {
					273607, -- [1]
					283928, -- [2]
					311975, -- [3]
					343208, -- [4]
					197862, -- [5]
					66235, -- [6]
					344548, -- [7]
					189949, -- [8]
					343196, -- [9]
					317929, -- [10]
					259895, -- [11]
					290494, -- [12]
					327993, -- [13]
					322540, -- [14]
					332672, -- [15]
					321708, -- [16]
					305395, -- [17]
					41450, -- [18]
					200327, -- [19]
					290583, -- [20]
					320407, -- [21]
					236801, -- [22]
					194223, -- [23]
					333920, -- [24]
					74001, -- [25]
					212753, -- [26]
					175395, -- [27]
					197874, -- [28]
					200816, -- [29]
					196718, -- [30]
					173898, -- [31]
					315948, -- [32]
					122783, -- [33]
					322108, -- [34]
					343150, -- [35]
					296497, -- [36]
					344363, -- [37]
					205202, -- [38]
					255016, -- [39]
					289626, -- [40]
					337851, -- [41]
					228048, -- [42]
					341857, -- [43]
					23333, -- [44]
					198144, -- [45]
					292152, -- [46]
					321702, -- [47]
					29166, -- [48]
					197061, -- [49]
					215776, -- [50]
					209194, -- [51]
					272682, -- [52]
					212640, -- [53]
					216451, -- [54]
					79542, -- [55]
					187827, -- [56]
					124974, -- [57]
					207812, -- [58]
					212295, -- [59]
					34976, -- [60]
					196555, -- [61]
					129035, -- [62]
					316849, -- [63]
					265314, -- [64]
					69369, -- [65]
					321745, -- [66]
					316828, -- [67]
					278454, -- [68]
					285272, -- [69]
					279043, -- [70]
					203048, -- [71]
					198817, -- [72]
					316834, -- [73]
					344878, -- [74]
					320379, -- [75]
					335255, -- [76]
					231627, -- [77]
					328767, -- [78]
					198111, -- [79]
					125174, -- [80]
					317138, -- [81]
					322110, -- [82]
					284508, -- [83]
					236439, -- [84]
					328682, -- [85]
					325208, -- [86]
					185422, -- [87]
					317138, -- [88]
					213602, -- [89]
					323048, -- [90]
				},
				["buff_banned"] = {
					["286145"] = true,
					["318486"] = true,
					["323961"] = true,
					["333553"] = true,
					["284471"] = true,
					["327416"] = false,
					["396113"] = true,
					["396106"] = true,
					["302564"] = true,
					["292664"] = true,
					["61574"] = true,
					["303380"] = true,
					["343613"] = false,
					["333575"] = true,
					["317602"] = true,
					["333579"] = true,
					["284882"] = true,
					["311571"] = true,
					["268710"] = true,
					["236502"] = true,
					["61573"] = true,
					["206150"] = true,
					["209746"] = true,
					["216777"] = true,
					["5760"] = true,
					["396109"] = true,
					["343553"] = true,
					["266499"] = true,
					["396098"] = true,
				},
				["debuff_banned"] = {
					["331653"] = true,
					["294934"] = true,
					["295367"] = true,
					["169623"] = true,
					["353354"] = true,
					["324260"] = true,
					["394328"] = true,
					["389788"] = false,
					["331016"] = false,
					["394021"] = true,
					["256148"] = true,
					["286581"] = true,
					["204242"] = true,
					["391568"] = true,
					["354052"] = true,
					["273836"] = true,
					["358379"] = true,
					["392388"] = true,
					["314113"] = true,
					["352534"] = true,
					["6343"] = true,
					["281242"] = true,
					["206760"] = true,
					["345466"] = true,
					["279416"] = true,
					["294909"] = true,
					["356372"] = false,
					["5760"] = true,
					["356329"] = true,
					["360277"] = true,
					["255909"] = true,
					["321330"] = true,
				},
				["debuff_tracked"] = {
					["323059"] = false,
					["335372"] = false,
				},
			},
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.1000000238419,
				},
			},
			["indicator_elite"] = false,
			["hover_highlight_alpha"] = 0.5,
			["cast_statusbar_use_fade_effects"] = false,
			["dps"] = {
				["colors"] = {
					["notontank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["noaggro"] = {
						0.74509805440903, -- [1]
						0.18823531270027, -- [2]
						0.11372549831867, -- [3]
					},
					["aggro"] = {
						0.86666666666667, -- [1]
						0.43529411764706, -- [2]
					},
				},
			},
			["pet_height_scale"] = 0.99999994039536,
			["health_statusbar_bgcolor"] = {
				0.21176472306252, -- [1]
				0.21176472306252, -- [2]
				0.21176472306252, -- [3]
				1, -- [4]
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["target_shady_combat_only"] = false,
			["resources"] = {
				["scale"] = 0.79999995231628,
			},
			["pet_width_scale"] = 0.99999994039536,
			["auras_per_row_amount"] = 4,
			["auto_toggle_friendly_enabled"] = true,
			["cast_statusbar_spark_width"] = 10,
			["cast_statusbar_bgcolor"] = {
				0.21176470588235, -- [1]
				0.21176470588235, -- [2]
				0.21176470588235, -- [3]
				0.90000000596046, -- [4]
			},
		},
	},
}
